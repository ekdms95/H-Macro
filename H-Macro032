pr:= a_scriptdir . "\SkinH_EL.dll"
IniRead, aa1, %A_ScriptDir%\RSSINI.ini , A1 , Key1
aa1:= aa1
SkinForm(Apply,pr,aa1)

SkinForm(Param1 = "Apply", DLL = "", SkinName = ""){
    if(Param1 = Apply){
        DllCall("LoadLibrary", str, DLL)
        DllCall(DLL . "\SkinH_AttachEx", AStr,SkinName, Str,"")
    }else if(Param1 = 0){
        DllCall(DLL . "\USkinExit")
        }
}
;

Gui,인증: Add, Edit, x12 y63 w90 h20 vId +Center, 아이디
Gui,인증: Add, Edit, x12 y93 w90 h20 vPW +Password* + Center, 비밀번호
Gui,인증: Add, Picture, x12 y13 w180 h40 , C:\Users\Administrator\Desktop\새버전\이미지\Hmacro.png
Gui,인증: Add, Button, x112 y63 w80 h20 g접속, 접속
Gui,인증: Add, Button, x112 y93 w80 h20 g카페가입, 카페가입
Gui,인증: Show, x384 y422 h131 w206, H-로그인
return


접속:

Gui,Submit,Nohide

Data = enctp=1&svctype=0&id=%Id%&pw=%PW%
winHttp := comObjcreate("winhttp.winhttprequest.5.1")
winhttp.Open("POST","https://nid.naver.com/nidlogin.login?svctype=262144")
Winhttp.SetRequestHeader("Referer","https://nid.naver.com/nidlogin.login?svctype=262144")
WinHttp.SetRequestHeader("Content-Type","application/x-www-form-urlencoded")
winhttp.send(data)
winhttp.waitforResponse()
a := winhttp.responsetext
ifinstring,a,https://nid.naver.com/login/sso/finalize.nhn?
{
	msgbox, 인증되었습니다
    goto, go1
}
else
{
	msgbox, 카페 가입후 이용해주세요
}
return

카페가입:
run, http://cafe.naver.com/hmacro12
return




ReadURL(URL, encoding = "utf-8") {
	static a := "AutoHotkey/" A_AhkVersion
	if (!DllCall("LoadLibrary", "str", "wininet") || !(h := DllCall("wininet\InternetOpen", "str", a, "uint", 1, "ptr", 0, "ptr", 0, "uint", 0, "ptr")))
		return 0
	c := s := 0, o := ""
	if (f := DllCall("wininet\InternetOpenUrl", "ptr", h, "str", url, "ptr", 0, "uint", 0, "uint", 0x80003000, "ptr", 0, "ptr"))
	{
		while (DllCall("wininet\InternetQueryDataAvailable", "ptr", f, "uint*", s, "uint", 0, "ptr", 0) && s > 0)
		{
			VarSetCapacity(b, s, 0)
			DllCall("wininet\InternetReadFile", "ptr", f, "ptr", &b, "uint", s, "uint*", r)
			o .= StrGet(&b, r >> (encoding = "utf-16" || encoding = "cp1200"), encoding)
		}
		DllCall("wininet\InternetCloseHandle", "ptr", f)
	}
	DllCall("wininet\InternetCloseHandle", "ptr", h)
	return o
}

Go1:

global Version := 032


URL := "https://raw.githubusercontent.com/ekqls1995/H-Macro/master/Version"
Adress := ReadURL(URL)

urldownloadtofile,https://raw.githubusercontent.com/ekqls1995/H-Macro/master/Version, Check.txt
If(FileExist("check%a%.txt"))
{
	filedelete, check.txt
}
fileread,A,check.txt
ifinstring, A, %Version%
{
	filedelete,check.txt
	msgbox,최신버전입니다.
    run,업데이트로그.txt
	goto, Go
}
Else
{
	filedelete,check.txt
	msgbox,,최신버전이 아닙니다, 다운로드를 시작합니다.
	UrlDownloadtofile,https://github.com/ekqls1995/H-Macro/raw/master/H-Update.zip,H-Update.zip
	runwait,H-Update.zip
}

Go:


;global Mversion := 29

;URL := "https://raw.githubusercontent.com/ekqls1995/BoL/master/version"
;Result := ReadURL(URL)
;If (Mversion ! Result)
;{
;    Msgbox, 현재버전 %result%
;    msgbox, 업데이트를 다운로드합니다
;}


;ReadURL(URL, encoding = "utf-8") {
;	static a := "AutoHotkey/" A_AhkVersion;
;	if (!DllCall("LoadLibrary", "str", "wininet") || !(h := DllCall("wininet\InternetOpen", "str", a, "uint", 1, "ptr", 0, "ptr", 0, "uint", 0, "ptr")))
;		return 0
;	c := s := 0, o := ""
;	if (f := DllCall("wininet\InternetOpenUrl", "ptr", h, "str", url, "ptr", 0, "uint", 0, "uint", ;0x80003000, "ptr", 0, "ptr"))
	;{
	;	while (DllCall("wininet\InternetQueryDataAvailable", "ptr", f, "uint*", s, "uint", 0, "ptr", 0) && s >; 0)
	;	{
	;		VarSetCapacity(b, s, 0)
	;		DllCall("wininet\InternetReadFile", "ptr", f, "ptr", &b, "uint", s, "uint*", r)
	;		o .= StrGet(&b, r >> (encoding = "utf-16" || encoding = "cp1200"), encoding)
	;	}
	;	DllCall("wininet\InternetCloseHandle", "ptr", f)
	;};;
	;DllCall("wininet\InternetCloseHandle", "ptr", h)
	;return o
;}

#NoEnv
#SingleInstance Force
SetBatchLines, -1
SetWinDelay, -1
SetControlDelay, -1
ListLines, Off
SetWorkingDir, %A_WorkingDir%

;;;;;;;;폰트설정;;;;;;;;;;;;;;;

;#Include Gdip.ahk
#Include Class_CustomFont.dll
font1 := New CustomFont("")


;#include EKMLib.ahk	; EKMLib 라이브러리 추가
;key := "096214781768837"  ; 따옴표 사이에 인증번호를 입력합니다.
;EKMLib_Start(key)	; EKMLib 라이브러리 로딩

;;;;;;;;;폰트설정;;;;;;;;;;;;

;스피드설정;
SetDefaultMouseSpeed, 0
SetKeyDelay, -1
SetControlDelay, -1
SetBatchLines, -1
SetWinDelay, -1
SetMouseDelay, -1
;스피드설정;

;--------global 변수 선언---------;

;--- 로그변수들 ---;
global nlog := 2

global 아레나횟수 := 0
global 모험횟수 := 0
global 던전횟수 := 0
global 골드획득 := 0
global 스테소모 := 0
global 노른자획득 := 0
global 분해완료 := 0
global 나탑횟수 := 0
global 요던횟수 := 0

global 아레나
global 모험모드

;global 주맵선택
;global 주스테이지

global 모험팀
global 아레나팀

global 스킨선택


global bmpneedle
global bmphaystack
global RET
global Gdip_SaveBitmapToFile

global gdipToken := Gdip_Startup()
global Image

global ImageSaved

global mspeed
global mdefault
global msafe
global Time_Setting := 50

global 모드


Gui,인증:Destroy
Gui, Font, S13 CFF0000 ,  1훈새마을운동 R
Gui, Add, picture, x8 y0 w160 h40 , 이미지\Hmacro.png

Gui, Font, S10 C000000 ,  1훈새마을운동 R
Gui, Add, Text, x282 y13 w100 h30 , 【제작자 : Melony】

Gui, Font, S10 C000000 ,  1훈새마을운동 R
formattime , nowtime,,yyyy-MM-dd HH:mm:ss
Gui, Add, CheckBox, x72 y83 w-60 h-20 , 아레나
Gui, Add, ListBox, x22 y293 w350 h150 v로그, 【Uka Macro】 ▶ 시작완료||【Uka】 ▶ 매크로 설정 : 표준모드 ||【Uka】 ▶ 오늘은 Touka짱이랑 데이트나 하러갈까나..? :) ||【Uka】 ▶ 설정 로드완료
Gui, Add, GroupBox, x12 y273 w370 h170 , 로그창
Gui, Add, GroupBox, x12 y33 w160 h100 , 주 매크로 설정
Gui, Add, CheckBox, x22 y53 w70 h30 v모험모드, 모험+던전
Gui, Add, CheckBox, x22 y93 w70 h30 v아레나모드, 아레나모드
Gui, Add, GroupBox, x12 y143 w160 h130 , 부 매크로 설정
Gui, Add, CheckBox, x22 y193 w100 h30 v아레나, 아레나 자연입장
Gui, Add, CheckBox, x22 y223 w100 h30 v나선의탑, 나선의탑
Gui, Add, CheckBox, x22 y163 w100 h30 v요일던전, 요일던전
Gui, Add, Button, x253 y123 w80 h30 v블택설정 g블택설정, 블루스택설정
Gui, Add, Button, x192 y183 w50 h30 gTalkroom, 단톡방
Gui, Add, Button, x252 y443 w60 h20 gSavelog, 로그저장
Gui, Add, Button, x187 y123 w70 h30 v매크로설정 g매크로설정, 매크로설정
Gui, Add, Button, x332 y123 w50 h30 v스킨설정 g스킨설정, 스킨설정
Gui, Add, Button, x242 y183 w60 h30 v통계보기 g통계보기, 통계보기
Gui, Add, Button, x122 y163 w40 h30 v요던설정 g요던설정, 설정
Gui, Add, Button, x122 y193 w40 h30 v아레나설정 g아레나설정, 설정
Gui, Add, Button, x122 y223 w40 h30 v나탑설정 g나탑설정, 설정
Gui, Add, Button, x122 y53 w40 h30 v모험설정 g모험설정, 설정
Gui, Add, Button, x122 y93 w40 h30 v주아레나설정 g주아레나설정, 설정
Gui, Add, Button, x192 y53 w60 h20 vstart gStart, 시작하기
Gui, Add, GroupBox, x182 y33 w200 h50 , 제어 관리
Gui, Add, Button, x252 y53 w60 h20 gGetpause, 일시중지
Gui, Add, Button, x312 y53 w60 h20 gGetplay, 중지시작
Gui, Add, Text, x192 y85 w190 h20 , 재시작 [리셋] 은 F4를 눌러주세요
Gui, Add, GroupBox, x182 y103 w200 h60 , 필수 설정
Gui, Add, GroupBox, x182 y163 w200 h60 , 옵션
Gui, Add, Button, x312 y443 w60 h20 , 로그삭제
Gui, Add, GroupBox, x182 y223 w200 h50 , 저장 불러오기
Gui, Add, Button, x192 y243 w70 h20 , 모두저장
Gui, Add, Button, x262 y243 w70 h20 , 불러오기
Gui, Add, Button, x302 y183 w70 h30 , 후원하기
Gui, Add, Button, x332 y243 w40 h20 g캡쳐, 캡쳐
Gui, Show, x946 y420 h476 w393, Uka Macro★

Gui, 2: Font, S10 C000000 ,  1훈새마을운동 R
;Gui, 2: Show, x%GuiX% y%GuiY% w%GuiW% h%GuiH%, 모험설정
Gui, 2: Add, GroupBox, x12 y13 w160 h80 , 주 모험 설정
Gui, 2: Add, DropDownList, x62 y35 w50 v주맵선택, 숲|호수|사막|늪|얼음|폐허|무한산|해저|마을|인근
Gui, 2: Add, GroupBox, x12 y103 w330 h110 , 모험 옵션
Gui, 2: Add, DropDownList, x122 y35 w40 v주스테이지 , 1|2|3|4|5|6|7|8|9|10
Gui, 2: Add, Text, x112 y37 w10 h20 , ㅡ
Gui, 2: Add, Text, x22 y38 w40 h30 , 맵 선택
Gui, 2: Add, Text, x22 y70 w40 h20 , 팀 선택
Gui, 2: Add, DropDownList, x62 y66 w100 v모험팀 , 1팀|2팀|3팀|4팀|5팀
Gui, 2: Add, GroupBox, x182 y13 w160 h80 , 모험 스킬 설정
Gui, 2: Add, Text, x192 y50 w40 h30 , 스킬 ▶
Gui, 2: Add, Button, x232 y43 w100 h30 v모험스킬 g모험스킬, 스킬설정
Gui, 2: Add, Radio, x22 y123 w80 h30 Checked v루비사용, 루비 사용
Gui, 2: Add, Radio, x102 y123 w110 h30 v자연스테, 자연 스테만 사용
Gui, 2: Add, Text, x222 y133 w80 h20 , 모험 횟수 설정
Gui, 2: Add, Edit, x312 y130 w25 h20 v모험완료, 0
Gui, 2: Add, Radio, x22 y163 w100 h30 Checked v같은맵, 같은 맵 반복
Gui, 2: Add, Radio, x122 y163 w100 h30 v다음맵, 다음 스테이지
Gui, 2: Add, Text, x228 y170 w40 h30, 난이도
Gui, 2: Add, DropDownList, x272 y168 w50 v모험난이도 , 쉬움|보통|어려움

Gui, 3: Font, S10 C000000 ,  1훈새마을운동 R
Gui,3: Add, GroupBox, x12 y13 w130 h80 , 아레나 팀 설정
Gui,3: Add, Text, x26 y46 w40 h30 , 팀 선택
Gui,3: Add, DropDownList, x72 y43 w50 h20 v주아레나팀 Choose1, 1팀|2팀|3팀|4팀|5팀
Gui,3: Add, GroupBox, x152 y13 w130 h80 , 버프 구매 설정
Gui,3: Add, CheckBox, x162 y33 w100 h20 v공증, 공격력증가
Gui,3: Add, CheckBox, x162 y63 w100 h20 v모두구매, 모두구매
Gui,3: Add, Text, x12 y103 w190 h70 , 주 기능의 아레나 모드는`n루비를 사용하여 돌립니다.`n`n자연입장권 모드는`n부 기능의 아레나를 선택해주세요


Gui, 4: Font, S10 C000000 ,  1훈새마을운동 R
Gui, 4: Add, GroupBox, x12 y13 w140 h150 , 난이도 설정
Gui, 4: Add, Radio, x32 y33 w100 h30 v요던쉬움, 쉬움
Gui, 4: Add, Radio, x32 y63 w100 h30 v요던보통, 보통
Gui, 4: Add, Radio, x32 y93 w100 h30 v요던어려움, 어려움
Gui, 4: Add, Radio, x32 y123 w100 h30 v요던매우어려움, 매우어려움
Gui, 4: Add, GroupBox, x162 y13 w120 h70 , 팀 설정
Gui, 4: Add, DropDownList, x222 y43 w50  v요던팀, 1팀|2팀|3팀|4팀|5팀
Gui, 4: Add, Text, x172 y43 w40 h30 , 팀 선택
Gui, 4: Add, GroupBox, x162 y93 w120 h70 , 스킬 등록
Gui, 4: Add, Text, x172 y123 w50 h20 , 파일선택
Gui, 4: Add, DropDownList, x222 y123 w50 Choose1, 모험스킬|나선의탑스킬

Gui, 5: Font, S10 C000000 ,  1훈새마을운동 R
Gui, 5: Add, GroupBox, x12 y13 w110 h80 , 아레나 팀 설정
Gui, 5: Add, DropDownList, x62 y43 w50 v아레나팀 Choose1 g선택, 1팀|2팀|3팀|4팀|5팀
Gui, 5: Add, Text, x22 y48 w40 h20 , 팀 선택
Gui, 5: Add, Text, x12 y103 w180 h80 , 부 기능의 아레나 모드는`n자연입장권 모드만 지원합니다`n`n루비사용모드는`n주 기능의 아레나를 선택해주세요
Gui, 5: Add, GroupBox, x130 y13 w130 h80 , 버프 구매 설정
Gui, 5: Add, Radio, x140 y33 w100 h20 v구매공증, 공증만 구매
Gui, 5: Add, Radio, x140 y63 w100 h20 v모두구매, 모두 구매

Gui, 6: Font, S10 C000000 ,  1훈새마을운동 R

Gui, 6: Add, GroupBox, x12 y13 w450 h60 , 등반 설정
Gui, 6: Add, CheckBox, x22 y33 w140 h30 v갈수있는데까지, 갈수있는데까지 오르기
Gui, 6: Add, CheckBox, x172 y33 w140 h30 v디지몬교체, 행동불능시 디지몬교체
Gui, 6: Add, GroupBox, x12 y73 w310 h120 , 1턴 스킬 설정
Gui, 6: Add, Picture, x42 y103 w30 h30 vnp1, 스킬\나탑\1.bmp
Gui, 6: Add, CheckBox, x22 y93 w20 h30 vN11, 
Gui, 6: Add, Picture, x102 y103 w30 h30 vnp2, 스킬\나탑\2.bmp
Gui, 6: Add, CheckBox, x82 y93 w20 h30 vN12, 
Gui, 6: Add, CheckBox, x142 y93 w20 h30 vN13, 
Gui, 6: Add, Picture, x162 y103 w30 h30 , 스킬\나탑\3.bmp
Gui, 6: Add, CheckBox, x202 y93 w20 h30 vN14, 
Gui, 6: Add, Picture, x222 y103 w30 h30 , 스킬\나탑\4.bmp
Gui, 6: Add, CheckBox, x262 y93 w20 h30 vN15 , 
Gui, 6: Add, Picture, x282 y103 w30 h30 , 스킬\나탑\5.bmp
Gui, 6: Add, CheckBox, x22 y143 w20 h30 vN16, 
Gui, 6: Add, Picture, x42 y153 w30 h30 , 스킬\나탑\6.bmp
Gui, 6: Add, CheckBox, x82 y143 w20 h30 vN17, 
Gui, 6: Add, Picture, x102 y153 w30 h30 , 스킬\나탑\7.bmp
Gui, 6: Add, CheckBox, x142 y143 w20 h30 vN18, 
Gui, 6: Add, Picture, x162 y153 w30 h30 , 스킬\나탑\8.bmp
Gui, 6: Add, CheckBox, x202 y143 w20 h30 vN19, 
Gui, 6: Add, Picture, x222 y153 w30 h30 , 스킬\나탑\9.bmp
Gui, 6: Add, CheckBox, x262 y143 w20 h30 vN110, 
Gui, 6: Add, Picture, x282 y153 w30 h30 , 스킬\나탑\10.bmp
Gui, 6: Add, GroupBox, x12 y193 w310 h120 , 2턴 스킬 설정
Gui, 6: Add, CheckBox, x22 y213 w20 h30 vN21, 
Gui, 6: Add, Picture, x42 y223 w30 h30 , 스킬\나탑\1.bmp
Gui, 6: Add, CheckBox, x82 y213 w20 h30 vN22, 
Gui, 6: Add, Picture, x102 y223 w30 h30 , 스킬\나탑\2.bmp
Gui, 6: Add, CheckBox, x142 y213 w20 h30 vN23, 
Gui, 6: Add, Picture, x162 y223 w30 h30 , 스킬\나탑\3.bmp
Gui, 6: Add, CheckBox, x202 y213 w20 h30 vN24,
Gui, 6: Add, Picture, x222 y223 w30 h30 , 스킬\나탑\4.bmp
Gui, 6: Add, CheckBox, x262 y213 w20 h30 vN25, 
Gui, 6: Add, Picture, x282 y223 w30 h30 , 스킬\나탑\5.bmp
Gui, 6: Add, CheckBox, x22 y263 w20 h30 vN26, 
Gui, 6: Add, Picture, x42 y273 w30 h30 , 스킬\나탑\6.bmp
Gui, 6: Add, Picture, x102 y273 w30 h30 , 스킬\나탑\7.bmp
Gui, 6: Add, CheckBox, x82 y263 w20 h30 vN27, 
Gui, 6: Add, CheckBox, x142 y263 w20 h30 vN28, 
Gui, 6: Add, Picture, x162 y273 w30 h30 , 스킬\나탑\8.bmp
Gui, 6: Add, CheckBox, x202 y263 w20 h30 vN29, 
Gui, 6: Add, Picture, x222 y273 w30 h30 , 스킬\나탑\9.bmp
Gui, 6: Add, CheckBox, x262 y263 w20 h30 vN210 , 
Gui, 6: Add, Picture, x282 y273 w30 h30 , 스킬\나탑\10.bmp
Gui, 6: Add, CheckBox, x22 y333 w20 h30 vN31,
Gui, 6: Add, Picture, x42 y343 w30 h30 , 스킬\나탑\1.bmp
Gui, 6: Add, GroupBox, x12 y313 w310 h120 , 3턴 스킬 설정
Gui, 6: Add, CheckBox, x82 y333 w20 h30 vN32, 
Gui, 6: Add, Picture, x102 y343 w30 h30 , 스킬\나탑\2.bmp
Gui, 6: Add, CheckBox, x142 y333 w20 h30 vN33, 
Gui, 6: Add, Picture, x162 y343 w30 h30 , 스킬\나탑\3.bmp
Gui, 6: Add, CheckBox, x202 y333 w20 h30 vN34 , 
Gui, 6: Add, Picture, x222 y343 w30 h30 , 스킬\나탑\4.bmp
Gui, 6: Add, CheckBox, x262 y333 w20 h30 vN35, 
Gui, 6: Add, Picture, x282 y343 w30 h30 , 스킬\나탑\5.bmp
Gui, 6: Add, CheckBox, x22 y383 w20 h30 vN36, 
Gui, 6: Add, Picture, x42 y393 w30 h30 , 스킬\나탑\6.bmp
Gui, 6: Add, CheckBox, x82 y383 w20 h30 vN37, 
Gui, 6: Add, Picture, x102 y393 w30 h30 , 스킬\나탑\7.bmp
Gui, 6: Add, CheckBox, x142 y383 w20 h30 vN38, 
Gui, 6: Add, Picture, x162 y393 w30 h30 , 스킬\나탑\8.bmp
Gui, 6: Add, CheckBox, x202 y383 w20 h30 vN39, 
Gui, 6: Add, Picture, x222 y393 w30 h30 , 스킬\나탑\9.bmp
Gui, 6: Add, CheckBox, x262 y383 w20 h30 vN310, 
Gui, 6: Add, Picture, x282 y393 w30 h30 , 스킬\나탑\10.bmp
Gui, 6: Add, Button, x332 y263 w120 h30 G나탑스킬가져오기, 스킬 가져오기
Gui, 6: Add, Text, x332 y113 w130 h30 , ＃한 턴당 스킬은 3개`n까지 체크가능합니다.
Gui, 6: Add, Text, x322 y233 w140 h20 , ▼나탑중일때`, 스킬 캡쳐▼
Gui, 6: Add, Text, x322 y33 w140 h30 , ＃디지몬교체는`n6성(궁극체) 만 지원함.
Gui, 6: Add, Text, x332 y333 w120 h100 , 스킬 가져오기는`n매크로에 1회`n내장되어있습니다.`n`n스킬을 안쓸경우`n수동으로 가져오기를`n눌러주시면`n정상작동합니다.

Gui, 7: Font, S10 C000000 ,  1훈새마을운동 R

Gui, 7: Add, GroupBox, x15 y10 w200 h130 , 통계창
Gui, 7: Add, Text, x20 y30 w55 h15 +Center, 아레나
Gui, 7: Add, Edit, x20 y45 w55 h15 +Center v아레나점수통계, 0
Gui, 7: Add, Text, x85 y30 w53 h15 +Center, 모험모드
Gui, 7: Add, Edit, x85 y45 w55 h15 +Center v모험횟수, 0
Gui, 7: Add, Text, x150 y30 w53 h15 +Center, 던전모드
Gui, 7: Add, Edit, x150 y45 w55 h15 +Center v던전횟수, 0
Gui, 7: Add, Text, x20 y64 w55 h15 +Center, 골드
Gui, 7: Add, Edit, x20 y79 w55 h15 +Center v골드획득, 0
Gui, 7: Add, Text, x85 y64 w73 h15 +Center, 스테소모
Gui, 7: Add, Edit, x85 y79 w55 h15 +Center v스테소모, 0
Gui, 7: Add, Text, x150 y64 w53 h15 +Center, 루비
Gui, 7: Add, Edit, x150 y79 w55 h15 +Center v루비소모, 0
Gui, 7: Add, Text, x20 y98 w53 h15 +Center, 스타코어
Gui, 7: Add, Edit, x20 y115 w55 h15 +Center v분해완료, 0
Gui, 7: Add, Text, x85 y98 w53 h15 +Center, 나선의탑
Gui, 7: Add, Edit, x85 y115 w55 h15 +Center v나탑횟수, 0
Gui, 7: Add, Text, x150 y98 w53 h15 +Center, 요던도전
Gui, 7: Add, Edit, x150 y115 w55 h15 +Center v요던횟수, 0


Gui, 8: Font, S10 C000000 ,  1훈새마을운동 R
Gui, 8: Add, Tab,x12 y13 w500 h500 , 매크로 설정|판매 설정
Gui, 8: Tab, 매크로 설정
Gui, 8: Add, GroupBox, x22 y53 w200 h60 , 매크로 속도 설정
Gui, 8: Add, Radio, x32 y73 w60 h30 vmSpeed, 고속
Gui, 8: Add, Radio, x92 y73 w60 h30 vmDefault Checked, 표준
Gui, 8: Add, Radio, x152 y73 w60 h30 vmSafe, 안전
Gui, 8: Add, GroupBox, x22 y123 w200 h70 , 서치 방식 선택
Gui, 8: Add, Radio, x32 y153 w70 h30 Checked, Gdip
Gui, 8: Add, Radio, x112 y153 w100 h30 , ImageSearch
Gui, 8: Add, Button, x22 y203 w90 h30 ,
Gui, 8: Add, Button, x122 y203 w100 h30 ,
Gui, 8: Add, Text, x22 y253 w200 h60 , 매크로 속도 설정 : 표준`n서치 방식 선택 : Gdip`n`n가장 이상적인 매크로가 돌아갑니다
Gui, 8: Tab, 판매 설정
Gui,8: Add, GroupBox, x22 y43 w270 h160 , 디지몬`,조각 판매
Gui,8: Add, CheckBox, x42 y63 w110 h20 v판매사용, 판매 사용
Gui,8: Add, GroupBox, x32 y93 w240 h100 , 판매 설정
Gui,8: Add, CheckBox, x52 y113 w110 h30 v데이터조각판매, 데이터조각 판매
Gui,8: Add, DropDownList, x162 y123 w80 v데이터등급, 유아기|유년기|성장기
Gui,8: Add, CheckBox, x52 y153 w110 h30 v디지몬판매, 디지몬 판매
Gui,8: Add, DropDownList, x162 y163 w80 v디지몬등급, 유아기|유년기|성장기
Gui,8: Add, CheckBox, x42 y233 w100 h20 v변환사용, 변환사용
Gui,8: Add, GroupBox, x22 y213 w270 h150 , 디지몬 변환
Gui,8: Add, GroupBox, x32 y263 w250 h90 , 변환 설정
Gui,8: Add, CheckBox, x42 y283 w100 h30 v유아기변환, 유아기 변환
Gui,8: Add, CheckBox, x152 y283 w100 h30 v유년기변환, 유년기 변환
Gui,8: Add, CheckBox, x42 y313 w100 h30 v성장기변환, 성장기 변환
Gui,8: Add, CheckBox, x152 y313 w100 h30 v성숙기변환, 성숙기 변환
Gui,8: Add, Text, x22 y373 w270 h100 , 변환,판매 설정을 하기전에 스타팅을`n꼭 잠금해주시길바랍니다`n`n잠금을 하지않아 스타팅을 변환,판매 하는경우 저는`n어떠한 책임도 지지않을것을 분명히 말합니다.

Gui, 9: Font, S10 C000000 ,  1훈새마을운동 R

Gui, 9: Add, GroupBox, x12 y23 w160 h60 , 해상도
Gui, 9: Add, Button, x22 y43 w140 h30 g해상도적용, 해상도 적용
Gui, 9: Add, GroupBox, x12 y93 w160 h200 , 재접속
Gui, 9: Add, CheckBox, x32 y113 w90 h20 v재접속 Checked, 재접속 사용
Gui, 9: Add, Text, x22 y148 w50 h20 , 시간설정
Gui, 9: Add, DropDownList, x118 y145 w45 Choose1 v재접속시간,5분|10분|20분|30분
Gui, 9: Add, Text, x82 y148 w10 h10 , ▶
Gui, 9: Add, Text, x92 y148 w10 h10 , ▶
Gui, 9: Add, CheckBox, x32 y183 w120 h20 , 푸쉬 스테미너 받기
Gui, 9: Add, Text, x32 y213 w120 h70 , 시간은 초 단위입니다`n10분 = 600`n20분 = 1200`n30분 = 1800


Gui, 10: Font, S10 C000000 ,  1훈새마을운동 R
Gui, 10: Add, GroupBox, x12 y3 w200 h60 , 스킨 설정
Gui, 10: Add, Text, x22 y33 w30 h20 , 선택
Gui, 10: Add, DropDownList, x52 y33 w100 v스킨선택, aero|china|compact|kiss|QQ2008|Simple White - 1|Simple White - 2|Simple White - 3|Simple White - 4|Simple White - 5|skinh|whitefire|X2_QQ2009_|X3_QQ
Gui, 10: Add, Button, x162 y23 w40 h30 v적용 g적용, 적용

Gui, 11: Font, S10 C000000 ,  1훈새마을운동 R
Gui, 11: Add, GroupBox, x12 y73 w310 h120 , 1턴 스킬 설정
Gui, 11: Add, Picture, x42 y103 w30 h30 , 스킬\모험\1.bmp
Gui, 11: Add, CheckBox, x22 y93 w20 h30 vM11, 
Gui, 11: Add, Picture, x102 y103 w30 h30 , 스킬\모험\2.bmp
Gui, 11: Add, CheckBox, x82 y93 w20 h30 vM12,
Gui, 11: Add, CheckBox, x142 y93 w20 h30 vM13, 
Gui, 11: Add, Picture, x162 y103 w30 h30 , 스킬\모험\3.bmp
Gui, 11: Add, CheckBox, x202 y93 w20 h30 vM14, 
Gui, 11: Add, Picture, x222 y103 w30 h30 , 스킬\모험\4.bmp
Gui, 11: Add, CheckBox, x262 y93 w20 h30 vM15, 
Gui, 11: Add, Picture, x282 y103 w30 h30 , 스킬\모험\5.bmp
Gui, 11: Add, CheckBox, x22 y143 w20 h30 vM16, 
Gui, 11: Add, Picture, x42 y153 w30 h30 , 스킬\모험\6.bmp
Gui, 11: Add, CheckBox, x82 y143 w20 h30 vM17, 
Gui, 11: Add, Picture, x102 y153 w30 h30 , 스킬\모험\7.bmp
Gui, 11: Add, CheckBox, x142 y143 w20 h30 vM18, 
Gui, 11: Add, Picture, x162 y153 w30 h30 , 스킬\모험\8.bmp
Gui, 11: Add, CheckBox, x202 y143 w20 h30 vM19, 
Gui, 11: Add, Picture, x222 y153 w30 h30 , 스킬\모험\9.bmp
Gui, 11: Add, CheckBox, x262 y143 w20 h30 vM110, 
Gui, 11: Add, Picture, x282 y153 w30 h30 , 스킬\모험\10.bmp
Gui, 11: Add, GroupBox, x12 y193 w310 h120 , 2턴 스킬 설정
Gui, 11: Add, CheckBox, x22 y213 w20 h30 vM21, 
Gui, 11: Add, Picture, x42 y223 w30 h30 , 스킬\모험\1.bmp
Gui, 11: Add, CheckBox, x82 y213 w20 h30 vM22, 
Gui, 11: Add, Picture, x102 y223 w30 h30 , 스킬\모험\2.bmp
Gui, 11: Add, CheckBox, x142 y213 w20 h30 vM23, 
Gui, 11: Add, Picture, x162 y223 w30 h30 , 스킬\모험\3.bmp
Gui, 11: Add, CheckBox, x202 y213 w20 h30 vM24, 
Gui, 11: Add, Picture, x222 y223 w30 h30 , 스킬\모험\4.bmp
Gui, 11: Add, CheckBox, x262 y213 w20 h30 vM25, 
Gui, 11: Add, Picture, x282 y223 w30 h30 , 스킬\모험\5.bmp
Gui, 11: Add, CheckBox, x22 y263 w20 h30 vM26, 
Gui, 11: Add, Picture, x42 y273 w30 h30 , 스킬\모험\6.bmp
Gui, 11: Add, Picture, x102 y273 w30 h30 , 스킬\모험\7.bmp
Gui, 11: Add, CheckBox, x82 y263 w20 h30 vM27, 
Gui, 11: Add, CheckBox, x142 y263 w20 h30 vM28, 
Gui, 11: Add, Picture, x162 y273 w30 h30 , 스킬\모험\8.bmp
Gui, 11: Add, CheckBox, x202 y263 w20 h30 vM29, 
Gui, 11: Add, Picture, x222 y273 w30 h30 , 스킬\모험\9.bmp
Gui, 11: Add, CheckBox, x262 y263 w20 h30 vM210, 
Gui, 11: Add, Picture, x282 y273 w30 h30 , 스킬\모험\10.bmp
Gui, 11: Add, CheckBox, x22 y333 w20 h30 vM31, 
Gui, 11: Add, Picture, x42 y343 w30 h30 , 스킬\모험\1.bmp
Gui, 11: Add, GroupBox, x12 y313 w310 h120 , 3턴 스킬 설정
Gui, 11: Add, CheckBox, x82 y333 w20 h30 vM32, 
Gui, 11: Add, Picture, x102 y343 w30 h30 , 스킬\모험\2.bmp
Gui, 11: Add, CheckBox, x142 y333 w20 h30 vM33, 
Gui, 11: Add, Picture, x162 y343 w30 h30 , 스킬\모험\3.bmp
Gui, 11: Add, CheckBox, x202 y333 w20 h30 vM34, 
Gui, 11: Add, Picture, x222 y343 w30 h30 , 스킬\모험\4.bmp
Gui, 11: Add, CheckBox, x262 y333 w20 h30 vM35, 
Gui, 11: Add, Picture, x282 y343 w30 h30 , 스킬\모험\5.bmp
Gui, 11: Add, CheckBox, x22 y383 w20 h30 vM36, 
Gui, 11: Add, Picture, x42 y393 w30 h30 , 스킬\모험\6.bmp
Gui, 11: Add, CheckBox, x82 y383 w20 h30 vM37, 
Gui, 11: Add, Picture, x102 y393 w30 h30 , 스킬\모험\7.bmp
Gui, 11: Add, CheckBox, x142 y383 w20 h30 vM38, 
Gui, 11: Add, Picture, x162 y393 w30 h30 , 스킬\모험\8.bmp
Gui, 11: Add, CheckBox, x202 y383 w20 h30 vM39, 
Gui, 11: Add, Picture, x222 y393 w30 h30 , 스킬\모험\9.bmp
Gui, 11: Add, CheckBox, x262 y383 w20 h30 vM310, 
Gui, 11: Add, Picture, x282 y393 w30 h30 , 스킬\모험\10.bmp
Gui, 11: Add, Button, x332 y263 w120 h30 g모험스킬가져오기, 스킬 가져오기
Gui, 11: Add, Text, x332 y113 w130 h30 , ＃한 턴당 스킬은 3개`n까지 체크가능합니다.
Gui, 11: Add, Text, x322 y233 w140 h20 , ▼모험중일때`, 스킬 캡쳐▼
Gui, 11: Add, Text, x332 y333 w120 h100 , 스킬 가져오기는`n매크로에 1회`n내장되어있습니다.`n`n스킬을 안쓸경우`n수동으로 가져오기를`n눌러주시면`n정상작동합니다.
Gui, 11: Add, Text, x272 y23 w120 h30 , 모험모드 스킬설정
Gui, 11: Add, CheckBox, x22 y13 w110 h40 , 턴 별 스킬 사용
Gui, 11: Add, CheckBox, x142 y13 w110 h40 , 자동 스킬 사용
불러오기()

Menu, Tray, Icon, ;이미지\공통이미지\BROLY-Black.ico
Menu, TRAY, NoStandard
Menu, tray, add, 활성화 ↔ 비활성화, MenuHandler1
Menu, tray, add , Exit, ExitMenuHandler
return

ExitMenuHandler:
MsgBox, 4,, 프로그램을 종료하시겠습니까?
IfMsgBox Yes
{
    ExitApp
}
else IfMsgBox No
return

MenuHandler1:
F6::
SetTitleMatchMode,2
if(!trayhide)
{
targetwd := "BROLY-SenaMacro"
targetwd1 := "BROLY-SenaMacro"
WinGet, hw_a, ID, %targetwd%
if hw_a=
{
}
hw_parent := DllCall( "GetParent", "uint", hw_a )
WinGet, hw_progman, ID, ahk_class Progman
turnwhat:=DllCall( "SetParent", "uint", hw_a, "uint", hw_progman )
WinMove, ahk_id %hw_a%,,-1500,-1500,
WinSet, Bottom,, ahk_id %hw_a%
WinGet, hw_a2, ID, BlueStacks App Player
WinGetPos, posX, posY, width, height, BlueStacks App Player
IniWrite, %posX%, %OptionFile%, Position, X2
IniWrite, %posY%, %OptionFile%, Position, Y2
WinMove, ahk_id %hw_a2%,,-3000,-3000,
global trayhide := 1
}
else if(trayhide)
{
IniRead, initX, %a_scriptdir%\세팅\설정.ini, Position, X
IniRead, initY, %a_scriptdir%\세팅\설정.ini, Position, Y
IniRead, initX2, %a_scriptdir%\세팅\설정.ini, Position, X2
IniRead, initY2, %a_scriptdir%\세팅\설정.ini, Position, Y2
initX1 := initX
initY1 := initY
if(initX2 < 0 || initY2 < 0)
{
initX2 := 150
initY2 := 150
}
IfWinNotActive, ahk_id %hw_a%
WinActivate, ahk_id %hw_a%
winshow, ahk_id %hw_a%
WinMove, ahk_id %hw_a%,, %initX1%, %initY1%,
turnwhat1:=DllCall( "SetParent", "uint", hw_a, "uint", hw_parent )
WinGet, hw_a2, ID, BlueStacks App Player
WinMove, ahk_id %hw_a2%,,%initX2%, %initY2%,
global trayhide := 0
}
return

적용:
{
    gui,10: submit,nohide
    
    if 스킨선택 = %스킨선택%
    {
    Iniwrite %A_SCriptDir%\she\%스킨선택%.she, %A_SCriptDir%\RSSINI.ini, A1,Key1
    reload
    }
}
return

로그(log)
{
    gui,submit,nohide
    formattime , nowtime,,yyyy-MM-dd HH:mm:ss
    Guicontrol,,로그, %nowtime% %log%||
}

Getpause:
pause, on
return

Getplay:
pause, off
return

SaveLog:
logLast := nLog  - 1
fileName := "오류기록\오류기록 " A_DD "일 " A_HOUR "시 " A_MIN "분경 오류파일"
logfilename := fileName ".ini"
bmpfileName := fileName ".png"
IfExist, %logfilename%
FileDelete, %logfilename%
IfExist, %bmpfileName%
FileDelete, %bmpfileName%
global logStart := loglast - 60
if(logStart < 1)
global logStart := 1
Loop
{
	GuiControl, Choose, 로그, %logstart%
	GuiControlGet, 로그
	IniWrite, %로그%, %logfilename%, 오류기록, %logstart%
	if(logStart = loglast)
	break
	logStart++
}
GuiControl, Choose, 로그, nLog
Return



Talkroom:
run, https://open.kakao.com/o/gYLLzij
return

모험설정:
Gui,2: Submit,Nohide
WinGetPos, X, Y, W, H, Uka Macro
GuiX := X + W + 10
GuiY := Y
GuiW := W - 40
GuiH := H - 280
Gui, 2: Show, x%GuiX% y%Guiy% w%Guiw% h%Guih%, 모험 설정
return

요던설정:
Gui,4: Submit,Nohide
WinGetPos, X, Y, W, H, Uka Macro
GuiX := X + W + 10
GuiY := Y
GuiW := W - 100
GuiH := H - 320
Gui, 4: Show, x%GuiX% y%Guiy% w%Guiw% h%Guih%, 요던 설정
return

아레나설정:
Gui,5: Submit,Nohide
WinGetPos, X, Y, W, H, Uka Macro
GuiX := X + W + 10
GuiY := Y
GuiW := W - 120
GuiH := H - 300
Gui, 5: Show, x%GuiX% y%Guiy% w%Guiw% h%Guih%, [부] 아레나 설정
return

모험스킬:
Gui, 11: Submit,nohide
WinGetPos, X, Y, W, H, Uka Macro
GuiX := X + W + 10
GuiY := Y
GuiW := W + 60
GuiH := H
Gui, 11: Show, x%Guix% y%Guiy% h%Guih% w%Guiw%, 모험 스킬 설정
return

스킨설정:
Gui,10: Submit,Nohide
WinGetPos, X, Y, W, H, Uka Macro
GuiX := X + W + 10
GuiY := Y
GuiW := W - 180
GuiH := H - 430
Gui, 10: Show, x%Guix% y%Guiy% h%Guih% w%Guiw%, 스킨 설정
return
    
주아레나설정:
Gui,3: Submit,Nohide
WinGetPos, X, Y, W, H, Uka Macro
GuiX := X + W + 10
GuiY := Y
GuiW := W - 100
GuiH := H - 300
Gui, 3: Show, x%GuiX% y%Guiy% w%Guiw% h%Guih%, [주] 아레나 설정
return

블택설정:
Gui,9: Submit,Nohide
WinGetPos, X, Y, W, H, Uka Macro
GuiX := X + W + 10
GuiY := Y
GuiW := W - 180
GuiH := H - 100
Gui, 9: Show, x%GuiX% y%Guiy% w%Guiw% h%Guih%, 블루스택 설정
return

매크로설정:
Gui,8: Submit,Nohide
WinGetPos, X, Y, W, H, Uka Macro
GuiX := X + W + 10
GuiY := Y
GuiW := W - 100
GuiH := H - 0

Gui, 8: Show, x%GuiX% y%Guiy% w%Guiw% h%Guih%, 매크로 설정
return

통계보기:
Gui,7: Submit,Nohide
WinGetPos, X, Y, W, H, Uka Macro
GuiX := X + W + 10
GuiY := Y
GuiW := W - 170
GuiH := H - 350
Gui, 7: Show, x%GuiX% y%Guiy% w%Guiw% h%Guih%, 통계 보기
return

나탑설정:
Gui,6: Submit,nohide
WinGetPos, X, Y, W, H, Uka Macro
GuiX := X + W + 10
GuiY := Y
GuiW := W + 60
GuiH := H
Gui, 6: Show, x%GuiX% y%Guiy% w%Guiw% h%Guih%, 나탑설정
return

F4::
Reload
불러오기()
return

캡쳐:
F3::
Capture("캡쳐.png")
msgbox, 캡쳐.png 완료 되었습니다!
return


나탑스킬가져오기:
CaptureSquare("스킬\나탑\1.bmp", 370, 315, 415, 355)
CaptureSquare("스킬\나탑\2.bmp", 445, 315, 490, 355)
CaptureSquare("스킬\나탑\3.bmp", 520, 315, 565, 355)
CaptureSquare("스킬\나탑\4.bmp", 595, 315, 640, 355)
CaptureSquare("스킬\나탑\5.bmp", 670, 315, 715, 355)
CaptureSquare("스킬\나탑\6.bmp", 365, 370, 415, 412)
CaptureSquare("스킬\나탑\7.bmp", 440, 370, 490, 412)
CaptureSquare("스킬\나탑\8.bmp", 515, 370, 565, 412)
CaptureSquare("스킬\나탑\9.bmp", 590, 370, 640, 412)
CaptureSquare("스킬\나탑\10.bmp", 665, 370, 715, 412)
msgbox, 캡쳐가 완료 되었습니다.
return

모험스킬가져오기:
CaptureSquare("스킬\모험\1.bmp", 370, 315, 415, 355)
CaptureSquare("스킬\모험\2.bmp", 445, 315, 490, 355)
CaptureSquare("스킬\모험\3.bmp", 520, 315, 565, 355)
CaptureSquare("스킬\모험\4.bmp", 595, 315, 640, 355)
CaptureSquare("스킬\모험\5.bmp", 670, 315, 715, 355)
CaptureSquare("스킬\모험\6.bmp", 365, 370, 415, 412)
CaptureSquare("스킬\모험\7.bmp", 440, 370, 490, 412)
CaptureSquare("스킬\모험\8.bmp", 515, 370, 565, 412)
CaptureSquare("스킬\모험\9.bmp", 590, 370, 640, 412)
CaptureSquare("스킬\모험\10.bmp", 665, 370, 715, 412)
msgbox, 캡쳐가 완료 되었습니다.
return


해상도적용:
REG = HKEY_LOCAL_MACHINE\SOFTWARE\BlueStacks\Guests\Android\FrameBuffer\0
Run, %comspec% /c set regadd=reg add "%REG%" ,,hide
Run, %comspec% /c reg add "%REG%" /v "GuestWidth" /t REG_DWORD /d 1440 /f ,,hide
Run, %comspec% /c reg add "%REG%" /v "GuestHeight" /t REG_DWORD /d 900 /f ,,hide
Run, %comspec% /c reg add "%REG%" /v "WindowWidth" /t REG_DWORD /d 720 /f ,,hide
Run, %comspec% /c reg add "%REG%" /v "WindowHeight" /t REG_DWORD /d 450 /f ,,hide
RegRead, bluestacksDir, HKEY_LOCAL_MACHINE, SOFTWARE\BlueStacks\, InstallDir
hdRestart := bluestacksDir "HD-Restart.exe Android"
RunWait, %hdRestart%
MsgBox,,완료,해상도 변경이 완료되었습니다.
return

/*
MemoryClear:
GMS := GlobalMemoryStatusEx()
TPM := Round(GMS[2] / 1024**2, 2)
APM := Round(GMS[3] / 1024**2, 2)
UPM := Round(TPM - APM, 2)
UPP := Round(UPM / TPM * 100, 2)
GMSC := GlobalMemoryStatusEx()
GMSCA := Round(GMSC[3] / 1024**2, 2)
ClearMemory()
FreeMemory()
GMSC := GlobalMemoryStatusEx()
GMSCB := Round(GMSC[3] / 1024**2, 2)
return
GlobalMemoryStatusEx()
{
static MEMORYSTATUSEX, init := VarSetCapacity(MEMORYSTATUSEX, 64, 0) && NumPut(64, MEMORYSTATUSEX, "UInt")
if (DllCall("Kernel32.dll\GlobalMemoryStatusEx", "Ptr", &MEMORYSTATUSEX))
{
return { 2 : NumGet(MEMORYSTATUSEX, 8, "UInt64")
, 3 : NumGet(MEMORYSTATUSEX, 16, "UInt64") }
}
return
}
ClearMemory()
{
for process in ComObjGet("winmgmts:\\.\root\CIMV2").ExecQuery("SELECT * FROM Win32_Process")
{
handle := DllCall("Kernel32.dll\OpenProcess", "UInt", 0x001F0FFF, "Int", 0, "Int", process.ProcessID)
DllCall("Kernel32.dll\SetProcessWorkingSetSize", "UInt", handle, "Int", -1, "Int", -1)
DllCall("Psapi.dll\EmptyWorkingSet", "UInt", handle)
DllCall("Kernel32.dll\CloseHandle", "Int", handle)
}
return
}
FreeMemory()
{
return DllCall("Psapi.dll\EmptyWorkingSet", "UInt", -1)
}
*/




/*Gdip_ImageSearchWithHwnd(Hwnd,Image,Byref X,Byref Y,Variation=0, sX = 0, sY = 0, eX = 0, eY = 0, Trans="")     
{
    
    formattime , nowtime,,yyyy-MM-dd HH:mm:ss
    ;Guicontrol,,로그, %nowtime% 이미지 저장 및 비교서치 시작||
    ;Sleep, %Time_Setting%
    
    gdipToken := Gdip_Startup()
    bmpHaystack := Gdip_BitmapFromHwnd(Hwnd)
 
    ;-------------------------------------
    ;비활성 캡춰가 제대로 되는지 확인하기 위해 이미지파일로 저장하는 테스트 구문
    static imageSaved
    if !imageSaved and imageSaved := true
    Gdip_SaveBitmapToFile(bmpHaystack, "캡쳐.bmp")
    Guicontrol,,로그, ▶이미지 저장값 = %bmpHaystack%◀||
    ;-------------------------------------
 
    bmpNeedle := Gdip_CreateBitmapFromFile(Image)
    Guicontrol,,로그, ▶이미지 비교값 = %bmpNeedle%◀||
    Sleep, %Time_Setting%
    RET := Gdip_ImageSearch(bmpHaystack,bmpNeedle,LIST,sX,sY,eX,eY,Variation,Trans,1,1)
    
    Guicontrol,,로그, ▶ RET값 = %RET% (1이면 찾음 0이면 없음)◀||
    colorID := Gdip_GetPixel(bmpHaystack, 101,111)
    colors := DEC2HEX(colorID)
    Gdip_DisposeImage(bmpHaystack)
    Gdip_DisposeImage(bmpNeedle)
    Gdip_Shutdown(gdipToken)
    StringSplit, LISTArray, LIST, `,
    X := LISTArray1
    Y := LISTArray2
}
*/

;DEC2HEX(DEC, RARGB="false") 
;{
;SetFormat, IntegerFast, d
;HEX += DEC ;Converts the decimal to hexidecimal
;return HEX
;}

속도조절함수()
{
    (if mSpeed = 1)
    {
        Time_Setting = 200
        모드 := 고속
    }
    
    (if mDefault = 1)
    {
        Time_Setting = 300
        모드 := 표준
    }
    
    (if mSafe = 1)
    {
        Time_Setting = 1000
        모드 := 안전
    }
}
return

;return

CaptureSquare(filename, sX = 0, sY = 0, eX = 0, eY = 0)
{
    pToken := Gdip_Startup()
    WinGetPos, X, Y, W, H, BlueStacks App Player
    SysGet, wFrame, 7
    SysGet, wCaption, 4
    if(sX = 0 && sY = 0 && eX = 0 && eY = 0)
    {
        WinGet, Title , ID, BlueStacks App Player
        snap := Gdip_BitmapFromHwnd(Title)
        Gdip_SaveBitmapToFile(snap, filename)
        Gdip_DisposeImage(snap)
        Gdip_ShutDown(pToken)
        
        msgbox, %ptoken% %snap%
    }
        
        
    else
    {
        
        posX := sX + wFrame
        posY := sY + wCaption + wFrame
        width := eX - sX
        height := eY - sY
        WinGet, Title , ID, BlueStacks App Player
        snap := Gdip_BitmapFromHwnd(Title)
        snap2 := Gdip_CropImage(snap, posX, posY, width, height)
        Gdip_SaveBitmapToFile(snap2, filename)
        Gdip_DisposeImage(snap)
        Gdip_ShutDown(pToken)
    }
}
return

F2::
Start:

Gui,7: Submit,Nohide
WinGetPos, X, Y, W, H, Uka Macro
GuiX := X + W + 10
GuiY := Y
GuiW := W - 170
GuiH := H - 350
Gui, 7: Show, x%GuiX% y%Guiy% w%Guiw% h%Guih%, 통계 보기

WinGet, Title , ID, BlueStacks App Player
GuiControl,,로그, 【Uka Macro】 ▶ %nowtime% ◀ 시작

global 현재시간 := 0
global 마지막동작시간 := 0
global 동작하지않은시간 := 0
FormatTime, 마지막동작시간, , m

Global 아레나점수통계 := 0
global 아레나점수 := 0
global 모험횟수 := 0
global 던전횟수 := 0
global 골드획득 := 0
global 디지몬획득 := 0
global 노른자획득 := 0
global 분해완료 := 0
global 나탑횟수 := 0
global 요던횟수 := 0

global 좌표_서버대륙 := Object(1,"417,313", 2,"284,190", 3,"339,103", 4,"394,308", 5,"225,275", 6, "121,199", 7,"223,128", 8,"457,105", 9, "579,234", 10,"261,192")

Global 좌표_해저 := Object(1, "664,371", 2, "629,234", 3,"541,167", 4,"432,176", 5,"473,304", 6, "231,352", 7, "229,351", 8,"153,244", 9,"321,224", 10,"232,148")
global 좌표_마을 := Object(1, "321,375", 2,"442,376", 3,"553,347", 4,"415,157", 5,"414,154", 6,"335,239", 7,"220,161", 8,"196,299", 9,"65,309", 10,"55,166")
global 좌표_인근 := Object(1, "418,370", 2,"231,362", 3,"126,287", 4,"321,279", 5,"510,285", 6,"637,217", 7,"534,148", 8,"388,160", 9,"221,168", 10,"57,179")
global 좌표_숲 := Object(1, "585,160", 2,"667,254", 3,"502,305", 4,"422,229", 5,"371,352", 6,"245,340", 7,"302,170", 8,"192,196", 9,"108,297", 10,"51,196")
global 좌표_호수 := Object(1, "663,364", 2,"568,286", 3,"451,375", 4,"321,362", 5,"187,295", 6,"76,190", 7,"229,167", 8,"348,227", 9,"473,225", 10,"640,183")
global 좌표_사막 := Object(1, "673,362", 2,"525,378", 3,"378,363", 4,"247,347", 5,"148,261", 6,"271,199", 7,"392,181", 8,"486,246", 9,"635,229", 10,"556,143")
global 좌표_늪 := Object(1, "259,365", 2,"82,323", 3,"180,257", 4,"299,204", 5,"370,331", 6,"487,369", 7,"625,329", 8,"554,246", 9,"436,168", 10,"625,147")
global 좌표_얼음 := Object(1, "53,203", 2,"163,162", 3,"266,216", 4,"241,350", 5,"349,344", 6,"379,201", 7,"496,233", 8,"589,171", 9,"674,261", 10,"562,356")
global 좌표_폐허 := Object(1, "133,160", 2,"310,168", 3,"436,160", 4,"553,157", 5,"561,304", 6,"463,368", 7,"379,299", 8,"296,367", 9,"220,259", 10,"46,251")
global 좌표_무한산 := Object(1, "667,363", 2,"484,368", 3,"276,370", 4,"68,266", 5,"200,267", 6,"370,290", 7,"587,272", 8,"487,183", 9,"346,144", 10,"212,131")

global 루비소모 := 0
global 스킬클릭 := 0

global 주맵선택
global 주스테이지


global 클리어횟수 := 0
Global 재부팅 := 0
Global 모험완료 := 0

global 나선의탑완료 := 0
global 아레나완료 := 0
global 모험모드완료 := 0

global Time_REFRESH := 500

;Global CKImage
;Global ImageName

global mspeed
global mdefault
global msafe
global Time_Setting := 1000
global 메인화면 := 0

global 정렬:= 0
global 판매:= 0

global 모드

formattime , nowtime,,yyyy-MM-dd HH:mm:ss

IfWinNotExist, BlueStacks App Player
{
    run, "C:\Program Files (x86)\BlueStacks\HD-RunApp.exe" -p com.netmaru.digisoul -a com.netmaru.digisoul.AndroidIAP
    GuiControl,, 로그,【블루스택】 블루스택 실행||
    재부팅 := 1
}

IfWinExist, BlueStacks App Player
{
    GuiControl,,로그,【블루스택】 블루스택 감지||
    If(!IsImagePlus(ClickX, ClickX, "이미지\모험\모험입장.bmp",60,0)
    ||!IsImagePlus(ClickX, ClickY, "이미지\스페셜던전.bmp",60,0))
    {
        재부팅 := 1
    }
    
    else
    {
        재부팅 := 0
    }
}


Loop
{
    
    ;msgbox, %아레나완료%
    
    Gui,Submit,Nohide
    Gui,2:Submit,Nohide
    Gui,3:Submit,Nohide
    Gui,4:Submit,Nohide
    Gui,5:Submit,Nohide
    Gui,6:Submit,Nohide
    Gui,7:Submit,Nohide
    Gui,8:Submit,Nohide
    Gui,9:Submit,Nohide
    Gui,10:Submit,Nohide
    Gui,11:Submit,Nohide
    
    멈춤확인()
    
    WinGet, Title , ID, BlueStacks App Player
    While(재부팅 = 1)
    {
        If(IsImagePlus(ClickX, ClickY, "이미지\접근\디소체.bmp", 60, 0))
        {
            GuiControl,,로그,【이미지서치】 ♥ 디소체.bmp ♥ 서치완료||
            Click(ClickX, ClickY)
            Sleep, 500
        }
        If(IsImagePlus(ClickX, ClickY, "이미지\접근\공지x.bmp", 60, 0))
        {
            GuiControl,,로그,【이미지서치】 ♥ 공지x ♥ 서치완료||
            Click(ClickX, ClickY)
            Sleep, 500
        }
        If(IsImagePlus(ClickX, ClickY, "이미지\접근\공지x2.bmp", 60, 0))
        {
            GuiControl,,로그,【이미지서치】 ♥ 공지x2 ♥ 서치완료||
            Click(ClickX, ClickY)
            Sleep, 500
        }
        If(IsImagePlus(ClickX, ClickY, "이미지\접근\전체이용.bmp", 60, 0))
        {
            GuiControl,,로그,【이미지서치】 ♥ 전체이용.bmp ♥ 서치완료||
            Click(ClickX, ClickY)
            Sleep, 500
        }
        If(IsImagePlus(ClickX, ClickY, "이미지\접근\오늘더이상.bmp", 60, 0))
        {
            GuiControl,,로그,【이미지서치】 ♥ 오늘더이상.bmp ♥ 서치완료||
            InputKey(ESC)
            Sleep, 500
            InputKey(ESC)
            Sleep, 500
            재부팅 := 0
            ;Title = BlueStacks App Player
            ;wParam := 0x1B
            ;lParam := 0x10001
            ;lParam1 := 0xC0010001
        
            ;PostMessage, 0x100, 0x1B, 0x10001, , BlueStacks App Player
            ;PostMessage, 0x101, 0x1B, 0xC0010001, , BlueStacks App Player
        }
        If(IsImagePlus(ClickX, ClickY, "이미지\접근\게임종료.bmp", 60, 0))
        {
            GuiControl,,로그,【이미지서치】 ♥ 게임종료.bmp ♥ 서치완료||
            Click(411, 273)
            Sleep, 500
            재부팅 := 0
        }
    }
    
    ;주매크로 아레나
    While( 아레나모드 = 1 )
    {
        If(IsImagePlus(ClickX, ClickY, "이미지\스페셜던전.bmp", 60, 0))
        {
            GuiControl,,로그,【함수실행】 》》아레나무한《《||
            아레나무한()
        }
    }

    ;아레나먼저
    While (아레나 = 1 && 아레나완료 = 0 && 아레나모드 = 0 )
    {
        ;msgbox, 아레나찾음
        If(IsImagePlus(ClickX, ClickY, "이미지\스페셜던전.bmp", 60, 0))
        {
            GuiControl,,로그,【함수실행】 》》디지몬아레나《《||
            아레나5판()
        }
    }
    
    ;그다음 나탑
    While ((나선의탑 = 1 && 아레나완료 = 1 && 나선의탑완료 = 0) || (나선의탑 = 1 && 나선의탑완료 = 0))
    {
        If(IsImagePlus(ClickX, ClickY, "이미지\나선의탑\스페셜던전.bmp", 60, 0)
        || IsImagePlus(ClickX, ClickY, "이미지\스페셜던전.bmp", 60, 0))
        {
            GuiControl,,로그,【함수실행】 》》나선의탑《《||
            나선의탑()
        }
    }
    
    While (나선의탑완료 = 1 && 아레나완료 = 1 && 요일던전 = 1)
    {
        If(IsImagePlus(ClickX, ClickY, "이미지\모험\모험입장.bmp",60,0))
        {
            GuiControl,,로그,【함수실행】 》》요일던전《《||
            Click(ClickX, ClickY)
            
        }
    }
    
    
    
    
    While ((나선의탑완료 = 1 && 아레나완료 = 1 && 모험모드 = 1) || (모험모드 = 1))
    {
        
        If(IsImagePlus(ClickX, ClickY, "이미지\접근\게임종료.bmp", 60, 0))
        {
            GuiControl,,로그,【이미지서치】 ♥ 게임종료.bmp ♥ 서치완료||
            Click(411, 273)
            Sleep, 500
        }
        
        If(IsImagePlus(ClickX, ClickY, "이미지\모험\모험입장.bmp",60,0))
        {
            GuiControl,,로그,【함수실행】 》》모험모드《《||
            Click(ClickX, ClickY)
            Sleep,500
            
        }
        
        ; 대륙이동하는부분
        If ((주맵선택 = "해저") || (주맵선택 = "마을") || (주맵선택 = "인근"))
        {
            If(IsImageCheck(ClickX, ClickY, "이미지\모험\파일섬.bmp",60,0))
            {
                GuiControl,,로그,【대륙이동】 서버대륙으로!||
                Click(530,378)
                Sleep,500
                난이도선택서버대륙()
                Sleep,500
            }
        }
        
        ;;대륙이동하는부분
        If ((주맵선택 = "숲") || (주맵선택 = "호수") || (주맵선택 = "사막") || (주맵선택 = "늪") || (주맵선택 = "얼음") || (주맵선택 = "폐허") || (주맵선택 = "무한산"))
        {
            If(IsImageCheck(ClickX, ClickY, "이미지\모험\서버대륙.bmp",60,0))
            {
                GuiControl,,로그,【대륙이동】 파일섬으로!||
                Click(530,378)
                Sleep,500
                난이도선택파일섬()
                Sleep,500
                
            }
        }
        
        

        
        If(IsImageCheck(ClickX, ClickY, "이미지\모험\파일섬.bmp",60,0)
        ||IsImageCheck(ClickX, ClickY, "이미지\모험\서버대륙.bmp",60,0))
        {
            맵스테이지선택()
        }
            
        
        If(IsImageCheck(ClickX, ClickY, "이미지\모험\전투준비.bmp",60,0))
        {
            모험팀선택시작()
        }
        
        
        If(IsImagePlus(ClickX, ClickY, "이미지\모험\1-1.bmp",60,0)
        ||IsImagePlus(ClickX, ClickY, "이미지\모험\1-2.bmp",60,0)
        ||IsImagePlus(ClickX, ClickY, "이미지\모험\1-3.bmp",60,0))
        {
            GuiControl,,로그,【턴인식】 ♥ 1턴 인식완료 ♥||
            Sleep,1000
            1턴스킬m()
            Sleep,1000
        }
            
        If(IsImagePlus(ClickX, ClickY, "이미지\모험\2-2.bmp",60,0)
        ||IsImagePlus(ClickX, ClickY, "이미지\모험\2-3.bmp",60,0))
        {
            GuiControl,,로그,【턴인식】 ♥ 2턴 인식완료 ♥||
            Sleep,1000
            2턴스킬m()
            Sleep,1000
        }
        
        If(IsImagePlus(ClickX, ClickY, "이미지\모험\3-3.bmp",60,0))
        {
            GuiControl,,로그,【턴인식】 ♥ 3턴 인식완료 ♥||
            Sleep,1000
            3턴스킬m()
            Sleep,1000
        }
        
        If(IsImageCheck(ClickX, ClickY, "이미지\모험\루비부족창.bmp",60,0))
        {
            루비소모 := 루비소모 + 10
            Sleep,500
            GuiControl,,로그,【스테미너구매】 ♥ 스테미너구매완료 ♥||
            Sleep,500
            GuiControl,7:,루비소모, %루비소모%
            Click(310,271)
            Sleep,500
        }
        
        If(IsImageCheck(ClickX, ClickY, "이미지\모험\스테미너구입.bmp",60,0))
        {
            ;If(루비사용 = 1)
            ;{
                GuiControl,,로그,【스테미너구매】 ♥ 확인완료 ♥||
                Sleep,500
                Click(360,272)
                Sleep,500
            ;}
        }
        
        If 같은맵 = 1
        {
            If(IsImageCheck(ClickX, ClickY, "이미지\모험\다시하기.bmp",60,0,546,159,677,194))
            {
                GuiControl,,로그,【화면인식】 ♥ 다시하기 ♥||
                Sleep,500
                Click(ClickX, ClickY)
                Sleep,500

                클리어횟수 := 클리어횟수 + 1
                If (아레나 = 1)
                {
                    모험완료 := 30
                }
                
                If(클리어횟수 = 모험완료)
                {
                    모험모드완료 := 1
                    모험모드종료()
                    아레나완료 := 0
                }
            }
        }
        
        If(IsImageCheck(ClickX, ClickY, "이미지\모험\레벨업.bmp",60,0))
        {
            GuiControl,,로그,【레벨업】 ＊레벨업확인＊||
            Sleep,500
            Click(354,276)
            Sleep,500
        }
        
        If 다음맵 = 1
        {
            If(IsImageCheck(ClickX, ClickY, "이미지\모험\다음스테이지.bmp"60,0,546,94,678,130))
            {
                GuiControl,,로그,【화면인식】 ♥ 다음스테이지 ♥||
                Sleep,500
                Click(ClickX, ClickY)
                Sleep,500
                
                클리어횟수 := 클리어횟수 + 1
                If (아레나 = 1)
                {
                    모험완료 := 30
                }

                If (클리어횟수 = 모험완료)
                {
                    모험모드완료 := 1
                    모험모드종료()
                    아레나완료 := 0
                }
            }
        }
        
        If (IsImageCheck(ClickX, ClickY, "이미지\모험\빈공간x.bmp",60,0))
        {
            GuiControl,,로그,【가방부족인식】 ♥ 가방비우러갑니다 ♥
            Sleep,500
            Click(357,273)
            Sleep,500
            
            디지바이스()
            데이터조각판매()
        }
        멈춤확인()
    }
    멈춤확인()
}
return

재부팅함수()
{
    While(재부팅 = 1)
    {
        If(IsImagePlus(ClickX, ClickY, "이미지\접근\디소체.bmp", 60, 0))
        {
            GuiControl,,로그,【이미지서치】 ♥ 디소체.bmp ♥ 서치완료||
            Click(ClickX, ClickY)
            Sleep, 500
        }
        If(IsImagePlus(ClickX, ClickY, "이미지\접근\공지x.bmp", 60, 0))
        {
            GuiControl,,로그,【이미지서치】 ♥ 공지x ♥ 서치완료||
            Click(ClickX, ClickY)
            Sleep, 500
        }
        If(IsImagePlus(ClickX, ClickY, "이미지\접근\공지x2.bmp", 60, 0))
        {
            GuiControl,,로그,【이미지서치】 ♥ 공지x2 ♥ 서치완료||
            Click(ClickX, ClickY)
            Sleep, 500
        }
        If(IsImagePlus(ClickX, ClickY, "이미지\접근\전체이용.bmp", 60, 0))
        {
            GuiControl,,로그,【이미지서치】 ♥ 전체이용.bmp ♥ 서치완료||
            Click(ClickX, ClickY)
            Sleep, 500
        }
        If(IsImagePlus(ClickX, ClickY, "이미지\접근\오늘더이상.bmp", 60, 0))
        {
            GuiControl,,로그,【이미지서치】 ♥ 오늘더이상.bmp ♥ 서치완료||
            InputKey(ESC)
            Sleep, 500
            InputKey(ESC)
            Sleep, 500
            재부팅 := 0
            아레나완료 := 0
            나선의탑완료 := 0
            모험모드완료 := 0
            Gosub, Start
            ;Title = BlueStacks App Player
            ;wParam := 0x1B
            ;lParam := 0x10001
            ;lParam1 := 0xC0010001
        
            ;PostMessage, 0x100, 0x1B, 0x10001, , BlueStacks App Player
            ;PostMessage, 0x101, 0x1B, 0xC0010001, , BlueStacks App Player
        }
        If(IsImagePlus(ClickX, ClickY, "이미지\접근\게임종료.bmp", 60, 0))
        {
            GuiControl,,로그,【이미지서치】 ♥ 게임종료.bmp ♥ 서치완료||
            Click(411, 273)
            Sleep, 500
            재부팅 := 0
            아레나완료 := 0
            나선의탑완료 := 0
            모험모드완료 := 0
            gosub, Start
        }
    }
}

디지바이스()
{
    멈춤확인()
    모험모드완료 := 1
    InputKey(ESC)
    Sleep,500
    InputKey(ESC)
    Sleep,500
    InputKey(Esc)
    Sleep,500
    
    If(IsImageCheck(ClickX, ClickY, "이미지\모험\디지바이스.bmp",60,0))
    {
        GuiControl,,로그,【이미지서치】 ＊디지바이스＊
        Sleep,500
        Click(ClickX,ClickY)
    }
}

디지몬판매()
{
    If(IsImageCheck(ClickX, ClickY, "이미지\모험\데이터조각.bmp",60,0))
    {
        GuiControl,,로그,【이미지서치】 ＊데이터조각＊
        Sleep,500
        Click(ClickX, ClickY)
    }
}

sendDrag10( x, y)
{
    global ActiveID
    SysGet, capH, 4 ; 캡션Height
    SysGet, bordW, 32 ; 보더Width
    SysGet, bordH, 33 ; 보더Height

    px:=x-bordW/2
    py:=y-bordH/2-capH

    p := px|py<<16
    p1 := px+100|py<<16
    PostMessage, 0x201, 1, %p%, , % ActiveID
    Sleep, 100

    PostMessage, 0x201, 1, %p1%, , % ActiveID 
    Sleep, 200
    Return 
}

sendDrag11( x, y)
{
    global ActiveID
    SysGet, capH, 4 ; 캡션Height
    SysGet, bordW, 32 ; 보더Width
    SysGet, bordH, 33 ; 보더Height

    px:=x-bordW/2
    py:=y-bordH/2-capH

    p := px|py<<16

    PostMessage, 0x200, 1, %p%, , % ActiveID
    
    Sleep, 100
    Return 
}

sendDrag12( x, y)
{
    oldCoor := oldX | oldY<<16
    newCoor := newX | newY<<16
    WinGet, ActiveID, ID, BlueStacks App Player

    px:=x-bordW/2
    py:=y-bordH/2-capH

    p := px|py<<16

 PostMessage, 0x202, 2, %p%, , % ActiveID
    
    Sleep, 100
    Return 
}

데이터조각판매()
{
    멈춤확인()

;Drag(458,249,458,149)
While(정렬 = 0)
{
    If(IsImageCheck(ClickX, ClickY, "이미지\모험\데이터조각.bmp",60,0))
    {
        GuiControl,,로그,【이미지서치】 ＊정렬＊ 서치완료||
        Click(ClickX, ClickY)
        Sleep,500
    }

    If(IsImageCheck(ClickX, ClickY, "이미지\모험\정렬.bmp",60,0))
    {
        GuiControl,,로그,【이미지서치】 ＊등급▼＊ 서치완료||
        Click(ClickX, ClickY)
        Sleep,500
    }

    If(IsImageCheck(ClickX, ClickY, "이미지\모험\확인.bmp",60,0))
    {
        GuiControl,,로그,【이미지서치】 ＊확인＊ 서치완료||
        Click(ClickX, ClickY)
        Sleep,500
        정렬 := 1
    }
}

;정렬:= 1
While(정렬 = 1)
{
    If(IsImageCheck(ClickX, ClickY, "이미지\모험\판매.bmp",60,0))
    {
        GuiControl,,로그,【이미지서치】 ＊판매＊ 서치완료||
        Click(ClickX, ClickY)
        Sleep,500
        판매 := 1
    }

    If(판매 = 1)
    {
;While(IsImageCheck(ClickX, ClickY, "이미지\모험\디지몬판매.bmp",60,0))
    
    If(IsImageCheck(ClickX, ClickY, "이미지\모험\유아기데이터.bmp",60,0,284,147,372,249)
    &&IsImageCheck(ClickX, ClickY, "이미지\모험\유아기데이터1.bmp",60,0,284,147,372,249)
    &&IsImageCheck(ClickX1, ClickY1, "이미지\모험\유아기데이터2.bmp",60,0,284,147,372,249))
    {
        GuiControl,,로그,【아이템선택】 ＊유아기데이터조각＊||
        Click(ClickX1, ClickY1)
        Sleep,500
    }
    
    If(IsImageCheck(ClickX, ClickY, "이미지\모험\유아기데이터.bmp",60,0,370,149,458,250)
    ||IsImageCheck(ClickX, ClickY, "이미지\모험\유아기데이터1.bmp",60,0,370,149,458,250)
    ||IsImageCheck(ClickX2, ClickY2, "이미지\모험\유아기데이터2.bmp",60,0,370,149,458,250))
    {
        GuiControl,,로그,【아이템선택】 ＊유아기데이터조각＊||
        Click(ClickX2, ClickY2)
        Sleep,500
    }
    
    If(IsImageCheck(ClickX, ClickY, "이미지\모험\유아기데이터.bmp",80,0,464,149,543,251)
    ||IsImageCheck(ClickX, ClickY, "이미지\모험\유아기데이터1.bmp",80,0,464,149,543,251)
    ||IsImageCheck(ClickX3, ClickY3, "이미지\모험\유아기데이터2.bmp",80,0,464,149,543,251))
    {
        GuiControl,,로그,【아이템선택】 ＊유아기데이터조각＊||
        Click(ClickX3, ClickY3)
        Sleep,500
    }
    
    If(IsImageCheck(ClickX, ClickY, "이미지\모험\유아기데이터.bmp",80,0,563,149,628,251)
    ||IsImageCheck(ClickX, ClickY, "이미지\모험\유아기데이터1.bmp",80,0,563,149,628,251)
    ||IsImageCheck(ClickX4, ClickY4, "이미지\모험\유아기데이터2.bmp",80,0,563,149,628,251))
    {
        GuiControl,,로그,【아이템선택】 ＊유아기데이터조각＊||
        Click(ClickX4, ClickY4)
        Sleep,500
        판매:=2
    }
    else
    {
        판매:=3
    }
    
    If(판매 = 2)
    {
        GuiControl,,로그,【아이템판매】 ＊판매시작＊||
        Sleep,1000
        Click(680,143)
        Sleep,1000
        Click(309,275)
        Sleep,1000
        판매:=1
    }
    
    If(판매 = 3)
    {
        If(IsImageCheck(ClickX, ClickY, "이미지\모험\판매끝.bmp",80,0,260,168,259,189)
        ||IsImageCheck(ClickX, CliCky, "이미지\모험\디지몬판매.bmp",60,0))
        {
            GuiControl,,로그,【판매종료】 ＊메인화면으로＊||
            Sleep,1000
            Click(357,276)
            디지바이스나가기()
        }
    }
    
}
}
}

디지바이스나가기()
{
    InputKey(ESC)
    아레나완료:=0
    모험모드완료:=0
    Gosub, Start
}

If(IsImageCheck(ClickX, ClickY, "이미지\모험\성장기.bmp",60,0,244,130,282,144))
{
    msgbox, 성장기
}

If(IsImageCheck(ClickX, ClickY, "이미지\모험\성숙기.bmp",60,0,236,130,290,142))
{
    msgbox,성숙기
}

Drag2(X1, Y1, X2, Y2)
{
  sleep, 200
  SysGet, wCaption, 4
  SysGet, wFrame, 7

  loX := oldX
  loY := oldY
  lnX := newX
  lnY := newY

  X1 := X1  - wFrame
  Y1 := Y1 - wCaption - wFrame
  Coor1 := X1 | Y1<<16
  Coor2 := X1 | Y1 +10<<16

  X2 := X2  - wFrame
  Y2 := Y2 - wCaption - wFrame
  Coor3 := X2 | Y2<<16

  WinGet, ActiveID, ID, BlueStacks App Player

  if not getkeystate("Ctrl" , "p")
  {
   PostMessage, 0x201, 0, %Coor1%,, ahk_id %ActiveID%
   sleep, 300

   PostMessage, 0x201, 0, %Coor2%,, ahk_id %ActiveID%
   sleep, 300

   PostMessage, 0x200, 0, %Coor3%,, ahk_id %ActiveID%
   sleep, 300

   PostMessage, 0x202, 0, %Coor3%,, ahk_id %ActiveID%
   sleep, 300

   PostMessage, 0x201, 0, %Coor3%,, ahk_id %ActiveID%
   sleep, 300

   PostMessage, 0x202, 0, %Coor3%,, ahk_id %ActiveID%


   sleep, 300
  }
      else if getkeystate("Ctrl" , "p")  ; 만약 컨트롤키가 눌려있으면
      {    
        Loop   ; 컨트롤키가 안눌려있을때 까지 loop
        {      
          if not getkeystate("Ctrl" , "p") 
          {       
            PostMessage, 0x201, 0, %oldCoor1%,, ahk_id %ActiveID%
            sleep, 300

            PostMessage, 0x201, 0, %oldCoor2%,, ahk_id %ActiveID%
            sleep, 300

            PostMessage, 0x200, 0, %newCoor%,, ahk_id %ActiveID%
            sleep, 300

            PostMessage, 0x202, 0, %newCoor%,, ahk_id %ActiveID%
            sleep, 300

            PostMessage, 0x201, 0, %newCoor%,, ahk_id %ActiveID%
            sleep, 300

            PostMessage, 0x202, 0, %newCoor%,, ahk_id %ActiveID%


            sleep, 300
            break
          }
          
          sleep, 100
        }
      }
}

모험모드종료()
{
    멈춤확인()
    InPutKey(ESC)
    Sleep,500
    InPutKey(ESC)
    Sleep,500
    InPutKey(ESC)
    Sleep,500
    InPutKey(ESC)
    Sleep,500
    
    If(IsImagePlus(ClickX, ClickY, "이미지\접근\게임종료.bmp", 60, 0))
    {
        GuiControl,,로그,【이미지서치】 ♥ 게임종료.bmp ♥ 서치완료||
        Click(411, 273)
        Sleep, 500
    }
}

맵스테이지선택()
{
    멈춤확인()
    ;Gui,2:Submit,Nohide
    ;GuiControlGet, 주맵선택, 2:
    
    If ( 주맵선택 = "해저" )
    {
            GuiControl,,로그,【맵선택】 ♥ 해저 ♥ 선택||
            Click(417,313)
            Sleep,500
            해저스테이지클릭()
    }
    
    If (주맵선택 = "마을")
    {
            Click(284,190)
            GuiControl,,로그,【맵선택】 ♥ 마을 ♥ 선택||
            Sleep,500
            마을스테이지클릭()
    }
    
    if (주맵선택 = "인근")
    {
            Click(339,103)
            GuiControl,,로그,【맵선택】 ♥ 인근 ♥ 선택||
            Sleep,500
            인근스테이지클릭()
    }
    
    if (주맵선택 = "숲")
    {         
            Click(394,308)
            GuiControl,,로그,【맵선택】 ♥ 숲 ♥ 선택||
            Sleep,500
            숲스테이지클릭()
    }
    
    if (주맵선택 = "호수")
    {         
            Click(225,275)
            GuiControl,,로그,【맵선택】 ♥ 호수 ♥ 선택||
            Sleep,500
            호수스테이지클릭()
    }
    if (주맵선택 = "사막")
    {        
            Click(121,199)
            GuiControl,,로그,【맵선택】 ♥ 사막 ♥ 선택||
            Sleep,500
            사막스테이지클릭()
    }
    if (주맵선택 = "늪")
    {         
            Click(223,128)
            GuiControl,,로그,【맵선택】 ♥ 늪 ♥ 선택||
            Sleep,500
            늪스테이지클릭()
    }
    if (주맵선택 = "얼음")
    {          
            Click(457,105)
            GuiControl,,로그,【맵선택】 ♥ 얼음 ♥ 선택||
            Sleep,500
            얼음스테이지클릭()
    }
    if 주맵선택 = "폐허"
    {         
            Click(579,234)
            GuiControl,,로그,【맵선택】 ♥ 폐허 ♥ 선택||
            Sleep,500
            폐허스테이지클릭()
    }
    
    if (주맵선택 = "무한산")
    {      
            Click(261,192)
            GuiControl,,로그,【맵선택】 ♥ 무한산 ♥ 선택||
            Sleep,500
            무한산스테이지클릭()
    }


}   


해저스테이지클릭()
{
    멈춤확인()
    
    Gui,2:Submit, Nohide
    
    If 주스테이지 = 1
    {
        GuiControl,,로그,【스테이지선택】 ♥ 해저-1 ♥ 선택||
        Click(664,371)
    }
    
    If 주스테이지 = 2
    {
        GuiControl,,로그,【스테이지선택】 ♥ 해저-2 ♥ 선택||
        Click(629,234)
    }
    
    If 주스테이지 = 3
    {
        GuiControl,,로그,【스테이지선택】 ♥ 해저-3 ♥ 선택||
        Click(541,167)
    }
        
    If 주스테이지 = 4
    {
        GuiControl,,로그,【스테이지선택】 ♥ 해저-4 ♥ 선택||
        Click(432,176)
    }
    
    If 주스테이지 = 5
    {
        GuiControl,,로그,【스테이지선택】 ♥ 해저-5 ♥ 선택||
        Click(473,304)
    }
    
    If 주스테이지 = 6
    {
        GuiControl,,로그,【스테이지선택】 ♥ 해저-6 ♥ 선택||
        Click(231,352)
    }
    
    If 주스테이지 = 7
    {
        GuiControl,,로그,【스테이지선택】 ♥ 해저-7 ♥ 선택||
        Click(229,351)
    }
    
    If 주스테이지 = 8
    {
        GuiControl,,로그,【스테이지선택】 ♥ 해저-8 ♥ 선택||
        Click(153,244)
    }
    
    If 주스테이지 = 9
    {
        GuiControl,,로그,【스테이지선택】 ♥ 해저-9 ♥ 선택||
        Click(321,224)
    }
    
    If 주스테이지 = 10
    {
        GuiControl,,로그,【스테이지선택】 ♥ 해저-10 ♥ 선택||
        Click(232,148)
    }
    

}

마을스테이지클릭()
{
    멈춤확인()
    
    Gui,2:Submit, Nohide
    
    If 주스테이지 = 1
    {
        GuiControl,,로그,【스테이지선택】 ♥ 마을-1 ♥ 선택||
        Click(321,375)
    }
    
    If 주스테이지 = 2
    {
        GuiControl,,로그,【스테이지선택】 ♥ 마을-2 ♥ 선택||
        Click(442,376)
    }
    
    If 주스테이지 = 3
    {
        GuiControl,,로그,【스테이지선택】 ♥ 마을-3 ♥ 선택||
        Click(553,347)
    }
        
    If 주스테이지 = 4
    {
        GuiControl,,로그,【스테이지선택】 ♥ 마을-4 ♥ 선택||
        Click(415,157)
    }
    
    If 주스테이지 = 5
    {
        GuiControl,,로그,【스테이지선택】 ♥ 마을-5 ♥ 선택||
        Click(414,154)
    }
    
    If 주스테이지 = 6
    {
        GuiControl,,로그,【스테이지선택】 ♥ 마을-6 ♥ 선택||
        Click(335,239)
    }
    
    If 주스테이지 = 7
    {
        GuiControl,,로그,【스테이지선택】 ♥ 마을-7 ♥ 선택||
        Click(220,161)
    }
    
    If 주스테이지 = 8
    {
        GuiControl,,로그,【스테이지선택】 ♥ 마을-8 ♥ 선택||
        Click(196,299)
    }
    
    If 주스테이지 = 9
    {
        GuiControl,,로그,【스테이지선택】 ♥ 마을-9 ♥ 선택||
        Click(65,309)
    }
    
    If 주스테이지 = 10
    {
        GuiControl,,로그,【스테이지선택】 ♥ 마을-10 ♥ 선택||
        Click(55,166)
    }
    

}

인근스테이지클릭()
{
    멈춤확인()
    
    Gui,2:Submit, Nohide
    
    If 주스테이지 = 1
    {
        GuiControl,,로그,【스테이지선택】 ♥ 인근-1 ♥ 선택||
        Click(418,370)
    }
    
    If 주스테이지 = 2
    {
        GuiControl,,로그,【스테이지선택】 ♥ 인근-2 ♥ 선택||
        Click(231,362)
    }
    
    If 주스테이지 = 3
    {
        GuiControl,,로그,【스테이지선택】 ♥ 인근-3 ♥ 선택||
        Click(126,287)
    }
        
    If 주스테이지 = 4
    {
        GuiControl,,로그,【스테이지선택】 ♥ 인근-4 ♥ 선택||
        Click(321,279)
    }
    
    If 주스테이지 = 5
    {
        GuiControl,,로그,【스테이지선택】 ♥ 인근-5 ♥ 선택||
        Click(510,285)
    }
    
    If 주스테이지 = 6
    {
        GuiControl,,로그,【스테이지선택】 ♥ 인근-6 ♥ 선택||
        Click(637,217)
    }
    
    If 주스테이지 = 7
    {
        GuiControl,,로그,【스테이지선택】 ♥ 인근-7 ♥ 선택||
        Click(534,148)
    }
    
    If 주스테이지 = 8
    {
        GuiControl,,로그,【스테이지선택】 ♥ 인근-8 ♥ 선택||
        Click(388,160)
    }
    
    If 주스테이지 = 9
    {
        GuiControl,,로그,【스테이지선택】 ♥ 인근-9 ♥ 선택||
        Click(221,168)
    }
    
    If 주스테이지 = 10
    {
        GuiControl,,로그,【스테이지선택】 ♥ 인근-10 ♥ 선택||
        Click(57,179)
    }
    

}

숲스테이지클릭()
{
    멈춤확인()
    
    Gui,2:Submit, Nohide
    
    If 주스테이지 = 1
    {
        GuiControl,,로그,【스테이지선택】 ♥ 숲-1 ♥ 선택||
        Click(581,160)
    }
    
    If 주스테이지 = 2
    {
        GuiControl,,로그,【스테이지선택】 ♥ 숲-2 ♥ 선택||
        Click(667,254)
    }
    
    If 주스테이지 = 3
    {
        GuiControl,,로그,【스테이지선택】 ♥ 숲-3 ♥ 선택||
        Click(502,305)
    }
        
    If 주스테이지 = 4
    {
        GuiControl,,로그,【스테이지선택】 ♥ 숲-4 ♥ 선택||
        Click(422,229)
    }
    
    If 주스테이지 = 5
    {
        GuiControl,,로그,【스테이지선택】 ♥ 숲-5 ♥ 선택||
        Click(371,352)
    }
    
    If 주스테이지 = 6
    {
        GuiControl,,로그,【스테이지선택】 ♥ 숲-6 ♥ 선택||
        Click(245,340)
    }
    
    If 주스테이지 = 7
    {
        GuiControl,,로그,【스테이지선택】 ♥ 숲-7 ♥ 선택||
        Click(302,170)
    }
    
    If 주스테이지 = 8
    {
        GuiControl,,로그,【스테이지선택】 ♥ 숲-8 ♥ 선택||
        Click(192,196)
    }
    
    If 주스테이지 = 9
    {
        GuiControl,,로그,【스테이지선택】 ♥ 숲-9 ♥ 선택||
        Click(108,297)
    }
    
    If 주스테이지 = 10
    {
        GuiControl,,로그,【스테이지선택】 ♥ 숲-10 ♥ 선택||
        Click(51,196)
    }
    

}

호수스테이지클릭()
{
    멈춤확인()
    
    Gui,2:Submit, Nohide
    
    If 주스테이지 = 1
    {
        GuiControl,,로그,【스테이지선택】 ♥ 호수-1 ♥ 선택||
        Click(663,364)
    }
    
    If 주스테이지 = 2
    {
        GuiControl,,로그,【스테이지선택】 ♥ 호수-2 ♥ 선택||
        Click(568,286)
    }
    
    If 주스테이지 = 3
    {
        GuiControl,,로그,【스테이지선택】 ♥ 호수-3 ♥ 선택||
        Click(451,375)
    }
        
    If 주스테이지 = 4
    {
        GuiControl,,로그,【스테이지선택】 ♥ 호수-4 ♥ 선택||
        Click(321,362)
    }
    
    If 주스테이지 = 5
    {
        GuiControl,,로그,【스테이지선택】 ♥ 호수-5 ♥ 선택||
        Click(187,295)
    }
    
    If 주스테이지 = 6
    {
        GuiControl,,로그,【스테이지선택】 ♥ 호수-6 ♥ 선택||
        Click(76,190)
    }
    
    If 주스테이지 = 7
    {
        GuiControl,,로그,【스테이지선택】 ♥ 호수-7 ♥ 선택||
        Click(229,167)
    }
    
    If 주스테이지 = 8
    {
        GuiControl,,로그,【스테이지선택】 ♥ 호수-8 ♥ 선택||
        Click(348,227)
    }
    
    If 주스테이지 = 9
    {
        GuiControl,,로그,【스테이지선택】 ♥ 호수-9 ♥ 선택||
        Click(473,225)
    }
    
    If 주스테이지 = 10
    {
        GuiControl,,로그,【스테이지선택】 ♥ 호수-10 ♥ 선택||
        Click(640,183)
    }
    

}

사막스테이지클릭()
{
    멈춤확인()
    
    Gui,2:Submit, Nohide
    
    If 주스테이지 = 1
    {
        GuiControl,,로그,【스테이지선택】 ♥ 사막-1 ♥ 선택||
        Click(673,362)
    }
    
    If 주스테이지 = 2
    {
        GuiControl,,로그,【스테이지선택】 ♥ 사막-2 ♥ 선택||
        Click(525,378)
    }
    
    If 주스테이지 = 3
    {
        GuiControl,,로그,【스테이지선택】 ♥ 사막-3 ♥ 선택||
        Click(378,363)
    }
        
    If 주스테이지 = 4
    {
        GuiControl,,로그,【스테이지선택】 ♥ 사막-4 ♥ 선택||
        Click(247,347)
    }
    
    If 주스테이지 = 5
    {
        GuiControl,,로그,【스테이지선택】 ♥ 사막-5 ♥ 선택||
        Click(148,261)
    }
    
    If 주스테이지 = 6
    {
        GuiControl,,로그,【스테이지선택】 ♥ 사막-6 ♥ 선택||
        Click(271,199)
    }
    
    If 주스테이지 = 7
    {
        GuiControl,,로그,【스테이지선택】 ♥ 사막-7 ♥ 선택||
        Click(392,181)
    }
    
    If 주스테이지 = 8
    {
        GuiControl,,로그,【스테이지선택】 ♥ 사막-8 ♥ 선택||
        Click(486,246)
    }
    
    If 주스테이지 = 9
    {
        GuiControl,,로그,【스테이지선택】 ♥ 사막-9 ♥ 선택||
        Click(635,229)
    }
    
    If 주스테이지 = 10
    {
        GuiControl,,로그,【스테이지선택】 ♥ 사막-10 ♥ 선택||
        Click(556,143)
    }
    

}

늪스테이지클릭()
{
    멈춤확인()
    
    Gui,2:Submit, Nohide
    
    If 주스테이지 = 1
    {
        GuiControl,,로그,【스테이지선택】 ♥ 늪-1 ♥ 선택||
        Click(259,365)
    }
    
    If 주스테이지 = 2
    {
        GuiControl,,로그,【스테이지선택】 ♥ 늪-2 ♥ 선택||
        Click(82,323)
    }
    
    If 주스테이지 = 3
    {
        GuiControl,,로그,【스테이지선택】 ♥ 늪-3 ♥ 선택||
        Click(180,257)
    }
        
    If 주스테이지 = 4
    {
        GuiControl,,로그,【스테이지선택】 ♥ 늪-4 ♥ 선택||
        Click(299,204)
    }
    
    If 주스테이지 = 5
    {
        GuiControl,,로그,【스테이지선택】 ♥ 늪-5 ♥ 선택||
        Click(370,331)
    }
    
    If 주스테이지 = 6
    {
        GuiControl,,로그,【스테이지선택】 ♥ 늪-6 ♥ 선택||
        Click(487,369)
    }
    
    If 주스테이지 = 7
    {
        GuiControl,,로그,【스테이지선택】 ♥ 늪-7 ♥ 선택||
        Click(625,329)
    }
    
    If 주스테이지 = 8
    {
        GuiControl,,로그,【스테이지선택】 ♥ 늪-8 ♥ 선택||
        Click(554,246)
    }
    
    If 주스테이지 = 9
    {
        GuiControl,,로그,【스테이지선택】 ♥ 늪-9 ♥ 선택||
        Click(436,168)
    }
    
    If 주스테이지 = 10
    {
        GuiControl,,로그,【스테이지선택】 ♥ 늪-10 ♥ 선택||
        Click(625,147)
    }
    

}

얼음스테이지클릭()
{
    멈춤확인()
    
    Gui,2:Submit, Nohide
    
    If 주스테이지 = 1
    {
        GuiControl,,로그,【스테이지선택】 ♥ 얼음-1 ♥ 선택||
        Click(53,203)
    }
    
    If 주스테이지 = 2
    {
        GuiControl,,로그,【스테이지선택】 ♥ 얼음-2 ♥ 선택||
        Click(163,162)
    }
    
    If 주스테이지 = 3
    {
        GuiControl,,로그,【스테이지선택】 ♥ 얼음-3 ♥ 선택||
        Click(266,216)
    }
        
    If 주스테이지 = 4
    {
        GuiControl,,로그,【스테이지선택】 ♥ 얼음-4 ♥ 선택||
        Click(241,350)
    }
    
    If 주스테이지 = 5
    {
        GuiControl,,로그,【스테이지선택】 ♥ 얼음-5 ♥ 선택||
        Click(349,344)
    }
    
    If 주스테이지 = 6
    {
        GuiControl,,로그,【스테이지선택】 ♥ 얼음-6 ♥ 선택||
        Click(379,201)
    }
    
    If 주스테이지 = 7
    {
        GuiControl,,로그,【스테이지선택】 ♥ 얼음-7 ♥ 선택||
        Click(496,233)
    }
    
    If 주스테이지 = 8
    {
        GuiControl,,로그,【스테이지선택】 ♥ 얼음-8 ♥ 선택||
        Click(589,171)
    }
    
    If 주스테이지 = 9
    {
        GuiControl,,로그,【스테이지선택】 ♥ 얼음-9 ♥ 선택||
        Click(674,261)
    }
    
    If 주스테이지 = 10
    {
        GuiControl,,로그,【스테이지선택】 ♥ 얼음-10 ♥ 선택||
        Click(562,356)
    }
    

}

폐허스테이지클릭()
{
    멈춤확인()
    
    Gui,2:Submit, Nohide
    
    If 주스테이지 = 1
    {
        GuiControl,,로그,【스테이지선택】 ♥ 폐허-1 ♥ 선택||
        Click(133,160)
    }
    
    If 주스테이지 = 2
    {
        GuiControl,,로그,【스테이지선택】 ♥ 폐허-2 ♥ 선택||
        Click(310,168)
    }
    
    If 주스테이지 = 3
    {
        GuiControl,,로그,【스테이지선택】 ♥ 폐허-3 ♥ 선택||
        Click(436,160)
    }
        
    If 주스테이지 = 4
    {
        GuiControl,,로그,【스테이지선택】 ♥ 폐허-4 ♥ 선택||
        Click(553,157)
    }
    
    If 주스테이지 = 5
    {
        GuiControl,,로그,【스테이지선택】 ♥ 폐허-5 ♥ 선택||
        Click(561,304)
    }
    
    If 주스테이지 = 6
    {
        GuiControl,,로그,【스테이지선택】 ♥ 폐허-6 ♥ 선택||
        Click(463,368)
    }
    
    If 주스테이지 = 7
    {
        GuiControl,,로그,【스테이지선택】 ♥ 폐허-7 ♥ 선택||
        Click(379,299)
    }
    
    If 주스테이지 = 8
    {
        GuiControl,,로그,【스테이지선택】 ♥ 폐허-8 ♥ 선택||
        Click(296,367)
    }
    
    If 주스테이지 = 9
    {
        GuiControl,,로그,【스테이지선택】 ♥ 폐허-9 ♥ 선택||
        Click(220,259)
    }
    
    If 주스테이지 = 10
    {
        GuiControl,,로그,【스테이지선택】 ♥ 폐허-10 ♥ 선택||
        Click(46,251)
    }
    

}

무한산스테이지클릭()
{
    멈춤확인()
    
    Gui,2:Submit, Nohide
    
    If 주스테이지 = 1
    {
        GuiControl,,로그,【스테이지선택】 ♥ 무한산-1 ♥ 선택||
        Click(667,363)
    }
    
    If 주스테이지 = 2
    {
        GuiControl,,로그,【스테이지선택】 ♥ 무한산-2 ♥ 선택||
        Click(484,368)
    }
    
    If 주스테이지 = 3
    {
        GuiControl,,로그,【스테이지선택】 ♥ 무한산-3 ♥ 선택||
        Click(276,370)
    }
        
    If 주스테이지 = 4
    {
        GuiControl,,로그,【스테이지선택】 ♥ 무한산-4 ♥ 선택||
        Click(68,266)
    }
    
    If 주스테이지 = 5
    {
        GuiControl,,로그,【스테이지선택】 ♥ 무한산-5 ♥ 선택||
        Click(200,267)
    }
    
    If 주스테이지 = 6
    {
        GuiControl,,로그,【스테이지선택】 ♥ 무한산-6 ♥ 선택||
        Click(370,290)
    }
    
    If 주스테이지 = 7
    {
        GuiControl,,로그,【스테이지선택】 ♥ 무한산-7 ♥ 선택||
        Click(587,272)
    }
    
    If 주스테이지 = 8
    {
        GuiControl,,로그,【스테이지선택】 ♥ 무한산-8 ♥ 선택||
        Click(487,183)
    }
    
    If 주스테이지 = 9
    {
        GuiControl,,로그,【스테이지선택】 ♥ 무한산-9 ♥ 선택||
        Click(346,144)
    }
    
    If 주스테이지 = 10
    {
        GuiControl,,로그,【스테이지선택】 ♥ 무한산-10 ♥ 선택||
        Click(212,131)
    }
    

}

난이도선택서버대륙()
{
    멈춤확인()
    GuiControlGet, 난이도, 2:
    
    If ((난이도 = "쉬움") && IsImageCheck(ClickX, ClickY, "이미지\모험\서버대륙.bmp",60,0))
    {
        Click(60,400)
        Sleep,500
        Click(60,300)
        Sleep,500
        GuiControl,,로그,【난이도선택】 쉬움 선택||
    }
            
    If ((난이도 = "보통") && IsImageCheck(ClickX, ClickY, "이미지\모험\서버대륙.bmp",60,0))
    {
        Click(60,400)
        Sleep,500
        Click(62,343)
        Sleep,500
        GuiControl,,로그,【난이도선택】 보통 선택||
    }
            
    If ((난이도 = "어려움") && IsImageCheck(ClickX, ClickY, "이미지\모험\서버대륙.bmp",60,0))
    {
        Click(60,400)
        Sleep,500
        Click(58,371)
        Sleep,500
        GuiControl,,로그,【난이도선택】 어려움 선택||
    }
}

난이도선택파일섬()
{
    멈춤확인()
    If ((난이도 = "쉬움") && IsImageCheck(ClickX, ClickY, "이미지\모험\파일섬.bmp",60,0))
    {
        Click(60,400)
        Sleep,500
        Click(60,300)
        Sleep,500
        GuiControl,,로그,【난이도선택】 쉬움 선택||
    }
            
    If ((난이도 = "보통") && IsImageCheck(ClickX, ClickY, "이미지\모험\파일섬.bmp",60,0))
    {
        Click(60,400)
        Sleep,500
        Click(62,343)
        Sleep,500
        GuiControl,,로그,【난이도선택】 보통 선택||
    }
            
    If ((난이도 = "어려움") && IsImageCheck(ClickX, ClickY, "이미지\모험\파일섬.bmp",60,0))
    {
        Click(60,400)
        Sleep,500
        Click(58,371)
        Sleep,500
        GuiControl,,로그,【난이도선택】 어려움 선택||
    }
}

Capture(filename)
{
pToken := Gdip_Startup()
WinGetPos, X, Y, W, H, BlueStacks App Player
SysGet, wFrame, 7
SysGet, wCaption, 4
WinGet, Title , ID, BlueStacks App Player
snap := Gdip_BitmapFromHwnd(Title)
Gdip_SaveBitmapToFile(snap, filename)
Gdip_DisposeImage(snap)
Gdip_ShutDown(pToken)
GuiControl,,로그, %filename% 캡쳐완료||
}

Click(x, y)
{
FormatTime, 마지막동작시간, ,m
sleep, %TIME_REFRESH%
Coor := x | y<<16
WinGet, ActiveID, ID, BlueStacks App Player
if(x = 0 && y = 0)
{
;log := "# 이미지 검색 실패로 클릭 실패"
;AddLog(log)
return false
}
if not getkeystate("Ctrl" , "p")
{
PostMessage, 0x201, 0, %Coor%,, ahk_id %ActiveID%
PostMessage, 0x202, 0, %Coor%,, ahk_id %ActiveID%
GuiControl,,로그,【클릭】 (%X% : %Y%)||
sleep, %TIME_REFRESH%
}
else if getkeystate("Ctrl" , "p")
{
;log := "# 클릭 대기 : Ctrl "
;AddLog(log)
Loop
{
if not getkeystate("Ctrl" , "p")
{
PostMessage, 0x201, 0, %Coor%,, ahk_id %ActiveID%
PostMessage, 0x202, 0, %Coor%,, ahk_id %ActiveID%
;log := "# 클릭: " x ", " y
;AddLog(log)
sleep, %TIME_REFRESH%
break
}
sleep, 100
}
}
}

Drag(oldX, oldY, newX, newY)
{
    sleep, %TIME_REFRESH%
    oldCoor := oldX | oldY<<16
    newCoor := newX | newY<<16
    WinGet, ActiveID, ID, BlueStacks App Player
    
    PostMessage, 0x201, 0, %oldCoor%,, ahk_id %ActiveID%
    Sleep,500
    PostMessage, 0x200, 0, %newCoor%,, ahk_id %ActiveID%
    Sleep,500
    PostMessage, 0x202, 0, %newCoor%,, ahk_id %ActiveID%
    sleep, %TIME_REFRESH%
    GuiControl,,로그,【드래그】 (%oldX% : %oldY%) ▶ (%newx% : %newy%)||
    ;msgbox, %oldcoor% %newcoor% %activeid%
}


F7::
MouseGetPos, MouseX, MouseY
PixelGetColor, color, %MouseX%, %MouseY%
MsgBox The color at the current cursor position is %color%.
return

F8::
global 배치 := 0

If(IsPixelSquare(Click1, Click2, 0x3B2103, 17,160,23,163)) ; 체력없음픽셀
{
    If(IsPixelSquare(ClickX, ClickY, 0x9AF7FF,302,163,339,165) ; 체력있음 픽셀
    ||배치 = 0)
    {
        
        ;Loop, 3
        ;{
            Sx := 302 + 85 * %A_Index%
            Sy := 163
            Ex := 339 + 85 * %A_Index%
            Ey := 165
        
            msgbox, ㅎ2
            Clicko := ClickX + 5
            Clickp := ClickY + 10
            Click(Clicko, Clickp)
        ;}
    
            Sleep,2000
            
            Click(362,387)
            Sleep,1000
            배치 := 1
    }
    
    If(배치 = 1)
    {
        Clickok := Click1 + 5
        Clicknk := Click2 - 20
        Click(Clickok, Clicknk)
    }
}

If(IsPixelSquare(Click1, Click2, 0x3B2103, 17,319,22,323)) ; 체력없음픽셀
{
    
}
return


나선의탑()
{
    
    While((나선의탑완료 = 0) || (나선의탑 = 1))
    {
        멈춤확인()
        
        If(IsImagePlus(ClickX, ClickY, "이미지\스페셜던전.bmp", 60, 0))
        {
            GuiControl,,로그,【이미지서치】 ♥ 스페셜던전.bmp ♥ 서치완료||
            Click(ClickX, ClickY)
            Sleep, 500
        }
        
        If(IsImagePlus(ClickX, ClickY, "이미지\나선의탑\스페셜던전.bmp", 60, 0))
        {
            GuiControl,,로그,【이미지서치】 ♥ 스페셜던전.bmp ♥ 서치완료||
            Click(205,313)
            Sleep, 500
        }
        
        If(IsImagePlus(ClickX, ClickY, "이미지\나선의탑\나선의탑.bmp", 60,0))
        {
            GuiControl,,로그,【이미지서치】 ♥ 나선의탑.bmp ♥ 서치완료||
            Click(342,190)
            Sleep, 500
        }
        
        If(IsImagePlus(ClickX, ClickY, "이미지\나선의탑\나탑시작.bmp",60,0))
        {
            GuiControl,,로그,【이미지서치】 ♥ 나탑시작.bmp ♥ 서치완료||
            Click(ClickX, ClickY)
            Sleep, 500
        }
        
        
        If(IsImagePlus(ClickX, ClickY, "이미지\나선의탑\1-1.bmp",60,0)
        ||IsImagePlus(ClickX, ClickY, "이미지\나선의탑\1-2.bmp",60,0)
        ||IsImagePlus(ClickX, ClickY, "이미지\나선의탑\1-3.bmp",60,0))
        {
            GuiControl,,로그,【턴인식】 ♥ 1턴 인식완료 ♥||
            Sleep,1000
            1턴스킬()
            Sleep,1000
        }
            
        If(IsImagePlus(ClickX, ClickY, "이미지\나선의탑\2-2.bmp",60,0)
        ||IsImagePlus(ClickX, ClickY, "이미지\나선의탑\2-3.bmp",60,0))
        {
            GuiControl,,로그,【턴인식】 ♥ 2턴 인식완료 ♥||
            Sleep,1000
            2턴스킬()
            Sleep,1000
        }
        
        If(IsImagePlus(ClickX, ClickY, "이미지\나선의탑\3-3.bmp",60,0))
        {
            GuiControl,,로그,【턴인식】 ♥ 3턴 인식완료 ♥||
            Sleep,1000
            3턴스킬()
            Sleep,1000
        }
        
        If(IsImagePlus(ClickX, ClickY, "이미지\나선의탑\다음스테이지.bmp",60,0))
        {
            GuiControl,,로그,【이미지서치】 ♥ 다음스테이지.bmp ♥ 서치완료||
            Click(ClickX, ClickY)
            Sleep, 500
            
            나탑횟수 := 나탑횟수 + 1
            GuiControl,7:,나탑횟수, %나탑횟수%층
        }
        
        If(IsImagePlus(ClickX, ClickY, "이미지\나선의탑\행동불능.bmp",60, 0))
        {
            GuiControl,,로그,【화면인식】 ♥ 행동불능 인식 ♥||
            Click(365,275)
            Sleep,500
            나탑종료()
        }
        
    }
}


나탑종료()
{
    {
        InputKey(ESC)
        Sleep,1000
        InputKey(ESC)
        Sleep,1000
        InputKey(ESC)
        Sleep,1000
        나선의탑완료 := 1
    }
}

1턴스킬()
{
    멈춤확인()
    스킬클릭 := 0
    GuiControlGet, N11, 6:
    GuiControlGet, N12, 6:
    GuiControlGet, N13, 6:
    GuiControlGet, N14, 6:
    GuiControlGet, N15, 6:
    GuiControlGet, N16, 6:
    GuiControlGet, N17, 6:
    GuiControlGet, N18, 6:
    GuiControlGet, N19, 6:
    GuiControlGet, N110, 6:
    
    If(IsImagePlus(ClickX, ClickY, "이미지\나선의탑\게임중1.bmp", 60, 0)
    ||IsImagePlus(ClickX, ClickY, "이미지\나선의탑\게임중2.bmp",60,0))
    {
        If N11 = 1
        {
            SKimage := "스킬\나탑\1.bmp"
            IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
            {
                GuiControl,,로그,【스킬사용】 ＊ 1번스킬 ＊ 사용
                Click(ClickX, ClickY)
                Sleep,300
                스킬클릭 := 1
        }
    }
    else If N12 = 1
    {
        SKimage := "스킬\나탑\2.bmp"
        IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
        {
            GuiControl,,로그,【스킬사용】 ＊ 2번스킬 ＊ 사용
            Click(ClickX, ClickY)
            Sleep,300
            스킬클릭 := 1
        }
    }
    else If N13 = 1
    {
        SKimage := "스킬\나탑\3.bmp"
        IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
        {
            GuiControl,,로그,【스킬사용】 ＊ 3번스킬 ＊ 사용
            Click(ClickX, ClickY)
            Sleep,300
            스킬클릭 := 1
        }
    }
    else If N14 = 1
    {
        SKimage := "스킬\나탑\4.bmp"
        IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
        {
            GuiControl,,로그,【스킬사용】 ＊ 4번스킬 ＊ 사용
            Click(ClickX, ClickY)
            Sleep,300
            스킬클릭 := 1
        }
    }
    else If N15 = 1
    {
        ;msgbox, 5스킬체크
        SKimage := "스킬\나탑\5.bmp"
        IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
        {
            GuiControl,,로그,【스킬사용】 ＊ 5번스킬 ＊ 사용
            Click(ClickX, ClickY)
            Sleep,300
            스킬클릭 := 1
        }
    }
    else If N16 = 1
    {
        SKimage := "스킬\나탑\6.bmp"
        IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
        {
            GuiControl,,로그,【스킬사용】 ＊ 6번스킬 ＊ 사용
            Click(ClickX, ClickY)
            Sleep,300
            스킬클릭 := 1
        }
    }
    else If N17 = 1
    {
        SKimage := "스킬\나탑\7.bmp"
        IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
        {
            GuiControl,,로그,【스킬사용】 ＊ 7번스킬 ＊ 사용
            Click(ClickX, ClickY)
            Sleep,300
            스킬클릭 := 1
        }
    }
    else If N18 = 1
    {
        SKimage := "스킬\나탑\8.bmp"
        IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
        {
            GuiControl,,로그,【스킬사용】 ＊ 8번스킬 ＊ 사용
            Click(ClickX, ClickY)
            Sleep,300
            스킬클릭 := 1
        }
    }
    else If N19 = 1
    {
        SKimage := "스킬\나탑\9.bmp"
        IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
        {
            GuiControl,,로그,【스킬사용】 ＊ 9번스킬 ＊ 사용
            Click(ClickX, ClickY)
            Sleep,300
            스킬클릭 := 1
        }
    }
    else If N110 = 1
    {
        SKimage := "스킬\나탑\10.bmp"
        IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
        {
            GuiControl,,로그,【스킬사용】 ＊ 10번스킬 ＊ 사용
            Click(ClickX, ClickY)
            Sleep,300
            스킬클릭 := 1
        }
    }
}
}

2턴스킬()
{
    멈춤확인()
    스킬클릭 := 0
    GuiControlGet, N21, 6:
    GuiControlGet, N22, 6:
    GuiControlGet, N23, 6:
    GuiControlGet, N24, 6:
    GuiControlGet, N25, 6:
    GuiControlGet, N26, 6:
    GuiControlGet, N27, 6:
    GuiControlGet, N28, 6:
    GuiControlGet, N29, 6:
    GuiControlGet, N210, 6:
    
    
    If(IsImagePlus(ClickX, ClickY, "이미지\나선의탑\게임중1.bmp", 60, 0)
    ||IsImagePlus(ClickX, ClickY, "이미지\나선의탑\게임중2.bmp",60,0))
    {
            If N21 = 1
            {
                SKimage := "스킬\나탑\1.bmp"
                IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
                {
                    GuiControl,,로그,【스킬사용】 ＊ 1번스킬 ＊ 사용
                    Click(ClickX, ClickY)
                    Sleep,300
                    스킬클릭 := 1
                }
            }
            If N22 = 1
            {
                SKimage := "스킬\나탑\2.bmp"
                IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
                {
                    GuiControl,,로그,【스킬사용】 ＊ 2번스킬 ＊ 사용
                    Click(ClickX, ClickY)
                    Sleep,300
                    스킬클릭 := 1
                }
            }
            If N23 = 1
            {
                SKimage := "스킬\나탑\3.bmp"
                IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
                {
                    GuiControl,,로그,【스킬사용】 ＊ 3번스킬 ＊ 사용
                    Click(ClickX, ClickY)
                    Sleep,300
                    스킬클릭 := 1
                }
            }
            If N24 = 1
            {
                SKimage := "스킬\나탑\4.bmp"
                IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
                {
                    GuiControl,,로그,【스킬사용】 ＊ 4번스킬 ＊ 사용
                    Click(ClickX, ClickY)
                    Sleep,300
                    스킬클릭 := 1
                }
            }
            If N25 = 1
            {
                SKimage := "스킬\나탑\5.bmp"
                IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
                {
                    GuiControl,,로그,【스킬사용】 ＊ 5번스킬 ＊ 사용
                    Click(ClickX, ClickY)
                    Sleep,300
                    스킬클릭 := 1
                }
            }
            If N26 = 1
            {
                SKimage := "스킬\나탑\6.bmp"
                IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
                {
                    GuiControl,,로그,【스킬사용】 ＊ 6번스킬 ＊ 사용
                    Click(ClickX, ClickY)
                    Sleep,300
                    스킬클릭 := 1
                }
            }
            If N27 = 1
            {
                SKimage := "스킬\나탑\7.bmp"
                IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
                {
                    GuiControl,,로그,【스킬사용】 ＊ 7번스킬 ＊ 사용
                    Click(ClickX, ClickY)
                    Sleep,300
                    스킬클릭 := 1
                }
            }
            If N28 = 1
            {
                SKimage := "스킬\나탑\8.bmp"
                IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
                {
                    GuiControl,,로그,【스킬사용】 ＊ 8번스킬 ＊ 사용
                    Click(ClickX, ClickY)
                    Sleep,300
                    스킬클릭 := 1
                }
            }
            If N29 = 1
            {
                SKimage := "스킬\나탑\9.bmp"
                IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
                {
                    GuiControl,,로그,【스킬사용】 ＊ 9번스킬 ＊ 사용
                    Click(ClickX, ClickY)
                    Sleep,300
                    스킬클릭 := 1
                }
            }
            If N210 = 1
            {
                SKimage := "스킬\나탑\10.bmp"
                IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
                {
                    GuiControl,,로그,【스킬사용】 ＊ 10번스킬 ＊ 사용
                    Click(ClickX, ClickY)
                    Sleep,300
                    스킬클릭 := 1
                }
            }
        }
    }

3턴스킬()
{
    멈춤확인()
    스킬클릭 := 0
    GuiControlGet, N31, 6:
    GuiControlGet, N32, 6:
    GuiControlGet, N33, 6:
    GuiControlGet, N34, 6:
    GuiControlGet, N35, 6:
    GuiControlGet, N36, 6:
    GuiControlGet, N37, 6:
    GuiControlGet, N38, 6:
    GuiControlGet, N39, 6:
    GuiControlGet, N310, 6:
    
    If(IsImagePlus(ClickX, ClickY, "이미지\나선의탑\게임중1.bmp", 60, 0)
    ||IsImagePlus(ClickX, ClickY, "이미지\나선의탑\게임중2.bmp",60,0))
    {
            If N31 = 1
            {
                SKimage := "스킬\나탑\1.bmp"
                IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
                {
                    GuiControl,,로그,【스킬사용】 ＊ 1번스킬 ＊ 사용
                    Click(ClickX, ClickY)
                    Sleep,300
                    스킬클릭 := 1
                }
            }
            If N32 = 1
            {
                SKimage := "스킬\나탑\2.bmp"
                IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
                {
                    GuiControl,,로그,【스킬사용】 ＊ 2번스킬 ＊ 사용
                    Click(ClickX, ClickY)
                    Sleep,300
                    스킬클릭 := 1
                }
            }
            If N33 = 1
            {
                SKimage := "스킬\나탑\3.bmp"
                IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
                {
                    GuiControl,,로그,【스킬사용】 ＊ 3번스킬 ＊ 사용
                    Click(ClickX, ClickY)
                    Sleep,300
                    스킬클릭 := 1
                }
            }
            If N34 = 1
            {
                SKimage := "스킬\나탑\4.bmp"
                IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
                {
                    GuiControl,,로그,【스킬사용】 ＊ 4번스킬 ＊ 사용
                    Click(ClickX, ClickY)
                    Sleep,300
                    스킬클릭 := 1
                }
            }
            If N35 = 1
            {
                SKimage := "스킬\나탑\5.bmp"
                IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
                {
                    GuiControl,,로그,【스킬사용】 ＊ 5번스킬 ＊ 사용
                    Click(ClickX, ClickY)
                    Sleep,300
                    스킬클릭 := 1
                }
            }
            If N36 = 1
            {
                SKimage := "스킬\나탑\6.bmp"
                IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
                {
                    GuiControl,,로그,【스킬사용】 ＊ 6번스킬 ＊ 사용
                    Click(ClickX, ClickY)
                    Sleep,300
                    스킬클릭 := 1
                }
            }
            If N37 = 1
            {
                SKimage := "스킬\나탑\7.bmp"
                IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
                {
                    GuiControl,,로그,【스킬사용】 ＊ 7번스킬 ＊ 사용
                    Click(ClickX, ClickY)
                    Sleep,300
                    스킬클릭 := 1
                }
            }
            If N38 = 1
            {
                SKimage := "스킬\나탑\8.bmp"
                IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
                {
                    GuiControl,,로그,【스킬사용】 ＊ 8번스킬 ＊ 사용
                    Click(ClickX, ClickY)
                    Sleep,300
                    스킬클릭 := 1
                }
            }
            If N39 = 1
            {
                SKimage := "스킬\나탑\9.bmp"
                IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
                {
                    GuiControl,,로그,【스킬사용】 ＊ 9번스킬 ＊ 사용
                    Click(ClickX, ClickY)
                    Sleep,300
                    스킬클릭 := 1
                }
            }
            If N310 = 1
            {
                SKimage := "스킬\나탑\10.bmp"
                IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
                {
                    GuiControl,,로그,【스킬사용】 ＊ 10번스킬 ＊ 사용
                    Click(ClickX, ClickY)
                    Sleep,300
                    스킬클릭 := 1
                }
            }
        }
    }

아레나5판()
{
    While(아레나완료 = 0)
    {
        멈춤확인()
            If(IsImagePlus(ClickX, ClickY, "이미지\스페셜던전.bmp", 60, 0 , 0,0,0,0))
            {
                GuiControl,,로그,【이미지서치】 ♥ 스페셜던전.bmp 서치완료 ♥||
                Click(495,393)
                Sleep,500
            }
        
            If(isImagePlus(ClickX, ClickY,"이미지\스페셜던전1.bmp",60,0,0,0,115,70))
            {
                GuiControl,,로그,【이미지서치】 ♥ 스페셜던전1.bmp 서치완료 ♥||
                Click(192,146)
                Sleep,500
            }
            If(isImagePlus(ClickX, ClickY, "이미지\아레나2.bmp",60,0,0,0,115,70))
            {
                GuiControl,,로그,【이미지서치】 ♥ 아레나2.bmp 서치완료 ♥||
                Click(550,388)
                Sleep,500
            }   
            GuiControlGet, 아레나팀, Gui5:
            If(isImagePlus(ClickX, ClickY, "이미지\아레나3.bmp",60,0,0,0,0,0))
            {
                GuiControl,,로그,【이미지서치】 ♥ 아레나3.bmp 서치완료 ♥||
                선택()
            }
        
            If(isImagePlus(ClickX, ClickY, "이미지\아레나\아레나다시하기.bmp",60,0))
            {
                Click(ClickX, ClickY)
            }
        
            If(isImagePlus(ClickX, ClickY, "이미지\아레나\10점.bmp",60,0,270,210,356,228)
            ||isImagePlus(ClickX, ClickY, "이미지\아레나\승리.bmp",60,0,3,92,122,148))
            {
                아레나점수통계 := 아레나점수통계+10
                GuiControl,7:,아레나점수통계, %아레나점수통계%점
                Sleep,1000
                Click(610,132) ; 다시하기
                아레나시작함수()
            }
        
            If(isImagePlus(ClickX, ClickY, "이미지\아레나\1점.bmp",60,0,270,210,356,228)
            ||isImagePlus(ClickX, ClickY, "이미지\아레나\패배.bmp",60,0,3,92,122,148))
            {
                아레나점수통계 := 아레나점수통계+1
                GuiControl,7:,아레나점수통계, %아레나점수통계%
                Sleep,1000
                Click(610,132)
                아레나시작함수()
            }
            
            If(isImagePlus(ClickX, ClickY, "이미지\아레나\입장권부족.bmp",60,0)
            ||isImagePlus(ClickX, ClickY, "이미지\아레나\입장권부족2.bmp",60,0)
            ||isImagePlus(ClickX, ClickY, "이미지\아레나\입장권부족3.bmp",60,0)
            ||isImagePlus(ClickX, ClickY, "이미지\아레나\시즌종료.bmp",60,0))
            {
                GuiControl,,로그,【화면인식】 ♥ 입장권부족 창 ♥ 인식
                Sleep,500
                Click(410,273)
                Sleep,500
                InputKey(ESC)
                Sleep,2000
                InputKey(ESC)
                Sleep,2000
                ;InputKey(ESC)
                아레나완료 := 1
            }
                
        }
    }
    
아레나무한()
{
    loop
    {
        멈춤확인()
            If(IsImagePlus(ClickX, ClickY, "이미지\스페셜던전.bmp", 60, 0 , 0,0,0,0))
            {
                GuiControl,,로그,【이미지서치】 ♥ 스페셜던전.bmp 서치완료 ♥||
                Click(495,393)
                Sleep,500
            }
        
            If(isImagePlus(ClickX, ClickY,"이미지\스페셜던전1.bmp",60,0,0,0,115,70))
            {
                GuiControl,,로그,【이미지서치】 ♥ 스페셜던전1.bmp 서치완료 ♥||
                Click(192,146)
                Sleep,500
            }
            If(isImagePlus(ClickX, ClickY, "이미지\아레나2.bmp",60,0,0,0,115,70))
            {
                GuiControl,,로그,【이미지서치】 ♥ 아레나2.bmp 서치완료 ♥||
                Click(550,388)
                Sleep,500
            }   
            GuiControlGet, 아레나팀, Gui5:
            If(isImagePlus(ClickX, ClickY, "이미지\아레나3.bmp",60,0,0,0,0,0))
            {
                GuiControl,,로그,【이미지서치】 ♥ 아레나3.bmp 서치완료 ♥||
                선택()
            }
        
            If(isImagePlus(ClickX, ClickY, "이미지\아레나\아레나다시하기.bmp",60,0))
            {
                Click(ClickX, ClickY)
            }
        
            If(isImagePlus(ClickX, ClickY, "이미지\아레나\10점.bmp",60,0,270,210,356,228)
            ||isImagePlus(ClickX, ClickY, "이미지\아레나\승리.bmp",60,0,3,92,122,148))
            {
                아레나점수통계 := 아레나점수통계+10
                GuiControl,7:,아레나점수통계, %아레나점수통계%점
                Sleep,1000
                Click(610,132) ; 다시하기
                아레나시작함수()
            }
        
            If(isImagePlus(ClickX, ClickY, "이미지\아레나\1점.bmp",60,0,270,210,356,228)
            ||isImagePlus(ClickX, ClickY, "이미지\아레나\패배.bmp",60,0,3,92,122,148))
            {
                아레나점수통계 := 아레나점수통계+1
                GuiControl,7:,아레나점수통계, %아레나점수통계%점
                Sleep,1000
                Click(610,132)
                아레나시작함수()
            }
            
            If(isImagePlus(ClickX, ClickY, "이미지\아레나\입장권부족.bmp",60,0)
            ||isImagePlus(ClickX, ClickY, "이미지\아레나\입장권부족2.bmp",60,0)
            ||isImagePlus(ClickX, ClickY, "이미지\아레나\입장권부족3.bmp",60,0)
            ||isImagePlus(ClickX, ClickY, "이미지\아레나\시즌종료.bmp",60,0))
            {
                GuiControl,,로그,【화면인식】 ♥ 입장권부족 창 ♥ 인식
                Sleep,500
                Click(305,272)
                Sleep,500
            }
                
        }
    }

선택()
{
    멈춤확인()
           ; gui, submit, nohide
            ;gui, 5: submit, nohide
            ;GuiControlGet, 아레나팀, Gui5:
            If 아레나팀 = 1팀
            {
                Click(30,106)
                GuiControl,,로그,【팀선택】 ♥1팀♥
                Sleep, 1000
                아레나시작함수()
            }
            else If 아레나팀 = 2팀
            {
                Click(80,106)
                GuiControl,,로그,【클릭】 (80 : 106) ♥2팀♥
                Sleep, 1000
                아레나시작함수()
            }
            else if 아레나팀 = 3팀
            {
                Click(130,106)
                GuiControl,,로그,【클릭】 (130 : 106) ♥3팀♥
                Sleep, 1000
                아레나시작함수()
            }
            else if 아레나팀 = 4팀
            {
                Click(180,106)
                GuiControl,,로그,【클릭】 (180 : 106) ♥4팀♥
                Sleep, 1000
                아레나시작함수()
            }
            else if 아레나팀 = 5팀
            {
                Click(230,106)
                GuiControl,,로그,【클릭】 (230 : 106) ♥5팀♥
                Sleep, 1000
                아레나시작함수()
                
            }
        }
        
모험팀선택시작()
{
    멈춤확인()
            ; gui, submit, nohide
            ;gui, 5: submit, nohide
            ;GuiControlGet, 아레나팀, Gui5:
            If 모험팀 = 1팀
            {
                Click(30,106)
                GuiControl,,로그,【팀선택】 ♥1팀♥
                Sleep, 1000
                모험시작함수()
            }
            else If 모험팀 = 2팀
            {
                Click(80,106)
                GuiControl,,로그,【팀선택】 ♥2팀♥
                Sleep, 1000
                모험시작함수()
            }
            else if 모험팀 = 3팀
            {
                Click(130,106)
                GuiControl,,로그,【팀선택】 ♥3팀♥
                Sleep, 1000
                모험시작함수()
            }
            else if 모험팀 = 4팀
            {
                Click(180,106)
                GuiControl,,로그,【팀선택】 ♥4팀♥
                Sleep, 1000
                모험시작함수()
            }
            else if 모험팀 = 5팀
            {
                Click(230,106)
                GuiControl,,로그,【팀선택】 ♥5팀♥
                Sleep, 1000
                모험시작함수()
                
    }
    return
}

모험시작함수()
{
    멈춤확인()
    Gui,7: Submit, Nohide
    ;;파일섬
    If(IsImageCheck(ClickX, ClickY, "이미지\모험\스테3시작.bmp",60,0,373,315,709,415))
    {
        Click(ClickX, ClickY)
        GuiControlGet, 스테소모, 7:
        스테소모 := 스테소모 + 3
        모험횟수 := 모험횟수 + 1
        GuiControl,7:,모험횟수, %모험횟수%
        GuiControl,7:,스테소모, %스테소모%
        GuiControl,,로그,【모험입장알림】스테미너 ＊%스테소모%＊개 소모입장
        스킬클릭 := 0
    }
    
    If(IsImageCheck(ClickX, ClickY, "이미지\모험\스테5시작.bmp",60,0,373,315,709,415))
    {
        Click(ClickX, ClickY)
        GuiControlGet, 스테소모, 7:
        스테소모 := 스테소모 + 5
        모험횟수 := 모험횟수 + 1
        GuiControl,7:,모험횟수, %모험횟수%
        GuiControl,7:,스테소모, %스테소모%
        GuiControl,,로그,【모험입장알림】스테미너 ＊%스테소모%＊개 소모입장
        스킬클릭 := 0
    }
    
        If(IsImageCheck(ClickX, ClickY, "이미지\모험\스테8시작.bmp",60,0,373,315,709,415))
    {
        Click(ClickX, ClickY)
        GuiControlGet, 스테소모, 7:
        스테소모 := 스테소모 + 8
        모험횟수 := 모험횟수 + 1
        GuiControl,7:,모험횟수, %모험횟수%
        GuiControl,7:,스테소모, %스테소모%
        GuiControl,,로그,【모험입장알림】스테미너 ＊%스테소모%＊개 소모입장
        스킬클릭 := 0
    }
    
        If(IsImageCheck(ClickX, ClickY, "이미지\모험\스테12시작.bmp",60,0,373,315,709,415))
    {
        Click(ClickX, ClickY)
        GuiControlGet, 스테소모, 7:
        스테소모 := 스테소모 + 12
        모험횟수 := 모험횟수 + 1
        GuiControl,7:,모험횟수, %모험횟수%
        GuiControl,7:,스테소모, %스테소모%
        GuiControl,,로그,【모험입장알림】스테미너 ＊%스테소모%＊개 소모입장
        스킬클릭 := 0
    }
    
    ;;;서버대륙 
        If(IsImageCheck(ClickX, ClickY, "이미지\모험\스테4시작.bmp",60,0,373,315,709,415))
    {
        Click(ClickX, ClickY)
        GuiControlGet, 스테소모, 7:
        스테소모 := 스테소모 + 4
        모험횟수 := 모험횟수 + 1
        GuiControl,7:,모험횟수, %모험횟수%
        GuiControl,7:,스테소모, %스테소모%
        GuiControl,,로그,【모험입장알림】스테미너 ＊%스테소모%＊개 소모입장
        스킬클릭 := 0
    }
    
        If(IsImageCheck(ClickX, ClickY, "이미지\모험\스테6시작.bmp",60,0,373,315,709,415))
    {
        Click(ClickX, ClickY)
        GuiControlGet, 스테소모, 7:
        스테소모 := 스테소모 + 6
        모험횟수 := 모험횟수 + 1
        GuiControl,7:,모험횟수, %모험횟수%
        GuiControl,7:,스테소모, %스테소모%
        GuiControl,,로그,【모험입장알림】스테미너 ＊%스테소모%＊개 소모입장
        스킬클릭 := 0
    }
    
        else If(IsImageCheck(ClickX, ClickY, "이미지\모험\스테10시작.bmp",60,0,373,315,709,415))
        {
        Click(ClickX, ClickY)
        GuiControlGet, 스테소모, 7:
        스테소모 := 스테소모 + 10
        모험횟수 := 모험횟수 + 1
        GuiControl,7:,모험횟수, %모험횟수%
        GuiControl,7:,스테소모, %스테소모%
        GuiControl,,로그,【모험입장알림】스테미너 ＊%스테소모%＊개 소모입장
        스킬클릭 := 0
        }
    
        If(IsImageCheck(ClickX, ClickY, "이미지\모험\스테15시작.bmp",60,0,373,315,709,415))
    {
        Click(ClickX, ClickY)
        GuiControlGet, 스테소모, 7:
        스테소모 := 스테소모 + 15
        모험횟수 := 모험횟수 + 1
        GuiControl,7:,모험횟수, %모험횟수%
        GuiControl,7:,스테소모, %스테소모%
        GuiControl,,로그,【모험입장알림】스테미너 ＊%스테소모%＊개 소모입장
        스킬클릭 := 0
    }
    return
}

아레나시작함수()
{
    멈춤확인()
    If(!isImagePlus(ClickX, ClickY, "이미지\아레나\0.5bmp",60,0))
    {
        Click(500,390)
    }
    return
}

팀클릭() ; 팀 좌표클릭함수
{
    GuiControlGet, 모험팀, 2:
    If(isImagePlus(ClickX, ClickY, "이미지\아레나3.bmp",60,0,0,0,0,0))
    {
    If 아레나팀 = 1팀
    {
        Click(30,106)
    }
    If 아레나팀 = 2팀
    {
        Click(80,106)
    }
    if 아레나팀 = 3팀
    {
        Click(130,106)
    }
    if 아레나팀 = 4팀
    {
        Click(180,106)
    }
    if 아레나팀 = 5팀
    {
        Click(230,106)
    }
}
}

멈춤확인()
{
    FormatTime, 현재시간, ,m
    if(현재시간 < 마지막동작시간)
    {
        동작하지않은시간 := 60 + 현재시간 - 마지막동작시간
    }
    else
    {
        동작하지않은시간 := 현재시간 - 마지막동작시간
    }

    if(동작하지않은시간 > 5)
    {
        GuiControl,,로그,【팅김감지】 블루스택 재시작후 처음부터진행합니다||
        IfWinExist
        {

            Winclose, BlueStacks App Player
            Sleep, 2000
            Run, "C:\Program Files (x86)\BlueStacks\HD-StartLauncher.exe"
            재부팅 := 1
            재부팅함수()
        
            IfWinNotExist
            {
                
                run, "C:\Program Files (x86)\BlueStacks\HD-StartLauncher.exe"
                Sleep, 5000
                재부팅 := 1
                재부팅함수()
            
            }
        
            FormatTime, 마지막동작시간, , m
        }
    }
}
return

;---------------------나가기


1턴스킬m()
{
    If(IsImagePlus(ClickX, ClickY, "이미지\모험\게임중1.bmp", 60, 0)
    ||IsImagePlus(ClickX, ClickY, "이미지\모험\게임중2.bmp",60,0))
    {
    멈춤확인()
    GuiControlGet, M11, 11:
    GuiControlGet, M12, 11:
    GuiControlGet, M13, 11:
    GuiControlGet, M14, 11:
    GuiControlGet, M15, 11:
    GuiControlGet, M16, 11:
    GuiControlGet, M17, 11:
    GuiControlGet, M18, 11:
    GuiControlGet, M19, 11:
    GuiControlGet, M110, 11:

        If (M11 = 1) && (스킬클릭 = 0)
        {
            SKimage := "스킬\모험\1.bmp"
            IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
            {
                GuiControl,,로그,【스킬사용】 ＊ 1번스킬 ＊ 사용
                Click(ClickX, ClickY)
                Sleep,300
                스킬클릭 := 1
            }
        }
        else If M12 = 1
        {
            SKimage := "스킬\모험\2.bmp"
            IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
            {
                GuiControl,,로그,【스킬사용】 ＊ 2번스킬 ＊ 사용
                Click(ClickX, ClickY)
                Sleep,300
                스킬클릭 := 1
            }
        }
        else If M13 = 1
        {
            SKimage := "스킬\모험\3.bmp"
            IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
            {
                GuiControl,,로그,【스킬사용】 ＊ 3번스킬 ＊ 사용
                Click(ClickX, ClickY)
                Sleep,300
                스킬클릭 := 1
            }
        }   
        else If M14 = 1
        {
            SKimage := "스킬\모험\4.bmp"
            IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
            {
                GuiControl,,로그,【스킬사용】 ＊ 4번스킬 ＊ 사용
                Click(ClickX, ClickY)
                Sleep,300
                스킬클릭 := 1
            }
        }   
        else If M15 = 1
        {
            ;msgbox, 5스킬체크
            SKimage := "스킬\모험\5.bmp"
            IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
            {
                GuiControl,,로그,【스킬사용】 ＊ 5번스킬 ＊ 사용
                Click(ClickX, ClickY)
                Sleep,300
                스킬클릭 := 1
            }
        }
        else If M16 = 1
        {
            SKimage := "스킬\모험\6.bmp"
            IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
            {
                GuiControl,,로그,【스킬사용】 ＊ 6번스킬 ＊ 사용
                Click(ClickX, ClickY)
                Sleep,300
                스킬클릭 := 1
            }
        }
        else If M17 = 1
        {
            SKimage := "스킬\모험\7.bmp"
            IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
            {
                GuiControl,,로그,【스킬사용】 ＊ 7번스킬 ＊ 사용
                Click(ClickX, ClickY)
                Sleep,300
                스킬클릭 := 1
            }
        }
        else If M18 = 1
        {
            SKimage := "스킬\모험\8.bmp"
            IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
            {
                GuiControl,,로그,【스킬사용】 ＊ 8번스킬 ＊ 사용
                Click(ClickX, ClickY)
                Sleep,300
                스킬클릭 := 1
            }
        }
        else If M19 = 1
        {
            SKimage := "스킬\모험\9.bmp"
            IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
            {
                GuiControl,,로그,【스킬사용】 ＊ 9번스킬 ＊ 사용
                Click(ClickX, ClickY)
                Sleep,300
                스킬클릭 := 1
            }
        }
        else If M110 = 1
        {
            SKimage := "스킬\모험\10.bmp"
            IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
            {
                GuiControl,,로그,【스킬사용】 ＊ 10번스킬 ＊ 사용
                Click(ClickX, ClickY)
                Sleep,300
                스킬클릭 := 1
            }
        }
    }
}


2턴스킬m()
{
    If(IsImagePlus(ClickX, ClickY, "이미지\모험\게임중1.bmp", 60, 0)
    ||IsImagePlus(ClickX, ClickY, "이미지\모험\게임중2.bmp",60,0))
    {
    멈춤확인()
    GuiControlGet, M21, 11:
    GuiControlGet, M22, 11:
    GuiControlGet, M23, 11:
    GuiControlGet, M24, 11:
    GuiControlGet, M25, 11:
    GuiControlGet, M26, 11:
    GuiControlGet, M27, 11:
    GuiControlGet, M28, 11:
    GuiControlGet, M29, 11:
    GuiControlGet, M210, 11:
    
    
        If M21 = 1
        {
            SKimage := "스킬\모험\1.bmp"
            IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
            {
                GuiControl,,로그,【스킬사용】 ＊ 1번스킬 ＊ 사용
                Click(ClickX, ClickY)
                Sleep,300
                스킬클릭 := 1
            }
        }
        If M22 = 1
        {
            SKimage := "스킬\모험\2.bmp"
            IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
            {
                GuiControl,,로그,【스킬사용】 ＊ 2번스킬 ＊ 사용
                Click(ClickX, ClickY)
                Sleep,300
                스킬클릭 := 1
            }
        }
        If M23 = 1
        {
            SKimage := "스킬\모험\3.bmp"
            IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
            {
                GuiControl,,로그,【스킬사용】 ＊ 3번스킬 ＊ 사용
                Click(ClickX, ClickY)
                Sleep,300
                스킬클릭 := 1
            }
        }
        If M24 = 1
        {
            SKimage := "스킬\모험\4.bmp"
            IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
            {
                GuiControl,,로그,【스킬사용】 ＊ 4번스킬 ＊ 사용
                Click(ClickX, ClickY)
                Sleep,300
                스킬클릭 := 1
            }
        }
        If M25 = 1
        {
            SKimage := "스킬\모험\5.bmp"
            IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
            {
                GuiControl,,로그,【스킬사용】 ＊ 5번스킬 ＊ 사용
                Click(ClickX, ClickY)
                Sleep,300
                스킬클릭 := 1
            }
        }
        If M26 = 1
        {
            SKimage := "스킬\모험\6.bmp"
            IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
            {
                GuiControl,,로그,【스킬사용】 ＊ 6번스킬 ＊ 사용
                Click(ClickX, ClickY)
                Sleep,300
                스킬클릭 := 1
            }
        }
        If M27 = 1
        {
            SKimage := "스킬\모험\7.bmp"
            IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
            {
                GuiControl,,로그,【스킬사용】 ＊ 7번스킬 ＊ 사용
                Click(ClickX, ClickY)
                Sleep,300
                스킬클릭 := 1
            }
        }
        If M28 = 1
        {
            SKimage := "스킬\모험\8.bmp"
            IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
            {
                GuiControl,,로그,【스킬사용】 ＊ 8번스킬 ＊ 사용
                Click(ClickX, ClickY)
                Sleep,300
                스킬클릭 := 1
            }
        }
        If M29 = 1
        {
            SKimage := "스킬\모험\9.bmp"
            IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
            {
                GuiControl,,로그,【스킬사용】 ＊ 9번스킬 ＊ 사용
                Click(ClickX, ClickY)
                Sleep,300
                스킬클릭 := 1
            }
        }
        If M210 = 1
        {
            SKimage := "스킬\모험\10.bmp"
            IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
            {
                GuiControl,,로그,【스킬사용】 ＊ 10번스킬 ＊ 사용
                Click(ClickX, ClickY)
                Sleep,300
                스킬클릭 := 1
            }
        }
    }
}

3턴스킬M()
{
    If(IsImagePlus(ClickX, ClickY, "이미지\모험\게임중1.bmp", 60, 0)
    ||IsImagePlus(ClickX, ClickY, "이미지\모험\게임중2.bmp",60,0))
    {
    멈춤확인()
    GuiControlGet, M31, 11:
    GuiControlGet, M32, 11:
    GuiControlGet, M33, 11:
    GuiControlGet, M34, 11:
    GuiControlGet, M35, 11:
    GuiControlGet, M36, 11:
    GuiControlGet, M37, 11:
    GuiControlGet, M38, 11:
    GuiControlGet, M39, 11:
    GuiControlGet, M310, 11:
    
        If M31 = 1
        {
            SKimage := "스킬\모험\1.bmp"
            IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
            {
                GuiControl,,로그,【스킬사용】 ＊ 1번스킬 ＊ 사용
                Click(ClickX, ClickY)
                Sleep,300
                스킬클릭 := 1
            }
        }
        If M32 = 1
        {
            SKimage := "스킬\모험\2.bmp"
            IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
            {
                GuiControl,,로그,【스킬사용】 ＊ 2번스킬 ＊ 사용
                Click(ClickX, ClickY)
                Sleep,300
                스킬클릭 := 1
            }
        }
        If M33 = 1
        {
            SKimage := "스킬\모험\3.bmp"
            IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
            {
                GuiControl,,로그,【스킬사용】 ＊ 3번스킬 ＊ 사용
                Click(ClickX, ClickY)
                Sleep,300
                스킬클릭 := 1
            }
        }
        If M34 = 1
        {
            SKimage := "스킬\모험\4.bmp"
            IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
            {
                GuiControl,,로그,【스킬사용】 ＊ 4번스킬 ＊ 사용
                Click(ClickX, ClickY)
                Sleep,300
                스킬클릭 := 1
            }
        }
        If M35 = 1
        {
            SKimage := "스킬\모험\5.bmp"
            IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
            {
                GuiControl,,로그,【스킬사용】 ＊ 5번스킬 ＊ 사용
                Click(ClickX, ClickY)
                Sleep,300
                스킬클릭 := 1
            }
        }
        If M36 = 1
        {
            SKimage := "스킬\모험\6.bmp"
            IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
            {
                GuiControl,,로그,【스킬사용】 ＊ 6번스킬 ＊ 사용
                Click(ClickX, ClickY)
                Sleep,300
                스킬클릭 := 1
            }
        }
        If M37 = 1
        {
            SKimage := "스킬\모험\7.bmp"
            IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
            {
                GuiControl,,로그,【스킬사용】 ＊ 7번스킬 ＊ 사용
                Click(ClickX, ClickY)
                Sleep,300
                스킬클릭 := 1
            }
        }
        If M38 = 1
        {
            SKimage := "스킬\모험\8.bmp"
            IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
            {
                GuiControl,,로그,【스킬사용】 ＊ 8번스킬 ＊ 사용
                Click(ClickX, ClickY)
                Sleep,300
                스킬클릭 := 1
            }
        }
        If M39 = 1
        {
            SKimage := "스킬\모험\9.bmp"
            IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
            {
                GuiControl,,로그,【스킬사용】 ＊ 9번스킬 ＊ 사용
                Click(ClickX, ClickY)
                Sleep,300
                스킬클릭 := 1
            }
        }
        If M310 = 1
        {
            SKimage := "스킬\모험\10.bmp"
            IF(ClicktoSkill(ClickX, ClickY, SKimage,60,0))
            {
                GuiControl,,로그,【스킬사용】 ＊ 10번스킬 ＊ 사용
                Click(ClickX, ClickY)
                Sleep,300
                스킬클릭 := 1
            }
        }
    }
}

Button모두저장:
{
    Gui, Submit, Nohide
    Gui, 2:Submit, Nohide
    Gui, 3:Submit, Nohide
    Gui, 4:Submit, Nohide
    Gui, 5:Submit, Nohide
    Gui, 6:Submit, Nohide
    Gui, 7:Submit, Nohide
    Gui, 8:Submit, Nohide
    Gui, 9:Submit, Nohide
    Gui, 10:Submit, Nohide
    Gui, 11:Submit, Nohide
    
    Iniwrite, %아레나모드%, %A_SCriptDir%\설정\세이브.ini, 주요설정,아레나모드
    Iniwrite, %모험모드%, %A_SCriptDir%\설정\세이브.ini, 주요설정,모험모드
    
    Iniwrite, %요일던전%, %A_SCriptDir%\설정\세이브.ini, 부설정,요일던전
    Iniwrite, %아레나%, %A_SCriptDir%\설정\세이브.ini, 부설정,아레나
    Iniwrite, %나선의탑%, %A_SCriptDir%\설정\세이브.ini, 부설정,나선의탑
    
    Iniwrite, %모험팀%, %A_SCriptDir%\설정\세이브.ini, 팀설정,모험팀
    Iniwrite, %요던팀%, %A_SCriptDir%\설정\세이브.ini, 팀설정,요던팀
    Iniwrite, %아레나팀%, %A_SCriptDir%\설정\세이브.ini, 팀설정,아레나팀
    
    IniWrite, %N11%, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬1, N11
    IniWrite, %N12%, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬1, N12
    IniWrite, %N13%, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬1, N13
    IniWrite, %N14%, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬1, N14
    IniWrite, %N15%, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬1, N15
    IniWrite, %N16%, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬1, N16
    IniWrite, %N17%, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬1, N17
    IniWrite, %N18%, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬1, N18
    IniWrite, %N19%, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬1, N19
    IniWrite, %N110%, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬1, N110
    
    IniWrite, %N21%, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬2, N21
    IniWrite, %N22%, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬2, N22
    IniWrite, %N23%, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬2, N23
    IniWrite, %N24%, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬2, N24
    IniWrite, %N25%, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬2, N25
    IniWrite, %N26%, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬2, N26
    IniWrite, %N27%, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬2, N27
    IniWrite, %N28%, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬2, N28
    IniWrite, %N29%, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬2, N29
    IniWrite, %N210%, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬2, N210
    
    IniWrite, %N31%, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬3, N31
    IniWrite, %N32%, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬3, N32
    IniWrite, %N33%, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬3, N33
    IniWrite, %N34%, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬3, N34
    IniWrite, %N35%, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬3, N35
    IniWrite, %N36%, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬3, N36
    IniWrite, %N37%, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬3, N37
    IniWrite, %N38%, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬3, N38
    IniWrite, %N39%, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬3, N39
    IniWrite, %N310%, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬3, N310
    
    
    ;;모험스킬
    
    iniwrite, %M11%, %A_ScriptDir%\설정\세이브.ini, 모험스킬1, M11
    iniwrite, %M12%, %A_ScriptDir%\설정\세이브.ini, 모험스킬1, M12
    iniwrite, %M13%, %A_ScriptDir%\설정\세이브.ini, 모험스킬1, M13
    iniwrite, %M14%, %A_ScriptDir%\설정\세이브.ini, 모험스킬1, M14
    iniwrite, %M15%, %A_ScriptDir%\설정\세이브.ini, 모험스킬1, M15
    iniwrite, %M16%, %A_ScriptDir%\설정\세이브.ini, 모험스킬1, M16
    iniwrite, %M17%, %A_ScriptDir%\설정\세이브.ini, 모험스킬1, M17
    iniwrite, %M18%, %A_ScriptDir%\설정\세이브.ini, 모험스킬1, M18
    iniwrite, %M19%, %A_ScriptDir%\설정\세이브.ini, 모험스킬1, M19
    iniwrite, %M110%, %A_ScriptDir%\설정\세이브.ini, 모험스킬1, M110
    
    iniwrite, %M21%, %A_ScriptDir%\설정\세이브.ini, 모험스킬2, M21
    iniwrite, %M22%, %A_ScriptDir%\설정\세이브.ini, 모험스킬2, M22
    iniwrite, %M23%, %A_ScriptDir%\설정\세이브.ini, 모험스킬2, M23
    iniwrite, %M24%, %A_ScriptDir%\설정\세이브.ini, 모험스킬2, M24
    iniwrite, %M25%, %A_ScriptDir%\설정\세이브.ini, 모험스킬2, M25
    iniwrite, %M26%, %A_ScriptDir%\설정\세이브.ini, 모험스킬2, M26
    iniwrite, %M27%, %A_ScriptDir%\설정\세이브.ini, 모험스킬2, M27
    iniwrite, %M28%, %A_ScriptDir%\설정\세이브.ini, 모험스킬2, M28
    iniwrite, %M29%, %A_ScriptDir%\설정\세이브.ini, 모험스킬2, M29
    iniwrite, %M210%, %A_ScriptDir%\설정\세이브.ini, 모험스킬2, M210
    
    iniwrite, %M31%, %A_ScriptDir%\설정\세이브.ini, 모험스킬3, M31
    iniwrite, %M32%, %A_ScriptDir%\설정\세이브.ini, 모험스킬3, M32
    iniwrite, %M33%, %A_ScriptDir%\설정\세이브.ini, 모험스킬3, M33
    iniwrite, %M34%, %A_ScriptDir%\설정\세이브.ini, 모험스킬3, M34
    iniwrite, %M35%, %A_ScriptDir%\설정\세이브.ini, 모험스킬3, M35
    iniwrite, %M36%, %A_ScriptDir%\설정\세이브.ini, 모험스킬3, M36
    iniwrite, %M37%, %A_ScriptDir%\설정\세이브.ini, 모험스킬3, M37
    iniwrite, %M38%, %A_ScriptDir%\설정\세이브.ini, 모험스킬3, M38
    iniwrite, %M39%, %A_ScriptDir%\설정\세이브.ini, 모험스킬3, M39
    iniwrite, %M310%, %A_ScriptDir%\설정\세이브.ini, 모험스킬3, M310
    
    
    
    Iniwrite, %주맵선택%, %A_SCriptDir%\설정\세이브.ini, 모험지역,주맵선택
    Iniwrite, %주스테이지%, %A_SCriptDir%\설정\세이브.ini, 모험지역,주스테이지
    
    IniWrite, %루비사용%, %A_ScriptDir%\설정\세이브.ini, 모험방식설정,루비사용
    IniWrite, %자연스테%, %A_ScriptDir%\설정\세이브.ini, 모험방식설정,자연스테
    IniWrite, %모험횟수%, %A_ScriptDir%\설정\세이브.ini, 모험방식설정,모험횟수
    IniWrite, %같은맵%, %A_ScriptDir%\설정\세이브.ini, 모험방식설정,같은맵
    IniWrite, %다음맵%, %A_ScriptDir%\설정\세이브.ini, 모험방식설정,다음맵
    IniWrite, %모험난이도%, %A_ScriptDir%\설정\세이브.ini, 모험방식설정,모험난이도
    
    
    IniWrite, %던전횟수설정%, %A_ScriptDir%\설정\세이브.ini, 던전방식설정,던전횟수설정
    IniWrite, %신전%, %A_ScriptDir%\설정\세이브.ini, 던전방식설정,신전
    IniWrite, %도시락%, %A_ScriptDir%\설정\세이브.ini, 던전방식설정,도시락
    IniWrite, %십이지%, %A_ScriptDir%\설정\세이브.ini, 던전방식설정,십이지
    
    IniWrite, %요던쉬움%, %A_ScriptDir%\설정\세이브.ini, 요던방식설정,요던쉬움
    IniWrite, %요던보통%, %A_ScriptDir%\설정\세이브.ini, 요던방식설정,요던보통
    IniWrite, %요던어려움%, %A_ScriptDir%\설정\세이브.ini, 요던방식설정,요던어려움
    IniWrite, %요던매우어려움%, %A_ScriptDir%\설정\세이브.ini, 요던방식설정,요던매우어려움
    
    IniWrite, %구매공증%, %A_ScriptDir%\설정\세이브.ini, 아레나구매설정,구매공증
    IniWrite, %모두구매%, %A_ScriptDir%\설정\세이브.ini, 아레나구매설정,모두구매
    
    IniWrite, %디지몬교체%, %A_ScriptDir%\설정\세이브.ini, 등반설정,디지몬교체
    IniWrite, %갈수있는데까지%, %A_ScriptDir%\설정\세이브.ini, 등반설정,갈수있는데까지
    
    
    msgbox, 저장되었습니다.
    return
}

Button불러오기:
불러오기()
return

불러오기()
{
    Gui, Submit, Nohide
    Gui, 2:Submit, Nohide
    Gui, 3:Submit, Nohide
    Gui, 4:Submit, Nohide
    Gui, 5:Submit, Nohide
    Gui, 6:Submit, Nohide
    Gui, 7:Submit, Nohide
    Gui, 8:Submit, Nohide
    Gui, 9:Submit, Nohide
    Gui, 10:Submit, Nohide
    Gui, 11:Submit, Nohide
    
    IniRead 모험팀, %A_SCriptDir%\설정\세이브.ini, 팀설정,모험팀
    
    If 모험팀 = 1팀
    {
        GuiControl, 2: Choose,모험팀,1
    }
    
    Else If 모험팀 = 2팀
    {
        GuiControl, 2: Choose, 모험팀,2
    }
       Else If 모험팀 = 3팀
    {
        GuiControl, 2: Choose, 모험팀,3
    }
       Else If 모험팀 = 4팀
    {
        GuiControl, 2: Choose, 모험팀,4
    }
       Else If 모험팀 = 5팀
    {
        GuiControl, 2: Choose, 모험팀,5
    }
    
    Iniread, 아레나모드, %A_SCriptDir%\설정\세이브.ini, 주요설정,아레나모드
    GuiControl,, 아레나모드,%아레나모드%
    Iniread, 모험모드, %A_SCriptDir%\설정\세이브.ini, 주요설정,모험모드
    GuiControl,, 모험모드,%모험모드%
    
    
    Iniread, 요일던전, %A_SCriptDir%\설정\세이브.ini, 부설정,요일던전
    GuiControl,,요일던전,%요일던전%
    Iniread, 아레나, %A_SCriptDir%\설정\세이브.ini, 부설정,아레나
    GuiControl,,아레나,%아레나%
    Iniread, 나선의탑, %A_SCriptDir%\설정\세이브.ini, 부설정,나선의탑
    GuiControl,,나선의탑,%나선의탑%
    
    IniRead 요던팀, %A_SCriptDir%\설정\세이브.ini, 팀설정,요던팀
    IniRead 아레나팀, %A_SCriptDir%\설정\세이브.ini, 팀설정,아레나팀
    
    
    IniRead N11, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬1, N11
    GuiControl, 6:, N11,%N11%
    
    IniRead N12, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬1, N12
    GuiControl, 6:, N12, %N12%
    
    IniRead N13, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬1, N13
    GuiControl, 6:, N13, %N13%
    
    IniRead N14, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬1, N14
    GuiControl, 6:, N14, %N14%
    
    IniRead N15, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬1, N15
    GuiControl, 6:, N15, %N15%
    
    IniRead N16, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬1, N16
    GuiControl, 6:, N16, %N16%
    
    IniRead N17, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬1, N17
    GuiControl, 6:, N17, %N17%
    
    IniRead N18, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬1, N18
    GuiControl, 6:, N18, %N18%
    
    IniRead N19, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬1, N19
    GuiControl, 6:, N19, %N19%
    
    IniRead N110, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬1, N110
    GuiControl, 6:, N110, %N110%
    
    ;;;;;;;;;;;;
    
    IniRead N21, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬2, N21
    GuiControl, 6:, N21,%N21%
    
    IniRead N22, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬2, N22
    GuiControl, 6:, N22, %N22%
    
    IniRead N23, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬2, N23
    GuiControl, 6:, N23, %N23%
    
    IniRead N24, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬2, N24
    GuiControl, 6:, N24, %N24%
    
    IniRead N25, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬2, N25
    GuiControl, 6:, N25, %N25%
    
    IniRead N26, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬2, N26
    GuiControl, 6:, N26, %N26%
    
    IniRead N27, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬2, N27
    GuiControl, 6:, N27, %N27%
    
    IniRead N28, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬2, N28
    GuiControl, 6:, N28, %N28%
    
    IniRead N29, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬2, N29
    GuiControl, 6:, N29, %N29%
    
    IniRead N210, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬2, N210
    GuiControl, 6:, N210, %N210%
    
    ;;;;;;;;;;;
    
    IniRead N31, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬3, N31
    GuiControl, 6:, N31,%N31%
    
    IniRead N32, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬3, N32
    GuiControl, 6:, N32, %N32%
    
    IniRead N33, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬3, N33
    GuiControl, 6:, N33, %N33%
    
    IniRead N34, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬3, N34
    GuiControl, 6:, N34, %N34%
    
    IniRead N35, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬3, N35
    GuiControl, 6:, N35, %N35%
    
    IniRead N36, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬3, N36
    GuiControl, 6:, N36, %N36%
    
    IniRead N37, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬3, N37
    GuiControl, 6:, N37, %N37%
    
    IniRead N38, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬3, N38
    GuiControl, 6:, N38, %N38%
    
    IniRead N39, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬3, N39
    GuiControl, 6:, N39, %N39%
    
    IniRead N310, %A_ScriptDir%\설정\세이브.ini, 나선의탑스킬3, N310
    GuiControl, 6:, N310, %N310%
    
    
    
    ;;모험스킬
    iniread M11, %A_ScriptDir%\설정\세이브.ini, 모험스킬1, M11
    GuiControl, 11:, M11,%M11%
    
    iniread M12, %A_ScriptDir%\설정\세이브.ini, 모험스킬1, M12
    GuiControl, 11:, M12, %M12%
    
    iniread M13, %A_ScriptDir%\설정\세이브.ini, 모험스킬1, M13
    GuiControl, 11:, M13, %M13%
    
    iniread M14, %A_ScriptDir%\설정\세이브.ini, 모험스킬1, M14
    GuiControl, 11:, M14, %M14%
    
    iniread M15, %A_ScriptDir%\설정\세이브.ini, 모험스킬1, M15
    GuiControl, 11:, M15, %M15%
    
    iniread M16, %A_ScriptDir%\설정\세이브.ini, 모험스킬1, M16
    GuiControl, 11:, M16, %M16%
    
    iniread M17, %A_ScriptDir%\설정\세이브.ini, 모험스킬1, M17
    GuiControl, 11:, M17, %M17%
    
    iniread M18, %A_ScriptDir%\설정\세이브.ini, 모험스킬1, M18
    GuiControl, 11:, M18, %M18%
    
    iniread M19, %A_ScriptDir%\설정\세이브.ini, 모험스킬1, M19
    GuiControl, 11:, M19, %M19%
    
    iniread M110, %A_ScriptDir%\설정\세이브.ini, 모험스킬1, M110
    GuiControl, 11:, M110, %M110%
    
    ;;;;;;;;;;;;
    
    iniread M21, %A_ScriptDir%\설정\세이브.ini, 모험스킬2, M21
    GuiControl, 11:, M21,%M21%
    
    iniread M22, %A_ScriptDir%\설정\세이브.ini, 모험스킬2, M22
    GuiControl, 11:, M22, %M22%
    
    iniread M23, %A_ScriptDir%\설정\세이브.ini, 모험스킬2, M23
    GuiControl, 11:, M23, %M23%
    
    iniread M24, %A_ScriptDir%\설정\세이브.ini, 모험스킬2, M24
    GuiControl, 11:, M24, %M24%
    
    iniread M25, %A_ScriptDir%\설정\세이브.ini, 모험스킬2, M25
    GuiControl, 11:, M25, %M25%
    
    iniread M26, %A_ScriptDir%\설정\세이브.ini, 모험스킬2, M26
    GuiControl, 11:, M26, %M26%
    
    iniread M27, %A_ScriptDir%\설정\세이브.ini, 모험스킬2, M27
    GuiControl, 11:, M27, %M27%
    
    iniread M28, %A_ScriptDir%\설정\세이브.ini, 모험스킬2, M28
    GuiControl, 11:, M28, %M28%
    
    iniread M29, %A_ScriptDir%\설정\세이브.ini, 모험스킬2, M29
    GuiControl, 11:, M29, %M29%
    
    iniread M210, %A_ScriptDir%\설정\세이브.ini, 모험스킬2, M210
    GuiControl, 11:, M210, %M210%
    
    ;;;;;;;;;;;;;
    
    iniread M31, %A_ScriptDir%\설정\세이브.ini, 모험스킬3, M31
    GuiControl, 11:, M31, %M31%
    
    iniread M32, %A_ScriptDir%\설정\세이브.ini, 모험스킬3, M32
    GuiControl, 11:, M32, %M32%
    
    iniread M33, %A_ScriptDir%\설정\세이브.ini, 모험스킬3, M33
    GuiControl, 11:, M33, %M33%
    
    iniread M34, %A_ScriptDir%\설정\세이브.ini, 모험스킬3, M34
    GuiControl, 11:, M34, %M34%
    
    iniread M35, %A_ScriptDir%\설정\세이브.ini, 모험스킬3, M35
    GuiControl, 11:, M35, %M35%
    
    iniread M36, %A_ScriptDir%\설정\세이브.ini, 모험스킬3, M36
    GuiControl, 11:, M36, %M36%
    
    iniread M37, %A_ScriptDir%\설정\세이브.ini, 모험스킬3, M37
    GuiControl, 11:, M37, %M37%
    
    iniread M38, %A_ScriptDir%\설정\세이브.ini, 모험스킬3, M38
    GuiControl, 11:, M38, %M38%
    
    iniread M39, %A_ScriptDir%\설정\세이브.ini, 모험스킬3, M39
    GuiControl, 11:, M39, %M39%
    
    iniread M310, %A_ScriptDir%\설정\세이브.ini, 모험스킬3, M310
    GuiControl, 11:, M310, %M310%
    
    
    
    
    
    
    IniRead 주맵선택, %A_SCriptDir%\설정\세이브.ini, 모험지역,주맵선택
    
    If 주맵선택 = 숲
    {
        GuiControl,2: Choose,주맵선택,1
    }
        else If 주맵선택 = 호수
    {
        GuiControl,2: Choose,주맵선택,2
    }
        else If 주맵선택 =사막
    {
        GuiControl,2: Choose,주맵선택,3
    }
        else If 주맵선택 = 늪
    {
        GuiControl,2: Choose,주맵선택,4
    }
        else If 주맵선택 = 얼음
    {
        GuiControl,2: Choose,주맵선택,5
    }
        else If 주맵선택 = 폐허
    {
        GuiControl,2: Choose,주맵선택,6
    }
        else If 주맵선택 = 무한산
    {
        GuiControl,2: Choose,주맵선택,7
    }
        else If 주맵선택 = 해저
    {
        GuiControl,2: Choose,주맵선택,8
    }
        else If 주맵선택 = 마을
    {
        GuiControl,2: Choose,주맵선택,9
    }
        else If 주맵선택 = 인근
    {
        GuiControl,2: Choose,주맵선택,10
    }
    
    
    
    IniRead 주스테이지, %A_SCriptDir%\설정\세이브.ini, 모험지역,주스테이지
    
    If 주스테이지 = 1
    {
        GuiControl,2: Choose,주스테이지,1
    }
        else If 주스테이지 = 2
    {
        GuiControl,2: Choose,주스테이지,2
    }
       else If 주스테이지 = 3
    {
        GuiControl,2: Choose,주스테이지,3
    }
       else If 주스테이지 = 4
    {
        GuiControl,2: Choose,주스테이지,4
    }
       else If 주스테이지 = 5
    {
        GuiControl,2: Choose,주스테이지,5
    }
       else If 주스테이지 = 6
    {
        GuiControl,2: Choose,주스테이지,6
    }
       else If 주스테이지 = 7
    {
        GuiControl,2: Choose,주스테이지,7
    }
       else If 주스테이지 = 8
    {
        GuiControl,2: Choose,주스테이지,8
    }
       else If 주스테이지 = 9
    {
        GuiControl,2: Choose,주스테이지,9
    }
       else If 주스테이지 = 10
    {
        GuiControl,2: Choose,주스테이지,10
    }
    
    IniRead 루비사용, %A_ScriptDir%\설정\세이브.ini, 모험방식설정,루비사용
    GuiControl,2:,루비사용,%루비사용%
    IniRead 자연스테, %A_ScriptDir%\설정\세이브.ini, 모험방식설정,자연스테
    GuiControl,2:,자연스테,%자연스테%
    IniRead 모험횟수, %A_ScriptDir%\설정\세이브.ini, 모험방식설정,모험횟수
    GuiControl,2:,모험횟수,%모험횟수%
    IniRead 같은맵, %A_ScriptDir%\설정\세이브.ini, 모험방식설정,같은맵
    GuiControl,2:,같은맵,%같은맵%
    IniRead 다음맵, %A_ScriptDir%\설정\세이브.ini, 모험방식설정,다음맵
    GuiControl,2:,다음맵,%다음맵%
    IniRead 모험난이도, %A_ScriptDir%\설정\세이브.ini, 모험방식설정,모험난이도
    GuiControl,2:,모험난이도,%모험난이도%
    
    IniRead 던전횟수설정, %A_ScriptDir%\설정\세이브.ini, 던전방식설정,던전횟수설정
    GuiControl,3:,던전횟수설정,%던전횟수설정%
    IniRead 신전, %A_ScriptDir%\설정\세이브.ini, 던전방식설정,신전
    GuiControl,3:,신전,%신전%
    IniRead 도시락, %A_ScriptDir%\설정\세이브.ini, 던전방식설정,도시락
    GuiControl,3:,도시락,%도시락%
    IniRead 십이지, %A_ScriptDir%\설정\세이브.ini, 던전방식설정,십이지
    GuiControl,3:,십이지,%십이지%
    
    IniRead 요던쉬움, %A_ScriptDir%\설정\세이브.ini, 요던방식설정,난이도
    IniRead 요던보통, %A_ScriptDir%\설정\세이브.ini, 요던방식설정,난이도
    IniRead 요던어려움, %A_ScriptDir%\설정\세이브.ini, 요던방식설정,난이도
    IniRead 요던매우어려움, %A_ScriptDir%\설정\세이브.ini, 요던방식설정,난이도
    
    IniRead 구매공증, %A_ScriptDir%\설정\세이브.ini, 아레나구매설정,공증
    IniRead 모두구매, %A_ScriptDir%\설정\세이브.ini, 아레나구매설정,모두구매
    
    IniRead 디지몬교체, %A_ScriptDir%\설정\세이브.ini, 등반설정,디지몬교체
    GuiControl,6:,디지몬교체,%디지몬교체%
    IniRead 갈수있는데까지, %A_ScriptDir%\설정\세이브.ini, 등반설정,갈수있는데까지
    GuiControl,6:,갈수있는데까지,%갈수있는데까지%
    
    ;msgbox, 불러왔습니다
    return
}

Button후원하기:
{
    msgbox, ▶I Love Google Giftcard So Much◀
    return
}


InputKey(ESC)
{
	sleep, %TIME_REFRESH%
	wParam := 27
	lParam := 65537
	WinGet, ActiveID, ID, BlueStacks App Player
	if not getkeystate("Ctrl" , "p")
	{
		PostMessage, 0x100, %wParam%, %lParam%,, ahk_id %ActiveID%
		PostMessage, 0x101, %wParam%, %lParam%,, ahk_id %ActiveID%
		sleep, %TIME_REFRESH%
        GuiControl,,로그, 【키보드】 ESC 누름||
	}
	else if getkeystate("Ctrl" , "p")
	{

		Loop
		{
			if not getkeystate("Ctrl" , "p")
			{
				PostMessage, 0x201, 0, %Coor%,, ahk_id %ActiveID%
				PostMessage, 0x202, 0, %Coor%,, ahk_id %ActiveID%
				sleep, %TIME_REFRESH%
				break
			}
			sleep, 100
		}
	}
}

WithoutlogIsImagePlus(ByRef clickX, ByRef clickY, ImageName, errorRange, trans, sX = 0, sY = 0, eX = 0, eY = 0)
{
    WinGet, Title , ID, BlueStacks App Player
    if(Gdip_ImageSearchWithHwnd(Title, clickX, clickY,ImageName,errorRange,trans, sX, sY, eX, eY))
    {
        return true
    }
	else
	return false
}


IsPixelSquare( ByRef clickX, ByRef clickY, ColorID, sX, sY, eX, eY )
{
	ColorID := "이미지\픽셀\" ColorID ".png"
	WinGet, Title , ID, BlueStacks App Player
	if(WithoutlogIsImagePlus(clickX, clickY, ColorID, 20, 0, sX, sY, eX, eY))
	return true
	else
	return false
}

ClickToImage(ByRef clickX, ByRef clickY, ImageName)
{
    sleep, %TIME_REFRESH%
    Coor := clickX | clickY <<16
    x := clickX
    y := clickY
    WinGet, ActiveID, ID, BlueStacks App Player
    if(clickX= 0 && clickY = 0)
    {
        GuiControl,,로그,【Error】 = 이미지검색 실패
        return false
    }
    Loop
    {
        if not getkeystate("Ctrl" , "p")
        {
            PostMessage, 0x201, 0, %Coor%,, ahk_id %ActiveID%
            PostMessage, 0x202, 0, %Coor%,, ahk_id %ActiveID%
            sleep, %TIME_REFRESH%
            break
        }
        Loop, 100
        {
            if(IsImagePlus(clickX, clickY, ImageName, 60, 0))
            return true
            if(AfterRestart = 1)
            {
                ;log := "# 재시작이 일어났습니다"
                ;AddLog(log)
                return false
            }
        sleep, %TIME_REFRESH%  
        }
        if(A_Index > 10)
        AfterRestart := 1
        if(AfterRestart = 1)
        {
            ;log := "# 재시작이 일어났습니다"
            ;AddLog(log)
            return false
        }
        sleep, 20000
    }
}

ClicktoSkill(ByRef clickX, ByRef clickY, SKImage, errorRange, trans, sX = 0, sY = 0, eX = 0, eY = 0)
{
    WinGet, Title, ID, BlueStacks App Player
    If(Gdip_ImageSearchWithHwnd(Title, ClickX, ClickY, SKImage, errorRange, trans, sX, sY, eX, eY))
    {
        return true
    }
}

IsImageCheck(ByRef ClickX, ByRef ClickY, CKImage, errorRange, trans, sX = 0, sY = 0, eX = 0, eY = 0)
{
    WinGet, Title, ID, BlueStacks App Player
    If(Gdip_ImageSearchWithHwnd(Title, ClickX, ClickY, CKImage, errorRange, trans, sX, sY, eX, eY))
    {
        return true
    }
}

IsImagePlus(ByRef clickX, ByRef clickY, ImageName, errorRange, trans, sX = 0, sY = 0, eX = 0, eY = 0)
{
	WinGet, Title , ID, BlueStacks App Player
	if(Gdip_ImageSearchWithHwnd(Title, clickX, clickY,ImageName,errorRange,trans, sX, sY, eX, eY))
	{
		if(ImageName = "이미지\접근\디소체.bmp"
		|| ImageName = "이미지\접근\공지x.bmp"
		|| ImageName = "이미지\접근\공지x2.bmp"
        || ImageName = "이미지\접근\오늘더이상.bmp"
        || ImageName = "이미지\접근\게임종료.bmp"
        || ImageName = "이미지\접근\전체이용.bmp"
        || ImageName = "이미지\스페셜던전.bmp"
        || ImageName = "이미지\스페셜던전1.bmp"
        || ImageName = "이미지\아레나2.bmp"
        || ImageName = "이미지\아레나3.bmp"
        || ImageName = "이미지\아레나\10점.bmp"
        || ImageName = "이미지\아레나\승리.bmp"
        || ImageName = "이미지\아레나\1점.bmp"
        || ImageName = "이미지\아레나\패배.bmp"
        || ImageName = "이미지\아레나\0.5.bmp"
        || ImageName = "이미지\아레나\입장권부족.bmp"
        || ImageName = "이미지\아레나\입장권부족.bmp"
        || ImageName = "이미지\아레나\입장권부족.bmp"
        || ImageName = "이미지\모험\모험입장.bmp"
        || ImageName = "이미지\나선의탑\나선의탑.bmp"
        || ImageName = "이미지\나선의탑\나탑시작.bmp"
        || ImageName = "이미지\나선의탑\스페셜던전.bmp"
        || ImageName = "이미지\나선의탑\다음스테이지.bmp"
        || ImageName = "이미지\나선의탑\1-1.bmp"
        || ImageName = "이미지\나선의탑\1-2.bmp"
        || ImageName = "이미지\나선의탑\1-3.bmp"
        || ImageName = "이미지\나선의탑\2-2.bmp"
        || ImageName = "이미지\나선의탑\2-3.bmp"
        || ImageName = "이미지\나선의탑\3-3.bmp"
        || ImageName = "이미지\나선의탑\게임중1.bmp"
        || ImageName = "이미지\나선의탑\게임중2.bmp"
        || ImageName = "이미지\나선의탑\행동불능.bmp"
        || ImageName = "이미지\모험\1-1.bmp"
        || ImageName = "이미지\모험\1-2.bmp"
        || ImageName = "이미지\모험\1-3.bmp"
        || ImageName = "이미지\모험\2-2.bmp"
        || ImageName = "이미지\모험\2-3.bmp"
        || ImageName = "이미지\모험\3-3.bmp"
        || ImageName = "이미지\모험\게임중1.bmp"
        || ImageName = "이미지\모험\게임중2.bmp"
        || ImageName = "이미지\맵\%주맵선택%.bmp")
		{
			return true
		}
	}
    else
    return
}




IsMapCheck(ByRef clickX, ByRef clickY, MapName, errorRange, trans, sX = 0, sY = 0, eX = 0, eY = 0)
{
    WinGet, Title , ID, BlueStacks App Player
	if(Gdip_ImageSearchWithHwnd(Title, clickX, clickY,MapName,errorRange,trans, sX, sY, eX, eY))
	{
        GuiControlGet, 주맵선택, 2:
        GuiControlGet, 주스테이지, 2:
        Gui,2: Submit, Nohide
        
        If(MapName = "이미지\맵\%주맵선택%.bmp"
        || MapName = "이미지\맵\해저.bmp"
        || MapName = "이미지\맵\마을.bmp"
        || MapName = "이미지\맵\인근.bmp"
        || MapName = "이미지\맵\숲.bmp"
        || MapName = "이미지\맵\호수.bmp"
        || MapName = "이미지\맵\사막.bmp"
        || MapName = "이미지\맵\늪.bmp"
        || MapName = "이미지\맵\얼음.bmp"
        || MapName = "이미지\맵\폐허.bmp"
        || MapName = "이미지\맵\무한산.bmp"
        || MapName = "이미지\스테이지\%주스테이지%\%주맵선택%%주스테이지%.bmp")
        {
            return true
        }
    }
    else
    return
    
}

Gdip_ImageSearchWithHwnd(Hwnd,Byref X,Byref Y,Image,Variation=0,Trans="",sX = 0,sY = 0,eX = 0,eY = 0)
{
SysGet, wFrame, 7
SysGet, wCaption, 4
gdipToken := Gdip_Startup()
bmpHaystack := Gdip_BitmapFromHwnd(Hwnd)
bmpNeedle := Gdip_CreateBitmapFromFile(Image)
if( sX!= 0 || sY!= 0 || eX!= 0 || eY != 0)
{
sX := sX + wFrame
sY := sY + wCaption + wFrame
eX := eX + wFrame
eY := eY + wCaption + wFrame
}
RET := Gdip_ImageSearch(bmpHaystack,bmpNeedle,LIST,sX,sY,eX,eY,Variation,Trans,1,1)
Gdip_DisposeImage(bmpHaystack)
Gdip_DisposeImage(bmpNeedle)
Gdip_Shutdown(gdipToken)
StringSplit, LISTArray, LIST, `,
X := LISTArray1 - wFrame
Y := LISTArray2 - wCaption - wFrame
;GuiControl,,로그, %bmpHaystack%||%bmpNeedle%||%RET%
if(RET = 1)
{
return true
}
else
{
return false
}
}

Gdip_CropImage(pBitmap, x, y, w, h)
{
pBitmap2 := Gdip_CreateBitmap(w, h), G2 := Gdip_GraphicsFromImage(pBitmap2)
Gdip_DrawImage(G2, pBitmap, 0, 0, w, h, x, y, w, h)
Gdip_DeleteGraphics(G2)
Gdip_DisposeImage(G2)
return pBitmap2
}

Gdip_ImageSearch(pBitmapHaystack,pBitmapNeedle,ByRef OutputList=""
,OuterX1=0,OuterY1=0,OuterX2=0,OuterY2=0,Variation=0,Trans=""
,SearchDirection=1,Instances=1,LineDelim="`n",CoordDelim=",") {
If !( pBitmapHaystack && pBitmapNeedle )
Return -1001
If Variation not between 0 and 255
return -1002
If ( ( OuterX1 < 0 ) || ( OuterY1 < 0 ) )
return -1003
If SearchDirection not between 1 and 8
SearchDirection := 1
If ( Instances < 0 )
Instances := 0
Gdip_GetImageDimensions(pBitmapHaystack,hWidth,hHeight)
If Gdip_LockBits(pBitmapHaystack,0,0,hWidth,hHeight,hStride,hScan,hBitmapData,1)
OR !(hWidth := NumGet(hBitmapData,0))
OR !(hHeight := NumGet(hBitmapData,4))
Return -1004
Gdip_GetImageDimensions(pBitmapNeedle,nWidth,nHeight)
If(Trans = 0)
{
Trans := ""
}
If(Trans = "White")
{
Trans := 0xFFFFFF
}
If(Trans = "Black")
{
Trans := 0x000000
}
If Trans between 0 and 0xFFFFFF
{
pOriginalBmpNeedle := pBitmapNeedle
pBitmapNeedle := Gdip_CloneBitmapArea(pOriginalBmpNeedle,0,0,nWidth,nHeight)
Gdip_SetBitmapTransColor(pBitmapNeedle,Trans)
DumpCurrentNeedle := true
}
If Gdip_LockBits(pBitmapNeedle,0,0,nWidth,nHeight,nStride,nScan,nBitmapData)
OR !(nWidth := NumGet(nBitmapData,0))
OR !(nHeight := NumGet(nBitmapData,4))
{
If ( DumpCurrentNeedle )
Gdip_DisposeImage(pBitmapNeedle)
Gdip_UnlockBits(pBitmapHaystack,hBitmapData)
Return -1005
}
OuterX2 := ( !OuterX2 ? hWidth-nWidth+1 : OuterX2-nWidth+1 )
OuterY2 := ( !OuterY2 ? hHeight-nHeight+1 : OuterY2-nHeight+1 )
OutputCount := Gdip_MultiLockedBitsSearch(hStride,hScan,hWidth,hHeight
,nStride,nScan,nWidth,nHeight,OutputList,OuterX1,OuterY1,OuterX2,OuterY2
,Variation,SearchDirection,Instances,LineDelim,CoordDelim)
Gdip_UnlockBits(pBitmapHaystack,hBitmapData)
Gdip_UnlockBits(pBitmapNeedle,nBitmapData)
If ( DumpCurrentNeedle )
Gdip_DisposeImage(pBitmapNeedle)
Return OutputCount
}
Gdip_SetBitmapTransColor(pBitmap,TransColor) {
static _SetBmpTrans, Ptr, PtrA
if !( _SetBmpTrans ) {
Ptr := A_PtrSize ? "UPtr" : "UInt"
PtrA := Ptr . "*"
MCode_SetBmpTrans := "
            (LTrim Join
            8b44240c558b6c241cc745000000000085c07e77538b5c2410568b74242033c9578b7c2414894c24288da424000000
            0085db7e458bc18d1439b9020000008bff8a0c113a4e0275178a4c38013a4e01750e8a0a3a0e7508c644380300ff450083c0
            0483c204b9020000004b75d38b4c24288b44241c8b5c2418034c242048894c24288944241c75a85f5e5b33c05dc3,405
            34c8b5424388bda41c702000000004585c07e6448897c2410458bd84c8b4424304963f94c8d49010f1f800000000085db7e3
            8498bc1488bd3660f1f440000410fb648023848017519410fb6480138087510410fb6083848ff7507c640020041ff024883c
            00448ffca75d44c03cf49ffcb75bc488b7c241033c05bc3
)"
if ( A_PtrSize == 8 )
MCode_SetBmpTrans := SubStr(MCode_SetBmpTrans,InStr(MCode_SetBmpTrans,",")+1)
else
MCode_SetBmpTrans := SubStr(MCode_SetBmpTrans,1,InStr(MCode_SetBmpTrans,",")-1)
VarSetCapacity(_SetBmpTrans, LEN := StrLen(MCode_SetBmpTrans)//2, 0)
Loop, %LEN%
NumPut("0x" . SubStr(MCode_SetBmpTrans,(2*A_Index)-1,2), _SetBmpTrans, A_Index-1, "uchar")
MCode_SetBmpTrans := ""
DllCall("VirtualProtect", Ptr,&_SetBmpTrans, Ptr,VarSetCapacity(_SetBmpTrans), "uint",0x40, PtrA,0)
}
If !pBitmap
Return -2001
If TransColor not between 0 and 0xFFFFFF
Return -2002
Gdip_GetImageDimensions(pBitmap,W,H)
If !(W && H)
Return -2003
If Gdip_LockBits(pBitmap,0,0,W,H,Stride,Scan,BitmapData)
Return -2004
Gdip_FromARGB(TransColor,A,R,G,B), VarSetCapacity(TransColor,0), VarSetCapacity(TransColor,3,255)
NumPut(B,TransColor,0,"UChar"), NumPut(G,TransColor,1,"UChar"), NumPut(R,TransColor,2,"UChar")
MCount := 0
E := DllCall(&_SetBmpTrans, Ptr,Scan, "int",W, "int",H, "int",Stride, Ptr,&TransColor, "int*",MCount, "cdecl int")
Gdip_UnlockBits(pBitmap,BitmapData)
If ( E != 0 ) {
ErrorLevel := E
Return -2005
}
Return MCount
}
Gdip_MultiLockedBitsSearch(hStride,hScan,hWidth,hHeight,nStride,nScan,nWidth,nHeight
,ByRef OutputList="",OuterX1=0,OuterY1=0,OuterX2=0,OuterY2=0,Variation=0
,SearchDirection=1,Instances=0,LineDelim="`n",CoordDelim=",")
{
OutputList := ""
OutputCount := !Instances
InnerX1 := OuterX1 , InnerY1 := OuterY1
InnerX2 := OuterX2 , InnerY2 := OuterY2
iX := 1, stepX := 1, iY := 1, stepY := 1
Modulo := Mod(SearchDirection,4)
If ( Modulo > 1 )
iY := 2, stepY := 0
If !Mod(Modulo,3)
iX := 2, stepX := 0
P := "Y", N := "X"
If ( SearchDirection > 4 )
P := "X", N := "Y"
iP := i%P%, iN := i%N%
While (!(OutputCount == Instances) && (0 == Gdip_LockedBitsSearch(hStride,hScan,hWidth,hHeight,nStride
,nScan,nWidth,nHeight,FoundX,FoundY,OuterX1,OuterY1,OuterX2,OuterY2,Variation,SearchDirection)))
{
OutputCount++
OutputList .= LineDelim FoundX CoordDelim FoundY
Outer%P%%iP% := Found%P%+step%P%
Inner%N%%iN% := Found%N%+step%N%
Inner%P%1 := Found%P%
Inner%P%2 := Found%P%+1
While (!(OutputCount == Instances) && (0 == Gdip_LockedBitsSearch(hStride,hScan,hWidth,hHeight,nStride
,nScan,nWidth,nHeight,FoundX,FoundY,InnerX1,InnerY1,InnerX2,InnerY2,Variation,SearchDirection)))
{
OutputCount++
OutputList .= LineDelim FoundX CoordDelim FoundY
Inner%N%%iN% := Found%N%+step%N%
}
}
OutputList := SubStr(OutputList,1+StrLen(LineDelim))
OutputCount -= !Instances
Return OutputCount
}
Gdip_LockedBitsSearch(hStride,hScan,hWidth,hHeight,nStride,nScan,nWidth,nHeight
,ByRef x="",ByRef y="",sx1=0,sy1=0,sx2=0,sy2=0,Variation=0,sd=1)
{
static _ImageSearch, Ptr, PtrA
if !( _ImageSearch ) {
Ptr := A_PtrSize ? "UPtr" : "UInt"
PtrA := Ptr . "*"
MCode_ImageSearch := "
            (LTrim Join
            8b44243883ec205355565783f8010f857a0100008b7c2458897c24143b7c24600f8db50b00008b44244c8b5c245c8b
            4c24448b7424548be80fafef896c242490897424683bf30f8d0a0100008d64240033c033db8bf5896c241c895c2420894424
            183b4424480f8d0401000033c08944241085c90f8e9d0000008b5424688b7c24408beb8d34968b54246403df8d4900b80300
            0000803c18008b442410745e8b44243c0fb67c2f020fb64c06028d04113bf87f792bca3bf97c738b44243c0fb64c06018b44
            24400fb67c28018d04113bf87f5a2bca3bf97c548b44243c0fb63b0fb60c068d04113bf87f422bca3bf97c3c8b4424108b7c
            24408b4c24444083c50483c30483c604894424103bc17c818b5c24208b74241c0374244c8b44241840035c24508974241ce9
            2dffffff8b6c24688b5c245c8b4c244445896c24683beb8b6c24240f8c06ffffff8b44244c8b7c24148b7424544703e8897c
            2414896c24243b7c24600f8cd5feffffe96b0a00008b4424348b4c246889088b4424388b4c24145f5e5d890833c05b83c420
            c383f8020f85870100008b7c24604f897c24103b7c24580f8c310a00008b44244c8b5c245c8b4c24448bef0fafe8f7d88944
            24188b4424548b742418896c24288d4900894424683bc30f8d0a0100008d64240033c033db8bf5896c2420895c241c894424
            243b4424480f8d0401000033c08944241485c90f8e9d0000008b5424688b7c24408beb8d34968b54246403df8d4900b80300
            0000803c03008b442414745e8b44243c0fb67c2f020fb64c06028d04113bf87f792bca3bf97c738b44243c0fb64c06018b44
            24400fb67c28018d04113bf87f5a2bca3bf97c548b44243c0fb63b0fb60c068d04113bf87f422bca3bf97c3c8b4424148b7c
            24408b4c24444083c50483c30483c604894424143bc17c818b5c241c8b7424200374244c8b44242440035c245089742420e9
            2dffffff8b6c24688b5c245c8b4c244445896c24683beb8b6c24280f8c06ffffff8b7c24108b4424548b7424184f03ee897c
            2410896c24283b7c24580f8dd5feffffe9db0800008b4424348b4c246889088b4424388b4c24105f5e5d890833c05b83c420
            c383f8030f85650100008b7c24604f897c24103b7c24580f8ca10800008b44244c8b6c245c8b5c24548b4c24448bf70faff0
            4df7d8896c242c897424188944241c8bff896c24683beb0f8c020100008d64240033c033db89742424895c2420894424283b
            4424480f8d76ffffff33c08944241485c90f8e9f0000008b5424688b7c24408beb8d34968b54246403dfeb038d4900b80300
            0000803c03008b442414745e8b44243c0fb67c2f020fb64c06028d04113bf87f752bca3bf97c6f8b44243c0fb64c06018b44
            24400fb67c28018d04113bf87f562bca3bf97c508b44243c0fb63b0fb60c068d04113bf87f3e2bca3bf97c388b4424148b7c
            24408b4c24444083c50483c30483c604894424143bc17c818b5c24208b7424248b4424280374244c40035c2450e92bffffff
            8b6c24688b5c24548b4c24448b7424184d896c24683beb0f8d0affffff8b7c24108b44241c4f03f0897c2410897424183b7c
            24580f8c580700008b6c242ce9d4feffff83f8040f85670100008b7c2458897c24103b7c24600f8d340700008b44244c8b6c
            245c8b5c24548b4c24444d8bf00faff7896c242c8974241ceb098da424000000008bff896c24683beb0f8c020100008d6424
            0033c033db89742424895c2420894424283b4424480f8d06feffff33c08944241485c90f8e9f0000008b5424688b7c24408b
            eb8d34968b54246403dfeb038d4900b803000000803c03008b442414745e8b44243c0fb67c2f020fb64c06028d04113bf87f
            752bca3bf97c6f8b44243c0fb64c06018b4424400fb67c28018d04113bf87f562bca3bf97c508b44243c0fb63b0fb60c068d
            04113bf87f3e2bca3bf97c388b4424148b7c24408b4c24444083c50483c30483c604894424143bc17c818b5c24208b742424
            8b4424280374244c40035c2450e92bffffff8b6c24688b5c24548b4c24448b74241c4d896c24683beb0f8d0affffff8b4424
            4c8b7c24104703f0897c24108974241c3b7c24600f8de80500008b6c242ce9d4feffff83f8050f85890100008b7c2454897c
            24683b7c245c0f8dc40500008b5c24608b6c24588b44244c8b4c2444eb078da42400000000896c24103beb0f8d200100008b
            e80faf6c2458896c241c33c033db8bf5896c2424895c2420894424283b4424480f8d0d01000033c08944241485c90f8ea600
            00008b5424688b7c24408beb8d34968b54246403dfeb0a8da424000000008d4900b803000000803c03008b442414745e8b44
            243c0fb67c2f020fb64c06028d04113bf87f792bca3bf97c738b44243c0fb64c06018b4424400fb67c28018d04113bf87f5a
            2bca3bf97c548b44243c0fb63b0fb60c068d04113bf87f422bca3bf97c3c8b4424148b7c24408b4c24444083c50483c30483
            c604894424143bc17c818b5c24208b7424240374244c8b44242840035c245089742424e924ffffff8b7c24108b6c241c8b44
            244c8b5c24608b4c24444703e8897c2410896c241c3bfb0f8cf3feffff8b7c24688b6c245847897c24683b7c245c0f8cc5fe
            ffffe96b0400008b4424348b4c24688b74241089088b4424385f89305e5d33c05b83c420c383f8060f85670100008b7c2454
            897c24683b7c245c0f8d320400008b6c24608b5c24588b44244c8b4c24444d896c24188bff896c24103beb0f8c1a0100008b
            f50faff0f7d88974241c8944242ceb038d490033c033db89742424895c2420894424283b4424480f8d06fbffff33c0894424
            1485c90f8e9f0000008b5424688b7c24408beb8d34968b54246403dfeb038d4900b803000000803c03008b442414745e8b44
            243c0fb67c2f020fb64c06028d04113bf87f752bca3bf97c6f8b44243c0fb64c06018b4424400fb67c28018d04113bf87f56
            2bca3bf97c508b44243c0fb63b0fb60c068d04113bf87f3e2bca3bf97c388b4424148b7c24408b4c24444083c50483c30483
            c604894424143bc17c818b5c24208b7424248b4424280374244c40035c2450e92bffffff8b6c24108b74241c0374242c8b5c
            24588b4c24444d896c24108974241c3beb0f8d02ffffff8b44244c8b7c246847897c24683b7c245c0f8de60200008b6c2418
            e9c2feffff83f8070f85670100008b7c245c4f897c24683b7c24540f8cc10200008b6c24608b5c24588b44244c8b4c24444d
            896c241890896c24103beb0f8c1a0100008bf50faff0f7d88974241c8944242ceb038d490033c033db89742424895c242089
            4424283b4424480f8d96f9ffff33c08944241485c90f8e9f0000008b5424688b7c24408beb8d34968b54246403dfeb038d49
            00b803000000803c18008b442414745e8b44243c0fb67c2f020fb64c06028d04113bf87f752bca3bf97c6f8b44243c0fb64c
            06018b4424400fb67c28018d04113bf87f562bca3bf97c508b44243c0fb63b0fb60c068d04113bf87f3e2bca3bf97c388b44
            24148b7c24408b4c24444083c50483c30483c604894424143bc17c818b5c24208b7424248b4424280374244c40035c2450e9
            2bffffff8b6c24108b74241c0374242c8b5c24588b4c24444d896c24108974241c3beb0f8d02ffffff8b44244c8b7c24684f
            897c24683b7c24540f8c760100008b6c2418e9c2feffff83f8080f85640100008b7c245c4f897c24683b7c24540f8c510100
            008b5c24608b6c24588b44244c8b4c24448d9b00000000896c24103beb0f8d200100008be80faf6c2458896c241c33c033db
            8bf5896c2424895c2420894424283b4424480f8d9dfcffff33c08944241485c90f8ea60000008b5424688b7c24408beb8d34
            968b54246403dfeb0a8da424000000008d4900b803000000803c03008b442414745e8b44243c0fb67c2f020fb64c06028d04
            113bf87f792bca3bf97c738b44243c0fb64c06018b4424400fb67c28018d04113bf87f5a2bca3bf97c548b44243c0fb63b0f
            b604068d0c103bf97f422bc23bf87c3c8b4424148b7c24408b4c24444083c50483c30483c604894424143bc17c818b5c2420
            8b7424240374244c8b44242840035c245089742424e924ffffff8b7c24108b6c241c8b44244c8b5c24608b4c24444703e889
            7c2410896c241c3bfb0f8cf3feffff8b7c24688b6c24584f897c24683b7c24540f8dc5feffff8b4424345fc700ffffffff8b
            4424345e5dc700ffffffffb85ff0ffff5b83c420c3,4c894c24204c89442418488954241048894c24085355565741544
            155415641574883ec188b8424c80000004d8bd94d8bd0488bda83f8010f85b3010000448b8c24a800000044890c24443b8c2
            4b80000000f8d66010000448bac24900000008b9424c0000000448b8424b00000008bbc2480000000448b9424a0000000418
            bcd410fafc9894c24040f1f84000000000044899424c8000000453bd00f8dfb000000468d2495000000000f1f80000000003
            3ed448bf933f6660f1f8400000000003bac24880000000f8d1701000033db85ff7e7e458bf4448bce442bf64503f7904d63c
            14d03c34180780300745a450fb65002438d040e4c63d84c035c2470410fb64b028d0411443bd07f572bca443bd17c50410fb
            64b01450fb650018d0411443bd07f3e2bca443bd17c37410fb60b450fb6108d0411443bd07f272bca443bd17c204c8b5c247
            8ffc34183c1043bdf7c8fffc54503fd03b42498000000e95effffff8b8424c8000000448b8424b00000008b4c24044c8b5c2
            478ffc04183c404898424c8000000413bc00f8c20ffffff448b0c24448b9424a000000041ffc14103cd44890c24894c24044
            43b8c24b80000000f8cd8feffff488b5c2468488b4c2460b85ff0ffffc701ffffffffc703ffffffff4883c418415f415e415
            d415c5f5e5d5bc38b8424c8000000e9860b000083f8020f858c010000448b8c24b800000041ffc944890c24443b8c24a8000
            0007cab448bac2490000000448b8424c00000008b9424b00000008bbc2480000000448b9424a0000000418bc9410fafcd418
            bc5894c2404f7d8894424080f1f400044899424c8000000443bd20f8d02010000468d2495000000000f1f80000000004533f
            6448bf933f60f1f840000000000443bb424880000000f8d56ffffff33db85ff0f8e81000000418bec448bd62bee4103ef496
            3d24903d3807a03007460440fb64a02418d042a4c63d84c035c2470410fb64b02428d0401443bc87f5d412bc8443bc97c554
            10fb64b01440fb64a01428d0401443bc87f42412bc8443bc97c3a410fb60b440fb60a428d0401443bc87f29412bc8443bc97
            c214c8b5c2478ffc34183c2043bdf7c8a41ffc64503fd03b42498000000e955ffffff8b8424c80000008b9424b00000008b4
            c24044c8b5c2478ffc04183c404898424c80000003bc20f8c19ffffff448b0c24448b9424a0000000034c240841ffc9894c2
            40444890c24443b8c24a80000000f8dd0feffffe933feffff83f8030f85c4010000448b8c24b800000041ffc944898c24c80
            00000443b8c24a80000000f8c0efeffff8b842490000000448b9c24b0000000448b8424c00000008bbc248000000041ffcb4
            18bc98bd044895c24080fafc8f7da890c24895424048b9424a0000000448b542404458beb443bda0f8c13010000468d249d0
            000000066660f1f84000000000033ed448bf933f6660f1f8400000000003bac24880000000f8d0801000033db85ff0f8e960
            00000488b4c2478458bf4448bd6442bf64503f70f1f8400000000004963d24803d1807a03007460440fb64a02438d04164c6
            3d84c035c2470410fb64b02428d0401443bc87f63412bc8443bc97c5b410fb64b01440fb64a01428d0401443bc87f48412bc
            8443bc97c40410fb60b440fb60a428d0401443bc87f2f412bc8443bc97c27488b4c2478ffc34183c2043bdf7c8a8b8424900
            00000ffc54403f803b42498000000e942ffffff8b9424a00000008b8424900000008b0c2441ffcd4183ec04443bea0f8d11f
            fffff448b8c24c8000000448b542404448b5c240841ffc94103ca44898c24c8000000890c24443b8c24a80000000f8dc2fef
            fffe983fcffff488b4c24608b8424c8000000448929488b4c2468890133c0e981fcffff83f8040f857f010000448b8c24a80
            0000044890c24443b8c24b80000000f8d48fcffff448bac2490000000448b9424b00000008b9424c0000000448b8424a0000
            0008bbc248000000041ffca418bcd4489542408410fafc9894c2404669044899424c8000000453bd00f8cf8000000468d249
            5000000000f1f800000000033ed448bf933f6660f1f8400000000003bac24880000000f8df7fbffff33db85ff7e7e458bf44
            48bce442bf64503f7904d63c14d03c34180780300745a450fb65002438d040e4c63d84c035c2470410fb64b028d0411443bd
            07f572bca443bd17c50410fb64b01450fb650018d0411443bd07f3e2bca443bd17c37410fb60b450fb6108d0411443bd07f2
            72bca443bd17c204c8b5c2478ffc34183c1043bdf7c8fffc54503fd03b42498000000e95effffff8b8424c8000000448b842
            4a00000008b4c24044c8b5c2478ffc84183ec04898424c8000000413bc00f8d20ffffff448b0c24448b54240841ffc14103c
            d44890c24894c2404443b8c24b80000000f8cdbfeffffe9defaffff83f8050f85ab010000448b8424a000000044890424443
            b8424b00000000f8dc0faffff8b9424c0000000448bac2498000000448ba424900000008bbc2480000000448b8c24a800000
            0428d0c8500000000898c24c800000044894c2404443b8c24b80000000f8d09010000418bc4410fafc18944240833ed448bf
            833f6660f1f8400000000003bac24880000000f8d0501000033db85ff0f8e87000000448bf1448bce442bf64503f74d63c14
            d03c34180780300745d438d040e4c63d84d03da450fb65002410fb64b028d0411443bd07f5f2bca443bd17c58410fb64b014
            50fb650018d0411443bd07f462bca443bd17c3f410fb60b450fb6108d0411443bd07f2f2bca443bd17c284c8b5c24784c8b5
            42470ffc34183c1043bdf7c8c8b8c24c8000000ffc54503fc4103f5e955ffffff448b4424048b4424088b8c24c80000004c8
            b5c24784c8b54247041ffc04103c4448944240489442408443b8424b80000000f8c0effffff448b0424448b8c24a80000004
            1ffc083c10444890424898c24c8000000443b8424b00000000f8cc5feffffe946f9ffff488b4c24608b042489018b4424044
            88b4c2468890133c0e945f9ffff83f8060f85aa010000448b8c24a000000044894c2404443b8c24b00000000f8d0bf9ffff8
            b8424b8000000448b8424c0000000448ba424900000008bbc2480000000428d0c8d00000000ffc88944240c898c24c800000
            06666660f1f840000000000448be83b8424a80000000f8c02010000410fafc4418bd4f7da891424894424084533f6448bf83
            3f60f1f840000000000443bb424880000000f8df900000033db85ff0f8e870000008be9448bd62bee4103ef4963d24903d38
            07a03007460440fb64a02418d042a4c63d84c035c2470410fb64b02428d0401443bc87f64412bc8443bc97c5c410fb64b014
            40fb64a01428d0401443bc87f49412bc8443bc97c41410fb60b440fb60a428d0401443bc87f30412bc8443bc97c284c8b5c2
            478ffc34183c2043bdf7c8a8b8c24c800000041ffc64503fc03b42498000000e94fffffff8b4424088b8c24c80000004c8b5
            c247803042441ffcd89442408443bac24a80000000f8d17ffffff448b4c24048b44240c41ffc183c10444894c2404898c24c
            8000000443b8c24b00000000f8ccefeffffe991f7ffff488b4c24608b4424048901488b4c246833c0448929e992f7ffff83f
            8070f858d010000448b8c24b000000041ffc944894c2404443b8c24a00000000f8c55f7ffff8b8424b8000000448b8424c00
            00000448ba424900000008bbc2480000000428d0c8d00000000ffc8890424898c24c8000000660f1f440000448be83b8424a
            80000000f8c02010000410fafc4418bd4f7da8954240c8944240833ed448bf833f60f1f8400000000003bac24880000000f8
            d4affffff33db85ff0f8e89000000448bf1448bd6442bf64503f74963d24903d3807a03007460440fb64a02438d04164c63d
            84c035c2470410fb64b02428d0401443bc87f63412bc8443bc97c5b410fb64b01440fb64a01428d0401443bc87f48412bc84
            43bc97c40410fb60b440fb60a428d0401443bc87f2f412bc8443bc97c274c8b5c2478ffc34183c2043bdf7c8a8b8c24c8000
            000ffc54503fc03b42498000000e94fffffff8b4424088b8c24c80000004c8b5c24780344240c41ffcd89442408443bac24a
            80000000f8d17ffffff448b4c24048b042441ffc983e90444894c2404898c24c8000000443b8c24a00000000f8dcefeffffe
            9e1f5ffff83f8080f85ddf5ffff448b8424b000000041ffc84489442404443b8424a00000000f8cbff5ffff8b9424c000000
            0448bac2498000000448ba424900000008bbc2480000000448b8c24a8000000428d0c8500000000898c24c800000044890c2
            4443b8c24b80000000f8d08010000418bc4410fafc18944240833ed448bf833f6660f1f8400000000003bac24880000000f8
            d0501000033db85ff0f8e87000000448bf1448bce442bf64503f74d63c14d03c34180780300745d438d040e4c63d84d03da4
            50fb65002410fb64b028d0411443bd07f5f2bca443bd17c58410fb64b01450fb650018d0411443bd07f462bca443bd17c3f4
            10fb603450fb6108d0c10443bd17f2f2bc2443bd07c284c8b5c24784c8b542470ffc34183c1043bdf7c8c8b8c24c8000000f
            fc54503fc4103f5e955ffffff448b04248b4424088b8c24c80000004c8b5c24784c8b54247041ffc04103c44489042489442
            408443b8424b80000000f8c10ffffff448b442404448b8c24a800000041ffc883e9044489442404898c24c8000000443b842
            4a00000000f8dc6feffffe946f4ffff8b442404488b4c246089018b0424488b4c2468890133c0e945f4ffff
)"
if ( A_PtrSize == 8 )
MCode_ImageSearch := SubStr(MCode_ImageSearch,InStr(MCode_ImageSearch,",")+1)
else
MCode_ImageSearch := SubStr(MCode_ImageSearch,1,InStr(MCode_ImageSearch,",")-1)
VarSetCapacity(_ImageSearch, LEN := StrLen(MCode_ImageSearch)//2, 0)
Loop, %LEN%
NumPut("0x" . SubStr(MCode_ImageSearch,(2*A_Index)-1,2), _ImageSearch, A_Index-1, "uchar")
MCode_ImageSearch := ""
DllCall("VirtualProtect", Ptr,&_ImageSearch, Ptr,VarSetCapacity(_ImageSearch), "uint",0x40, PtrA,0)
}
If ( sx2 < sx1 )
return -3001
If ( sy2 < sy1 )
return -3002
If ( sx2 > (hWidth-nWidth+1) )
return -3003
If ( sy2 > (hHeight-nHeight+1) )
return -3004
If ( sx2-sx1 == 0 )
return -3005
If ( sy2-sy1 == 0 )
return -3006
x := 0, y := 0
, E := DllCall( &_ImageSearch, "int*",x, "int*",y, Ptr,hScan, Ptr,nScan, "int",nWidth, "int",nHeight
, "int",hStride, "int",nStride, "int",sx1, "int",sy1, "int",sx2, "int",sy2, "int",Variation
, "int",sd, "cdecl int")
Return ( E == "" ? -3007 : E )
}
UpdateLayeredWindow(hwnd, hdc, x="", y="", w="", h="", Alpha=255)
{
if ((x != "") && (y != ""))
VarSetCapacity(pt, 8), NumPut(x, pt, 0), NumPut(y, pt, 4)
if (w = "") ||(h = "")
WinGetPos,,, w, h, ahk_id %hwnd%
return DllCall("UpdateLayeredWindow", "uint", hwnd, "uint", 0, "uint", ((x = "") && (y = "")) ? 0 : &pt
, "int64*", w|h<<32, "uint", hdc, "int64*", 0, "uint", 0, "uint*", Alpha<<16|1<<24, "uint", 2)
}
BitBlt(ddc, dx, dy, dw, dh, sdc, sx, sy, Raster="")
{
return DllCall("gdi32\BitBlt", "uint", dDC, "int", dx, "int", dy, "int", dw, "int", dh
, "uint", sDC, "int", sx, "int", sy, "uint", Raster ? Raster : 0x00CC0020)
}
StretchBlt(ddc, dx, dy, dw, dh, sdc, sx, sy, sw, sh, Raster="")
{
return DllCall("gdi32\StretchBlt", "uint", ddc, "int", dx, "int", dy, "int", dw, "int", dh
, "uint", sdc, "int", sx, "int", sy, "int", sw, "int", sh, "uint", Raster ? Raster : 0x00CC0020)
}
SetStretchBltMode(hdc, iStretchMode=4)
{
return DllCall("gdi32\SetStretchBltMode", "uint", hdc, "int", iStretchMode)
}
SetImage(hwnd, hBitmap)
{
SendMessage, 0x172, 0x0, hBitmap,, ahk_id %hwnd%
E := ErrorLevel
DeleteObject(E)
return E
}
SetSysColorToControl(hwnd, SysColor=15)
{
WinGetPos,,, w, h, ahk_id %hwnd%
bc := DllCall("GetSysColor", "Int", SysColor)
pBrushClear := Gdip_BrushCreateSolid(0xff000000 | (bc >> 16 | bc & 0xff00 | (bc & 0xff) << 16))
pBitmap := Gdip_CreateBitmap(w, h), G := Gdip_GraphicsFromImage(pBitmap)
Gdip_FillRectangle(G, pBrushClear, 0, 0, w, h)
hBitmap := Gdip_CreateHBITMAPFromBitmap(pBitmap)
SetImage(hwnd, hBitmap)
Gdip_DeleteBrush(pBrushClear)
Gdip_DeleteGraphics(G), Gdip_DisposeImage(pBitmap), DeleteObject(hBitmap)
return 0
}
Gdip_BitmapFromScreen(Screen=0, Raster="")
{
if (Screen = 0)
{
Sysget, x, 76
Sysget, y, 77
Sysget, w, 78
Sysget, h, 79
}
else if (SubStr(Screen, 1, 5) = "hwnd:")
{
Screen := SubStr(Screen, 6)
if !WinExist( "ahk_id " Screen)
return -2
WinGetPos,,, w, h, ahk_id %Screen%
x := y := 0
hhdc := GetDCEx(Screen, 3)
}
else if (Screen&1 != "")
{
Sysget, M, Monitor, %Screen%
x := MLeft, y := MTop, w := MRight-MLeft, h := MBottom-MTop
}
else
{
StringSplit, S, Screen, |
x := S1, y := S2, w := S3, h := S4
}
if (x = "") || (y = "") || (w = "") || (h = "")
return -1
chdc := CreateCompatibleDC(), hbm := CreateDIBSection(w, h, chdc), obm := SelectObject(chdc, hbm), hhdc := hhdc ? hhdc : GetDC()
BitBlt(chdc, 0, 0, w, h, hhdc, x, y, Raster)
ReleaseDC(hhdc)
pBitmap := Gdip_CreateBitmapFromHBITMAP(hbm)
SelectObject(chdc, obm), DeleteObject(hbm), DeleteDC(hhdc), DeleteDC(chdc)
return pBitmap
}
Gdip_BitmapFromHWND(hwnd)
{
WinGetPos,,, Width, Height, ahk_id %hwnd%
hbm := CreateDIBSection(Width, Height), hdc := CreateCompatibleDC(), obm := SelectObject(hdc, hbm)
PrintWindow(hwnd, hdc)
pBitmap := Gdip_CreateBitmapFromHBITMAP(hbm)
SelectObject(hdc, obm), DeleteObject(hbm), DeleteDC(hdc)
return pBitmap
}
CreateRectF(ByRef RectF, x, y, w, h)
{
VarSetCapacity(RectF, 16)
NumPut(x, RectF, 0, "float"), NumPut(y, RectF, 4, "float"), NumPut(w, RectF, 8, "float"), NumPut(h, RectF, 12, "float")
}
CreateRect(ByRef Rect, x, y, w, h)
{
VarSetCapacity(Rect, 16)
NumPut(x, Rect, 0, "uint"), NumPut(y, Rect, 4, "uint"), NumPut(w, Rect, 8, "uint"), NumPut(h, Rect, 12, "uint")
}
CreateSizeF(ByRef SizeF, w, h)
{
VarSetCapacity(SizeF, 8)
NumPut(w, SizeF, 0, "float"), NumPut(h, SizeF, 4, "float")
}
CreatePointF(ByRef PointF, x, y)
{
VarSetCapacity(PointF, 8)
NumPut(x, PointF, 0, "float"), NumPut(y, PointF, 4, "float")
}
CreateDIBSection(w, h, hdc="", bpp=32, ByRef ppvBits=0)
{
hdc2 := hdc ? hdc : GetDC()
VarSetCapacity(bi, 40, 0)
NumPut(w, bi, 4), NumPut(h, bi, 8), NumPut(40, bi, 0), NumPut(1, bi, 12, "ushort"), NumPut(0, bi, 16), NumPut(bpp, bi, 14, "ushort")
hbm := DllCall("CreateDIBSection", "uint" , hdc2, "uint" , &bi, "uint" , 0, "uint*", ppvBits, "uint" , 0, "uint" , 0)
if !hdc
ReleaseDC(hdc2)
return hbm
}
PrintWindow(hwnd, hdc, Flags=0)
{
return DllCall("PrintWindow", "uint", hwnd, "uint", hdc, "uint", Flags)
}
DestroyIcon(hIcon)
{
return DllCall("DestroyIcon", "uint", hIcon)
}
PaintDesktop(hdc)
{
return DllCall("PaintDesktop", "uint", hdc)
}
CreateCompatibleBitmap(hdc, w, h)
{
return DllCall("gdi32\CreateCompatibleBitmap", "uint", hdc, "int", w, "int", h)
}
CreateCompatibleDC(hdc=0)
{
return DllCall("CreateCompatibleDC", "uint", hdc)
}
SelectObject(hdc, hgdiobj)
{
return DllCall("SelectObject", "uint", hdc, "uint", hgdiobj)
}
DeleteObject(hObject)
{
return DllCall("DeleteObject", "uint", hObject)
}
GetDC(hwnd=0)
{
return DllCall("GetDC", "uint", hwnd)
}
GetDCEx(hwnd, flags=0, hrgnClip=0)
{
return DllCall("GetDCEx", "uint", hwnd, "uint", hrgnClip, "int", flags)
}
ReleaseDC(hdc, hwnd=0)
{
return DllCall("ReleaseDC", "uint", hwnd, "uint", hdc)
}
DeleteDC(hdc)
{
return DllCall("DeleteDC", "uint", hdc)
}
Gdip_LibraryVersion()
{
return 1.45
}
Gdip_BitmapFromBRA(ByRef BRAFromMemIn, File, Alternate=0)
{
if !BRAFromMemIn
return -1
Loop, Parse, BRAFromMemIn, `n
{
if (A_Index = 1)
{
StringSplit, Header, A_LoopField, |
if (Header0 != 4 || Header2 != "BRA!")
return -2
}
else if (A_Index = 2)
{
StringSplit, Info, A_LoopField, |
if (Info0 != 3)
return -3
}
else
break
}
if !Alternate
StringReplace, File, File, \, \\, All
RegExMatch(BRAFromMemIn, "mi`n)^" (Alternate ? File "\|.+?\|(\d+)\|(\d+)" : "\d+\|" File "\|(\d+)\|(\d+)") "$", FileInfo)
if !FileInfo
return -4
hData := DllCall("GlobalAlloc", "uint", 2, "uint", FileInfo2)
pData := DllCall("GlobalLock", "uint", hData)
DllCall("RtlMoveMemory", "uint", pData, "uint", &BRAFromMemIn+Info2+FileInfo1, "uint", FileInfo2)
DllCall("GlobalUnlock", "uint", hData)
DllCall("ole32\CreateStreamOnHGlobal", "uint", hData, "int", 1, "uint*", pStream)
DllCall("gdiplus\GdipCreateBitmapFromStream", "uint", pStream, "uint*", pBitmap)
DllCall(NumGet(NumGet(1*pStream)+8), "uint", pStream)
return pBitmap
}
Gdip_DrawRectangle(pGraphics, pPen, x, y, w, h)
{
return DllCall("gdiplus\GdipDrawRectangle", "uint", pGraphics, "uint", pPen, "float", x, "float", y, "float", w, "float", h)
}
Gdip_DrawRoundedRectangle(pGraphics, pPen, x, y, w, h, r)
{
Gdip_SetClipRect(pGraphics, x-r, y-r, 2*r, 2*r, 4)
Gdip_SetClipRect(pGraphics, x+w-r, y-r, 2*r, 2*r, 4)
Gdip_SetClipRect(pGraphics, x-r, y+h-r, 2*r, 2*r, 4)
Gdip_SetClipRect(pGraphics, x+w-r, y+h-r, 2*r, 2*r, 4)
E := Gdip_DrawRectangle(pGraphics, pPen, x, y, w, h)
Gdip_ResetClip(pGraphics)
Gdip_SetClipRect(pGraphics, x-(2*r), y+r, w+(4*r), h-(2*r), 4)
Gdip_SetClipRect(pGraphics, x+r, y-(2*r), w-(2*r), h+(4*r), 4)
Gdip_DrawEllipse(pGraphics, pPen, x, y, 2*r, 2*r)
Gdip_DrawEllipse(pGraphics, pPen, x+w-(2*r), y, 2*r, 2*r)
Gdip_DrawEllipse(pGraphics, pPen, x, y+h-(2*r), 2*r, 2*r)
Gdip_DrawEllipse(pGraphics, pPen, x+w-(2*r), y+h-(2*r), 2*r, 2*r)
Gdip_ResetClip(pGraphics)
return E
}
Gdip_DrawEllipse(pGraphics, pPen, x, y, w, h)
{
return DllCall("gdiplus\GdipDrawEllipse", "uint", pGraphics, "uint", pPen, "float", x, "float", y, "float", w, "float", h)
}
Gdip_DrawBezier(pGraphics, pPen, x1, y1, x2, y2, x3, y3, x4, y4)
{
return DllCall("gdiplus\GdipDrawBezier", "uint", pgraphics, "uint", pPen
, "float", x1, "float", y1, "float", x2, "float", y2
, "float", x3, "float", y3, "float", x4, "float", y4)
}
Gdip_DrawArc(pGraphics, pPen, x, y, w, h, StartAngle, SweepAngle)
{
return DllCall("gdiplus\GdipDrawArc", "uint", pGraphics, "uint", pPen, "float", x
, "float", y, "float", w, "float", h, "float", StartAngle, "float", SweepAngle)
}
Gdip_DrawPie(pGraphics, pPen, x, y, w, h, StartAngle, SweepAngle)
{
return DllCall("gdiplus\GdipDrawPie", "uint", pGraphics, "uint", pPen, "float", x, "float", y, "float", w, "float", h, "float", StartAngle, "float", SweepAngle)
}
Gdip_DrawLine(pGraphics, pPen, x1, y1, x2, y2)
{
return DllCall("gdiplus\GdipDrawLine", "uint", pGraphics, "uint", pPen
, "float", x1, "float", y1, "float", x2, "float", y2)
}
Gdip_DrawLines(pGraphics, pPen, Points)
{
StringSplit, Points, Points, |
VarSetCapacity(PointF, 8*Points0)
Loop, %Points0%
{
StringSplit, Coord, Points%A_Index%, `,
NumPut(Coord1, PointF, 8*(A_Index-1), "float"), NumPut(Coord2, PointF, (8*(A_Index-1))+4, "float")
}
return DllCall("gdiplus\GdipDrawLines", "uint", pGraphics, "uint", pPen, "uint", &PointF, "int", Points0)
}
Gdip_FillRectangle(pGraphics, pBrush, x, y, w, h)
{
return DllCall("gdiplus\GdipFillRectangle", "uint", pGraphics, "int", pBrush
, "float", x, "float", y, "float", w, "float", h)
}
Gdip_FillRoundedRectangle(pGraphics, pBrush, x, y, w, h, r)
{
Region := Gdip_GetClipRegion(pGraphics)
Gdip_SetClipRect(pGraphics, x-r, y-r, 2*r, 2*r, 4)
Gdip_SetClipRect(pGraphics, x+w-r, y-r, 2*r, 2*r, 4)
Gdip_SetClipRect(pGraphics, x-r, y+h-r, 2*r, 2*r, 4)
Gdip_SetClipRect(pGraphics, x+w-r, y+h-r, 2*r, 2*r, 4)
E := Gdip_FillRectangle(pGraphics, pBrush, x, y, w, h)
Gdip_SetClipRegion(pGraphics, Region, 0)
Gdip_SetClipRect(pGraphics, x-(2*r), y+r, w+(4*r), h-(2*r), 4)
Gdip_SetClipRect(pGraphics, x+r, y-(2*r), w-(2*r), h+(4*r), 4)
Gdip_FillEllipse(pGraphics, pBrush, x, y, 2*r, 2*r)
Gdip_FillEllipse(pGraphics, pBrush, x+w-(2*r), y, 2*r, 2*r)
Gdip_FillEllipse(pGraphics, pBrush, x, y+h-(2*r), 2*r, 2*r)
Gdip_FillEllipse(pGraphics, pBrush, x+w-(2*r), y+h-(2*r), 2*r, 2*r)
Gdip_SetClipRegion(pGraphics, Region, 0)
Gdip_DeleteRegion(Region)
return E
}
Gdip_FillPolygon(pGraphics, pBrush, Points, FillMode=0)
{
StringSplit, Points, Points, |
VarSetCapacity(PointF, 8*Points0)
Loop, %Points0%
{
StringSplit, Coord, Points%A_Index%, `,
NumPut(Coord1, PointF, 8*(A_Index-1), "float"), NumPut(Coord2, PointF, (8*(A_Index-1))+4, "float")
}
return DllCall("gdiplus\GdipFillPolygon", "uint", pGraphics, "uint", pBrush, "uint", &PointF, "int", Points0, "int", FillMode)
}
Gdip_FillPie(pGraphics, pBrush, x, y, w, h, StartAngle, SweepAngle)
{
return DllCall("gdiplus\GdipFillPie", "uint", pGraphics, "uint", pBrush
, "float", x, "float", y, "float", w, "float", h, "float", StartAngle, "float", SweepAngle)
}
Gdip_FillEllipse(pGraphics, pBrush, x, y, w, h)
{
return DllCall("gdiplus\GdipFillEllipse", "uint", pGraphics, "uint", pBrush, "float", x, "float", y, "float", w, "float", h)
}
Gdip_FillRegion(pGraphics, pBrush, Region)
{
return DllCall("gdiplus\GdipFillRegion", "uint", pGraphics, "uint", pBrush, "uint", Region)
}
Gdip_FillPath(pGraphics, pBrush, Path)
{
return DllCall("gdiplus\GdipFillPath", "uint", pGraphics, "uint", pBrush, "uint", Path)
}
Gdip_DrawImagePointsRect(pGraphics, pBitmap, Points, sx="", sy="", sw="", sh="", Matrix=1)
{
StringSplit, Points, Points, |
VarSetCapacity(PointF, 8*Points0)
Loop, %Points0%
{
StringSplit, Coord, Points%A_Index%, `,
NumPut(Coord1, PointF, 8*(A_Index-1), "float"), NumPut(Coord2, PointF, (8*(A_Index-1))+4, "float")
}
if (Matrix&1 = "")
ImageAttr := Gdip_SetImageAttributesColorMatrix(Matrix)
else if (Matrix != 1)
ImageAttr := Gdip_SetImageAttributesColorMatrix("1|0|0|0|0|0|1|0|0|0|0|0|1|0|0|0|0|0|" Matrix "|0|0|0|0|0|1")
if (sx = "" && sy = "" && sw = "" && sh = "")
{
sx := 0, sy := 0
sw := Gdip_GetImageWidth(pBitmap)
sh := Gdip_GetImageHeight(pBitmap)
}
E := DllCall("gdiplus\GdipDrawImagePointsRect", "uint", pGraphics, "uint", pBitmap
, "uint", &PointF, "int", Points0, "float", sx, "float", sy, "float", sw, "float", sh
, "int", 2, "uint", ImageAttr, "uint", 0, "uint", 0)
if ImageAttr
Gdip_DisposeImageAttributes(ImageAttr)
return E
}
Gdip_DrawImage(pGraphics, pBitmap, dx="", dy="", dw="", dh="", sx="", sy="", sw="", sh="", Matrix=1)
{
if (Matrix&1 = "")
ImageAttr := Gdip_SetImageAttributesColorMatrix(Matrix)
else if (Matrix != 1)
ImageAttr := Gdip_SetImageAttributesColorMatrix("1|0|0|0|0|0|1|0|0|0|0|0|1|0|0|0|0|0|" Matrix "|0|0|0|0|0|1")
if (sx = "" && sy = "" && sw = "" && sh = "")
{
if (dx = "" && dy = "" && dw = "" && dh = "")
{
sx := dx := 0, sy := dy := 0
sw := dw := Gdip_GetImageWidth(pBitmap)
sh := dh := Gdip_GetImageHeight(pBitmap)
}
else
{
sx := sy := 0
sw := Gdip_GetImageWidth(pBitmap)
sh := Gdip_GetImageHeight(pBitmap)
}
}
E := DllCall("gdiplus\GdipDrawImageRectRect", "uint", pGraphics, "uint", pBitmap
, "float", dx, "float", dy, "float", dw, "float", dh
, "float", sx, "float", sy, "float", sw, "float", sh
, "int", 2, "uint", ImageAttr, "uint", 0, "uint", 0)
if ImageAttr
Gdip_DisposeImageAttributes(ImageAttr)
return E
}
Gdip_SetImageAttributesColorMatrix(Matrix)
{
VarSetCapacity(ColourMatrix, 100, 0)
Matrix := RegExReplace(RegExReplace(Matrix, "^[^\d-\.]+([\d\.])", "$1", "", 1), "[^\d-\.]+", "|")
StringSplit, Matrix, Matrix, |
Loop, 25
{
Matrix := (Matrix%A_Index% != "") ? Matrix%A_Index% : Mod(A_Index-1, 6) ? 0 : 1
NumPut(Matrix, ColourMatrix, (A_Index-1)*4, "float")
}
DllCall("gdiplus\GdipCreateImageAttributes", "uint*", ImageAttr)
DllCall("gdiplus\GdipSetImageAttributesColorMatrix", "uint", ImageAttr, "int", 1, "int", 1, "uint", &ColourMatrix, "int", 0, "int", 0)
return ImageAttr
}
Gdip_GraphicsFromImage(pBitmap)
{
DllCall("gdiplus\GdipGetImageGraphicsContext", "uint", pBitmap, "uint*", pGraphics)
return pGraphics
}
Gdip_GraphicsFromHDC(hdc)
{
DllCall("gdiplus\GdipCreateFromHDC", "uint", hdc, "uint*", pGraphics)
return pGraphics
}
Gdip_GetDC(pGraphics)
{
DllCall("gdiplus\GdipGetDC", "uint", pGraphics, "uint*", hdc)
return hdc
}
Gdip_ReleaseDC(pGraphics, hdc)
{
return DllCall("gdiplus\GdipReleaseDC", "uint", pGraphics, "uint", hdc)
}
Gdip_GraphicsClear(pGraphics, ARGB=0x00ffffff)
{
return DllCall("gdiplus\GdipGraphicsClear", "uint", pGraphics, "int", ARGB)
}
Gdip_BlurBitmap(pBitmap, Blur)
{
if (Blur > 100) || (Blur < 1)
return -1
sWidth := Gdip_GetImageWidth(pBitmap), sHeight := Gdip_GetImageHeight(pBitmap)
dWidth := sWidth//Blur, dHeight := sHeight//Blur
pBitmap1 := Gdip_CreateBitmap(dWidth, dHeight)
G1 := Gdip_GraphicsFromImage(pBitmap1)
Gdip_SetInterpolationMode(G1, 7)
Gdip_DrawImage(G1, pBitmap, 0, 0, dWidth, dHeight, 0, 0, sWidth, sHeight)
Gdip_DeleteGraphics(G1)
pBitmap2 := Gdip_CreateBitmap(sWidth, sHeight)
G2 := Gdip_GraphicsFromImage(pBitmap2)
Gdip_SetInterpolationMode(G2, 7)
Gdip_DrawImage(G2, pBitmap1, 0, 0, sWidth, sHeight, 0, 0, dWidth, dHeight)
Gdip_DeleteGraphics(G2)
Gdip_DisposeImage(pBitmap1)
return pBitmap2
}
Gdip_SaveBitmapToFile(pBitmap, sOutput, Quality=75)
{
SplitPath, sOutput,,, Extension
if Extension not in BMP,DIB,RLE,JPG,JPEG,JPE,JFIF,GIF,TIF,TIFF,PNG
return -1
Extension := "." Extension
DllCall("gdiplus\GdipGetImageEncodersSize", "uint*", nCount, "uint*", nSize)
VarSetCapacity(ci, nSize)
DllCall("gdiplus\GdipGetImageEncoders", "uint", nCount, "uint", nSize, "uint", &ci)
if !(nCount && nSize)
return -2
Loop, %nCount%
{
Location := NumGet(ci, 76*(A_Index-1)+44)
if !A_IsUnicode
{
nSize := DllCall("WideCharToMultiByte", "uint", 0, "uint", 0, "uint", Location, "int", -1, "uint", 0, "int",  0, "uint", 0, "uint", 0)
VarSetCapacity(sString, nSize)
DllCall("WideCharToMultiByte", "uint", 0, "uint", 0, "uint", Location, "int", -1, "str", sString, "int", nSize, "uint", 0, "uint", 0)
if !InStr(sString, "*" Extension)
continue
}
else
{
nSize := DllCall("WideCharToMultiByte", "uint", 0, "uint", 0, "uint", Location, "int", -1, "uint", 0, "int",  0, "uint", 0, "uint", 0)
sString := ""
Loop, %nSize%
sString .= Chr(NumGet(Location+0, 2*(A_Index-1), "char"))
if !InStr(sString, "*" Extension)
continue
}
pCodec := &ci+76*(A_Index-1)
break
}
if !pCodec
return -3
if (Quality != 75)
{
Quality := (Quality < 0) ? 0 : (Quality > 100) ? 100 : Quality
if Extension in .JPG,.JPEG,.JPE,.JFIF
{
DllCall("gdiplus\GdipGetEncoderParameterListSize", "uint", pBitmap, "uint", pCodec, "uint*", nSize)
VarSetCapacity(EncoderParameters, nSize, 0)
DllCall("gdiplus\GdipGetEncoderParameterList", "uint", pBitmap, "uint", pCodec, "uint", nSize, "uint", &EncoderParameters)
Loop, % NumGet(EncoderParameters)
{
if (NumGet(EncoderParameters, (28*(A_Index-1))+20) = 1) && (NumGet(EncoderParameters, (28*(A_Index-1))+24) = 6)
{
p := (28*(A_Index-1))+&EncoderParameters
NumPut(Quality, NumGet(NumPut(4, NumPut(1, p+0)+20)))
break
}
}
}
}
if !A_IsUnicode
{
nSize := DllCall("MultiByteToWideChar", "uint", 0, "uint", 0, "uint", &sOutput, "int", -1, "uint", 0, "int", 0)
VarSetCapacity(wOutput, nSize*2)
DllCall("MultiByteToWideChar", "uint", 0, "uint", 0, "uint", &sOutput, "int", -1, "uint", &wOutput, "int", nSize)
VarSetCapacity(wOutput, -1)
if !VarSetCapacity(wOutput)
return -4
E := DllCall("gdiplus\GdipSaveImageToFile", "uint", pBitmap, "uint", &wOutput, "uint", pCodec, "uint", p ? p : 0)
}
else
E := DllCall("gdiplus\GdipSaveImageToFile", "uint", pBitmap, "uint", &sOutput, "uint", pCodec, "uint", p ? p : 0)
return E ? -5 : 0
}
Gdip_GetPixel(pBitmap, x, y)
{
DllCall("gdiplus\GdipBitmapGetPixel", "uint", pBitmap, "int", x, "int", y, "uint*", ARGB)
return ARGB
}
Gdip_SetPixel(pBitmap, x, y, ARGB)
{
return DllCall("gdiplus\GdipBitmapSetPixel", "uint", pBitmap, "int", x, "int", y, "int", ARGB)
}
Gdip_GetImageWidth(pBitmap)
{
DllCall("gdiplus\GdipGetImageWidth", "uint", pBitmap, "uint*", Width)
return Width
}
Gdip_GetImageHeight(pBitmap)
{
DllCall("gdiplus\GdipGetImageHeight", "uint", pBitmap, "uint*", Height)
return Height
}
Gdip_GetImageDimensions(pBitmap, ByRef Width, ByRef Height)
{
DllCall("gdiplus\GdipGetImageWidth", "uint", pBitmap, "uint*", Width)
DllCall("gdiplus\GdipGetImageHeight", "uint", pBitmap, "uint*", Height)
}
Gdip_GetDimensions(pBitmap, ByRef Width, ByRef Height)
{
Gdip_GetImageDimensions(pBitmap, Width, Height)
}
Gdip_GetImagePixelFormat(pBitmap)
{
DllCall("gdiplus\GdipGetImagePixelFormat", "uint", pBitmap, "uint*", Format)
return Format
}
Gdip_GetDpiX(pGraphics)
{
DllCall("gdiplus\GdipGetDpiX", "uint", pGraphics, "float*", dpix)
return Round(dpix)
}
Gdip_GetDpiY(pGraphics)
{
DllCall("gdiplus\GdipGetDpiY", "uint", pGraphics, "float*", dpiy)
return Round(dpiy)
}
Gdip_GetImageHorizontalResolution(pBitmap)
{
DllCall("gdiplus\GdipGetImageHorizontalResolution", "uint", pBitmap, "float*", dpix)
return Round(dpix)
}
Gdip_GetImageVerticalResolution(pBitmap)
{
DllCall("gdiplus\GdipGetImageVerticalResolution", "uint", pBitmap, "float*", dpiy)
return Round(dpiy)
}
Gdip_BitmapSetResolution(pBitmap, dpix, dpiy)
{
return DllCall("gdiplus\GdipBitmapSetResolution", "uint", pBitmap, "float", dpix, "float", dpiy)
}
Gdip_CreateBitmapFromFile(sFile, IconNumber=1, IconSize="")
{
SplitPath, sFile,,, ext
if ext in exe,dll
{
Sizes := IconSize ? IconSize : 256 "|" 128 "|" 64 "|" 48 "|" 32 "|" 16
VarSetCapacity(buf, 40)
Loop, Parse, Sizes, |
{
DllCall("PrivateExtractIcons", "str", sFile, "int", IconNumber-1, "int", A_LoopField, "int", A_LoopField, "uint*", hIcon, "uint*", 0, "uint", 1, "uint", 0)
if !hIcon
continue
if !DllCall("GetIconInfo", "uint", hIcon, "uint", &buf)
{
DestroyIcon(hIcon)
continue
}
hbmColor := NumGet(buf, 16)
hbmMask  := NumGet(buf, 12)
if !(hbmColor && DllCall("GetObject", "uint", hbmColor, "int", 24, "uint", &buf))
{
DestroyIcon(hIcon)
continue
}
break
}
if !hIcon
return -1
Width := NumGet(buf, 4, "int"),  Height := NumGet(buf, 8, "int")
hbm := CreateDIBSection(Width, -Height), hdc := CreateCompatibleDC(), obm := SelectObject(hdc, hbm)
if !DllCall("DrawIconEx", "uint", hdc, "int", 0, "int", 0, "uint", hIcon, "uint", Width, "uint", Height, "uint", 0, "uint", 0, "uint", 3)
{
DestroyIcon(hIcon)
return -2
}
VarSetCapacity(dib, 84)
DllCall("GetObject", "uint", hbm, "int", 84, "uint", &dib)
Stride := NumGet(dib, 12), Bits := NumGet(dib, 20)
DllCall("gdiplus\GdipCreateBitmapFromScan0", "int", Width, "int", Height, "int", Stride, "int", 0x26200A, "uint", Bits, "uint*", pBitmapOld)
pBitmap := Gdip_CreateBitmap(Width, Height), G := Gdip_GraphicsFromImage(pBitmap)
Gdip_DrawImage(G, pBitmapOld, 0, 0, Width, Height, 0, 0, Width, Height)
SelectObject(hdc, obm), DeleteObject(hbm), DeleteDC(hdc)
Gdip_DeleteGraphics(G), Gdip_DisposeImage(pBitmapOld)
DestroyIcon(hIcon)
}
else
{
if !A_IsUnicode
{
VarSetCapacity(wFile, 1023)
DllCall("kernel32\MultiByteToWideChar", "uint", 0, "uint", 0, "uint", &sFile, "int", -1, "uint", &wFile, "int", 512)
DllCall("gdiplus\GdipCreateBitmapFromFile", "uint", &wFile, "uint*", pBitmap)
}
else
DllCall("gdiplus\GdipCreateBitmapFromFile", "uint", &sFile, "uint*", pBitmap)
}
return pBitmap
}
Gdip_CreateBitmapFromHBITMAP(hBitmap, Palette=0)
{
DllCall("gdiplus\GdipCreateBitmapFromHBITMAP", "uint", hBitmap, "uint", Palette, "uint*", pBitmap)
return pBitmap
}
Gdip_CreateHBITMAPFromBitmap(pBitmap, Background=0xffffffff)
{
DllCall("gdiplus\GdipCreateHBITMAPFromBitmap", "uint", pBitmap, "uint*", hbm, "int", Background)
return hbm
}
Gdip_CreateBitmapFromHICON(hIcon)
{
DllCall("gdiplus\GdipCreateBitmapFromHICON", "uint", hIcon, "uint*", pBitmap)
return pBitmap
}
Gdip_CreateHICONFromBitmap(pBitmap)
{
DllCall("gdiplus\GdipCreateHICONFromBitmap", "uint", pBitmap, "uint*", hIcon)
return hIcon
}
Gdip_CreateBitmap(Width, Height, Format=0x26200A)
{
DllCall("gdiplus\GdipCreateBitmapFromScan0", "int", Width, "int", Height, "int", 0, "int", Format, "uint", 0, "uint*", pBitmap)
Return pBitmap
}
Gdip_CreateBitmapFromClipboard()
{
if !DllCall("OpenClipboard", "uint", 0)
return -1
if !DllCall("IsClipboardFormatAvailable", "uint", 8)
return -2
if !hBitmap := DllCall("GetClipboardData", "uint", 2)
return -3
if !pBitmap := Gdip_CreateBitmapFromHBITMAP(hBitmap)
return -4
if !DllCall("CloseClipboard")
return -5
DeleteObject(hBitmap)
return pBitmap
}
Gdip_SetBitmapToClipboard(pBitmap)
{
hBitmap := Gdip_CreateHBITMAPFromBitmap(pBitmap)
DllCall("GetObject", "uint", hBitmap, "int", VarSetCapacity(oi, 84, 0), "uint", &oi)
hdib := DllCall("GlobalAlloc", "uint", 2, "uint", 40+NumGet(oi, 44))
pdib := DllCall("GlobalLock", "uint", hdib)
DllCall("RtlMoveMemory", "uint", pdib, "uint", &oi+24, "uint", 40)
DllCall("RtlMoveMemory", "Uint", pdib+40, "Uint", NumGet(oi, 20), "uint", NumGet(oi, 44))
DllCall("GlobalUnlock", "uint", hdib)
DllCall("DeleteObject", "uint", hBitmap)
DllCall("OpenClipboard", "uint", 0)
DllCall("EmptyClipboard")
DllCall("SetClipboardData", "uint", 8, "uint", hdib)
DllCall("CloseClipboard")
}
Gdip_CloneBitmapArea(pBitmap, x, y, w, h, Format=0x26200A)
{
DllCall("gdiplus\GdipCloneBitmapArea", "float", x, "float", y, "float", w, "float", h
, "int", Format, "uint", pBitmap, "uint*", pBitmapDest)
return pBitmapDest
}
Gdip_CreatePen(ARGB, w)
{
DllCall("gdiplus\GdipCreatePen1", "int", ARGB, "float", w, "int", 2, "uint*", pPen)
return pPen
}
Gdip_CreatePenFromBrush(pBrush, w)
{
DllCall("gdiplus\GdipCreatePen2", "uint", pBrush, "float", w, "int", 2, "uint*", pPen)
return pPen
}
Gdip_BrushCreateSolid(ARGB=0xff000000)
{
DllCall("gdiplus\GdipCreateSolidFill", "int", ARGB, "uint*", pBrush)
return pBrush
}
Gdip_BrushCreateHatch(ARGBfront, ARGBback, HatchStyle=0)
{
DllCall("gdiplus\GdipCreateHatchBrush", "int", HatchStyle, "int", ARGBfront, "int", ARGBback, "uint*", pBrush)
return pBrush
}
Gdip_CreateTextureBrush(pBitmap, WrapMode=1, x=0, y=0, w="", h="")
{
if !(w && h)
DllCall("gdiplus\GdipCreateTexture", "uint", pBitmap, "int", WrapMode, "uint*", pBrush)
else
DllCall("gdiplus\GdipCreateTexture2", "uint", pBitmap, "int", WrapMode, "float", x, "float", y, "float", w, "float", h, "uint*", pBrush)
return pBrush
}
Gdip_CreateLineBrush(x1, y1, x2, y2, ARGB1, ARGB2, WrapMode=1)
{
CreatePointF(PointF1, x1, y1), CreatePointF(PointF2, x2, y2)
DllCall("gdiplus\GdipCreateLineBrush", "uint", &PointF1, "uint", &PointF2, "int", ARGB1, "int", ARGB2, "int", WrapMode, "uint*", LGpBrush)
return LGpBrush
}
Gdip_CreateLineBrushFromRect(x, y, w, h, ARGB1, ARGB2, LinearGradientMode=1, WrapMode=1)
{
CreateRectF(RectF, x, y, w, h)
DllCall("gdiplus\GdipCreateLineBrushFromRect", "uint", &RectF, "int", ARGB1, "int", ARGB2, "int", LinearGradientMode, "int", WrapMode, "uint*", LGpBrush)
return LGpBrush
}
Gdip_CloneBrush(pBrush)
{
DllCall("gdiplus\GdipCloneBrush", "uint", pBrush, "uint*", pBrushClone)
return pBrushClone
}
Gdip_DeletePen(pPen)
{
return DllCall("gdiplus\GdipDeletePen", "uint", pPen)
}
Gdip_DeleteBrush(pBrush)
{
return DllCall("gdiplus\GdipDeleteBrush", "uint", pBrush)
}
Gdip_DisposeImage(pBitmap)
{
DllCall("Kernel32.dll\LoadLibrary", "Str", "Gdiplus.dll", "UPtr")
return DllCall("gdiplus\GdipDisposeImage", "uint", pBitmap)
}
Gdip_DeleteGraphics(pGraphics)
{
DllCall("Kernel32.dll\LoadLibrary", "Str", "Gdiplus.dll", "UPtr")
return DllCall("gdiplus\GdipDeleteGraphics", "uint", pGraphics)
}
Gdip_DisposeImageAttributes(ImageAttr)
{
return DllCall("gdiplus\GdipDisposeImageAttributes", "uint", ImageAttr)
}
Gdip_DeleteFont(hFont)
{
return DllCall("gdiplus\GdipDeleteFont", "uint", hFont)
}
Gdip_DeleteStringFormat(hFormat)
{
return DllCall("gdiplus\GdipDeleteStringFormat", "uint", hFormat)
}
Gdip_DeleteFontFamily(hFamily)
{
return DllCall("gdiplus\GdipDeleteFontFamily", "uint", hFamily)
}
Gdip_DeleteMatrix(Matrix)
{
return DllCall("gdiplus\GdipDeleteMatrix", "uint", Matrix)
}
Gdip_TextToGraphics(pGraphics, Text, Options, Font="Arial", Width="", Height="", Measure=0)
{
IWidth := Width, IHeight:= Height
RegExMatch(Options, "i)X([\-\d\.]+)(p*)", xpos)
RegExMatch(Options, "i)Y([\-\d\.]+)(p*)", ypos)
RegExMatch(Options, "i)W([\-\d\.]+)(p*)", Width)
RegExMatch(Options, "i)H([\-\d\.]+)(p*)", Height)
RegExMatch(Options, "i)C(?!(entre|enter))([a-f\d]+)", Colour)
RegExMatch(Options, "i)Top|Up|Bottom|Down|vCentre|vCenter", vPos)
RegExMatch(Options, "i)NoWrap", NoWrap)
RegExMatch(Options, "i)R(\d)", Rendering)
RegExMatch(Options, "i)S(\d+)(p*)", Size)
if !Gdip_DeleteBrush(Gdip_CloneBrush(Colour2))
PassBrush := 1, pBrush := Colour2
if !(IWidth && IHeight) && (xpos2 || ypos2 || Width2 || Height2 || Size2)
return -1
Style := 0, Styles := "Regular|Bold|Italic|BoldItalic|Underline|Strikeout"
Loop, Parse, Styles, |
{
if RegExMatch(Options, "\b" A_loopField)
Style |= (A_LoopField != "StrikeOut") ? (A_Index-1) : 8
}
Align := 0, Alignments := "Near|Left|Centre|Center|Far|Right"
Loop, Parse, Alignments, |
{
if RegExMatch(Options, "\b" A_loopField)
Align |= A_Index//2.1
}
xpos := (xpos1 != "") ? xpos2 ? IWidth*(xpos1/100) : xpos1 : 0
ypos := (ypos1 != "") ? ypos2 ? IHeight*(ypos1/100) : ypos1 : 0
Width := Width1 ? Width2 ? IWidth*(Width1/100) : Width1 : IWidth
Height := Height1 ? Height2 ? IHeight*(Height1/100) : Height1 : IHeight
if !PassBrush
Colour := "0x" (Colour2 ? Colour2 : "ff000000")
Rendering := ((Rendering1 >= 0) && (Rendering1 <= 5)) ? Rendering1 : 4
Size := (Size1 > 0) ? Size2 ? IHeight*(Size1/100) : Size1 : 12
hFamily := Gdip_FontFamilyCreate(Font)
hFont := Gdip_FontCreate(hFamily, Size, Style)
FormatStyle := NoWrap ? 0x4000 | 0x1000 : 0x4000
hFormat := Gdip_StringFormatCreate(FormatStyle)
pBrush := PassBrush ? pBrush : Gdip_BrushCreateSolid(Colour)
if !(hFamily && hFont && hFormat && pBrush && pGraphics)
return !pGraphics ? -2 : !hFamily ? -3 : !hFont ? -4 : !hFormat ? -5 : !pBrush ? -6 : 0
CreateRectF(RC, xpos, ypos, Width, Height)
Gdip_SetStringFormatAlign(hFormat, Align)
Gdip_SetTextRenderingHint(pGraphics, Rendering)
ReturnRC := Gdip_MeasureString(pGraphics, Text, hFont, hFormat, RC)
if vPos
{
StringSplit, ReturnRC, ReturnRC, |
if (vPos = "vCentre") || (vPos = "vCenter")
ypos += (Height-ReturnRC4)//2
else if (vPos = "Top") || (vPos = "Up")
ypos := 0
else if (vPos = "Bottom") || (vPos = "Down")
ypos := Height-ReturnRC4
CreateRectF(RC, xpos, ypos, Width, ReturnRC4)
ReturnRC := Gdip_MeasureString(pGraphics, Text, hFont, hFormat, RC)
}
if !Measure
E := Gdip_DrawString(pGraphics, Text, hFont, hFormat, pBrush, RC)
if !PassBrush
Gdip_DeleteBrush(pBrush)
Gdip_DeleteStringFormat(hFormat)
Gdip_DeleteFont(hFont)
Gdip_DeleteFontFamily(hFamily)
return E ? E : ReturnRC
}
Gdip_DrawString(pGraphics, sString, hFont, hFormat, pBrush, ByRef RectF)
{
if !A_IsUnicode
{
nSize := DllCall("MultiByteToWideChar", "uint", 0, "uint", 0, "uint", &sString, "int", -1, "uint", 0, "int", 0)
VarSetCapacity(wString, nSize*2)
DllCall("MultiByteToWideChar", "uint", 0, "uint", 0, "uint", &sString, "int", -1, "uint", &wString, "int", nSize)
return DllCall("gdiplus\GdipDrawString", "uint", pGraphics
, "uint", &wString, "int", -1, "uint", hFont, "uint", &RectF, "uint", hFormat, "uint", pBrush)
}
else
{
return DllCall("gdiplus\GdipDrawString", "uint", pGraphics
, "uint", &sString, "int", -1, "uint", hFont, "uint", &RectF, "uint", hFormat, "uint", pBrush)
}
}
Gdip_MeasureString(pGraphics, sString, hFont, hFormat, ByRef RectF)
{
VarSetCapacity(RC, 16)
if !A_IsUnicode
{
nSize := DllCall("MultiByteToWideChar", "uint", 0, "uint", 0, "uint", &sString, "int", -1, "uint", 0, "int", 0)
VarSetCapacity(wString, nSize*2)
DllCall("MultiByteToWideChar", "uint", 0, "uint", 0, "uint", &sString, "int", -1, "uint", &wString, "int", nSize)
DllCall("gdiplus\GdipMeasureString", "uint", pGraphics
, "uint", &wString, "int", -1, "uint", hFont, "uint", &RectF, "uint", hFormat, "uint", &RC, "uint*", Chars, "uint*", Lines)
}
else
{
DllCall("gdiplus\GdipMeasureString", "uint", pGraphics
, "uint", &sString, "int", -1, "uint", hFont, "uint", &RectF, "uint", hFormat, "uint", &RC, "uint*", Chars, "uint*", Lines)
}
return &RC ? NumGet(RC, 0, "float") "|" NumGet(RC, 4, "float") "|" NumGet(RC, 8, "float") "|" NumGet(RC, 12, "float") "|" Chars "|" Lines : 0
}
Gdip_SetStringFormatAlign(hFormat, Align)
{
return DllCall("gdiplus\GdipSetStringFormatAlign", "uint", hFormat, "int", Align)
}
Gdip_StringFormatCreate(Format=0, Lang=0)
{
DllCall("gdiplus\GdipCreateStringFormat", "int", Format, "int", Lang, "uint*", hFormat)
return hFormat
}
Gdip_FontCreate(hFamily, Size, Style=0)
{
DllCall("gdiplus\GdipCreateFont", "uint", hFamily, "float", Size, "int", Style, "int", 0, "uint*", hFont)
return hFont
}
Gdip_FontFamilyCreate(Font)
{
if !A_IsUnicode
{
nSize := DllCall("MultiByteToWideChar", "uint", 0, "uint", 0, "uint", &Font, "int", -1, "uint", 0, "int", 0)
VarSetCapacity(wFont, nSize*2)
DllCall("MultiByteToWideChar", "uint", 0, "uint", 0, "uint", &Font, "int", -1, "uint", &wFont, "int", nSize)
DllCall("gdiplus\GdipCreateFontFamilyFromName", "uint", &wFont, "uint", 0, "uint*", hFamily)
}
else
DllCall("gdiplus\GdipCreateFontFamilyFromName", "uint", &Font, "uint", 0, "uint*", hFamily)
return hFamily
}
Gdip_CreateAffineMatrix(m11, m12, m21, m22, x, y)
{
DllCall("gdiplus\GdipCreateMatrix2", "float", m11, "float", m12, "float", m21, "float", m22, "float", x, "float", y, "uint*", Matrix)
return Matrix
}
Gdip_CreateMatrix()
{
DllCall("gdiplus\GdipCreateMatrix", "uint*", Matrix)
return Matrix
}
Gdip_CreatePath(BrushMode=0)
{
DllCall("gdiplus\GdipCreatePath", "int", BrushMode, "uint*", Path)
return Path
}
Gdip_AddPathEllipse(Path, x, y, w, h)
{
return DllCall("gdiplus\GdipAddPathEllipse", "uint", Path, "float", x, "float", y, "float", w, "float", h)
}
Gdip_AddPathPolygon(Path, Points)
{
StringSplit, Points, Points, |
VarSetCapacity(PointF, 8*Points0)
Loop, %Points0%
{
StringSplit, Coord, Points%A_Index%, `,
NumPut(Coord1, PointF, 8*(A_Index-1), "float"), NumPut(Coord2, PointF, (8*(A_Index-1))+4, "float")
}
return DllCall("gdiplus\GdipAddPathPolygon", "uint", Path, "uint", &PointF, "int", Points0)
}
Gdip_DeletePath(Path)
{
return DllCall("gdiplus\GdipDeletePath", "uint", Path)
}
Gdip_SetTextRenderingHint(pGraphics, RenderingHint)
{
return DllCall("gdiplus\GdipSetTextRenderingHint", "uint", pGraphics, "int", RenderingHint)
}
Gdip_SetInterpolationMode(pGraphics, InterpolationMode)
{
return DllCall("gdiplus\GdipSetInterpolationMode", "uint", pGraphics, "int", InterpolationMode)
}
Gdip_SetSmoothingMode(pGraphics, SmoothingMode)
{
return DllCall("gdiplus\GdipSetSmoothingMode", "uint", pGraphics, "int", SmoothingMode)
}
Gdip_SetCompositingMode(pGraphics, CompositingMode=0)
{
return DllCall("gdiplus\GdipSetCompositingMode", "uint", pGraphics, "int", CompositingMode)
}
Gdip_Startup()
{
if !DllCall("GetModuleHandle", "str", "gdiplus")
DllCall("LoadLibrary", "str", "gdiplus")
VarSetCapacity(si, 16, 0), si := Chr(1)
DllCall("gdiplus\GdiplusStartup", "uint*", pToken, "uint", &si, "uint", 0)
return pToken
}
Gdip_Shutdown(pToken)
{
DllCall("Kernel32.dll\LoadLibrary", "Str", "Gdiplus.dll", "UPtr")
DllCall("gdiplus\GdiplusShutdown", "uint", pToken)
if hModule := DllCall("GetModuleHandle", "str", "gdiplus")
DllCall("FreeLibrary", "uint", hModule)
return 0
}
Gdip_RotateWorldTransform(pGraphics, Angle, MatrixOrder=0)
{
return DllCall("gdiplus\GdipRotateWorldTransform", "uint", pGraphics, "float", Angle, "int", MatrixOrder)
}
Gdip_ScaleWorldTransform(pGraphics, x, y, MatrixOrder=0)
{
return DllCall("gdiplus\GdipScaleWorldTransform", "uint", pGraphics, "float", x, "float", y, "int", MatrixOrder)
}
Gdip_TranslateWorldTransform(pGraphics, x, y, MatrixOrder=0)
{
return DllCall("gdiplus\GdipTranslateWorldTransform", "uint", pGraphics, "float", x, "float", y, "int", MatrixOrder)
}
Gdip_ResetWorldTransform(pGraphics)
{
return DllCall("gdiplus\GdipResetWorldTransform", "uint", pGraphics)
}
Gdip_GetRotatedTranslation(Width, Height, Angle, ByRef xTranslation, ByRef yTranslation)
{
pi := 3.14159, TAngle := Angle*(pi/180)
Bound := (Angle >= 0) ? Mod(Angle, 360) : 360-Mod(-Angle, -360)
if ((Bound >= 0) && (Bound <= 90))
xTranslation := Height*Sin(TAngle), yTranslation := 0
else if ((Bound > 90) && (Bound <= 180))
xTranslation := (Height*Sin(TAngle))-(Width*Cos(TAngle)), yTranslation := -Height*Cos(TAngle)
else if ((Bound > 180) && (Bound <= 270))
xTranslation := -(Width*Cos(TAngle)), yTranslation := -(Height*Cos(TAngle))-(Width*Sin(TAngle))
else if ((Bound > 270) && (Bound <= 360))
xTranslation := 0, yTranslation := -Width*Sin(TAngle)
}
Gdip_GetRotatedDimensions(Width, Height, Angle, ByRef RWidth, ByRef RHeight)
{
pi := 3.14159, TAngle := Angle*(pi/180)
if !(Width && Height)
return -1
RWidth := Ceil(Abs(Width*Cos(TAngle))+Abs(Height*Sin(TAngle)))
RHeight := Ceil(Abs(Width*Sin(TAngle))+Abs(Height*Cos(Tangle)))
}
Gdip_ImageRotateFlip(pBitmap, RotateFlipType=1)
{
return DllCall("gdiplus\GdipImageRotateFlip", "uint", pBitmap, "int", RotateFlipType)
}
Gdip_SetClipRect(pGraphics, x, y, w, h, CombineMode=0)
{
return DllCall("gdiplus\GdipSetClipRect", "uint", pGraphics, "float", x, "float", y, "float", w, "float", h, "int", CombineMode)
}
Gdip_SetClipPath(pGraphics, Path, CombineMode=0)
{
return DllCall("gdiplus\GdipSetClipPath", "uint", pGraphics, "uint", Path, "int", CombineMode)
}
Gdip_ResetClip(pGraphics)
{
return DllCall("gdiplus\GdipResetClip", "uint", pGraphics)
}
Gdip_GetClipRegion(pGraphics)
{
Region := Gdip_CreateRegion()
DllCall("gdiplus\GdipGetClip", "uint" pGraphics, "uint*", Region)
return Region
}
Gdip_SetClipRegion(pGraphics, Region, CombineMode=0)
{
return DllCall("gdiplus\GdipSetClipRegion", "uint", pGraphics, "uint", Region, "int", CombineMode)
}
Gdip_CreateRegion()
{
DllCall("gdiplus\GdipCreateRegion", "uint*", Region)
return Region
}
Gdip_DeleteRegion(Region)
{
return DllCall("gdiplus\GdipDeleteRegion", "uint", Region)
}
Gdip_LockBits(pBitmap, x, y, w, h, ByRef Stride, ByRef Scan0, ByRef BitmapData, LockMode = 3, PixelFormat = 0x26200a)
{
CreateRect(Rect, x, y, w, h)
VarSetCapacity(BitmapData, 21, 0)
E := DllCall("Gdiplus\GdipBitmapLockBits", "uint", pBitmap, "uint", &Rect, "uint", LockMode, "int", PixelFormat, "uint", &BitmapData)
Stride := NumGet(BitmapData, 8)
Scan0 := NumGet(BitmapData, 16)
return E
}
Gdip_UnlockBits(pBitmap, ByRef BitmapData)
{
return DllCall("Gdiplus\GdipBitmapUnlockBits", "uint", pBitmap, "uint", &BitmapData)
}
Gdip_SetLockBitPixel(ARGB, Scan0, x, y, Stride)
{
Numput(ARGB, Scan0+0, (x*4)+(y*Stride))
}
Gdip_GetLockBitPixel(Scan0, x, y, Stride)
{
return NumGet(Scan0+0, (x*4)+(y*Stride))
}
Gdip_PixelateBitmap(pBitmap, ByRef pBitmapOut, BlockSize)
{
static PixelateBitmap
if !PixelateBitmap
{
MCode_PixelateBitmap := "83EC388B4424485355568B74245C99F7FE8B5C244C8B6C2448578BF88BCA894C241C897C243485FF0F8E2E0300008B44245"
. "499F7FE897C24448944242833C089542418894424308944242CEB038D490033FF397C2428897C24380F8E750100008BCE0FAFCE894C24408DA4240000"
. "000033C03BF08944241089442460894424580F8E8A0000008B5C242C8D4D028BD52BD183C203895424208D3CBB0FAFFE8BD52BD142895424248BD52BD"
. "103F9897C24148974243C8BCF8BFE8DA424000000008B5C24200FB61C0B03C30FB619015C24588B5C24240FB61C0B015C24600FB61C11015C241083C1"
. "0483EF0175D38B7C2414037C245C836C243C01897C241475B58B7C24388B6C244C8B5C24508B4C244099F7F9894424148B44245899F7F9894424588B4"
. "4246099F7F9894424608B44241099F7F98944241085F60F8E820000008D4B028BC32BC18D68038B44242C8D04B80FAFC68BD32BD142895424248BD32B"
. "D103C18944243C89742420EB038D49008BC88BFE0FB64424148B5C24248804290FB644245888010FB644246088040B0FB644241088040A83C10483EF0"
. "175D58B44243C0344245C836C2420018944243C75BE8B4C24408B5C24508B6C244C8B7C2438473B7C2428897C24380F8C9FFEFFFF8B4C241C33D23954"
. "24180F846401000033C03BF2895424108954246089542458895424148944243C0F8E82000000EB0233D2395424187E6F8B4C243003C80FAF4C245C8B4"
. "424280FAFC68D550203CA8D0C818BC52BC283C003894424208BC52BC2408BFD2BFA8B54241889442424895424408B4424200FB614080FB60101542414"
. "8B542424014424580FB6040A0FB61439014424600154241083C104836C24400175CF8B44243C403BC68944243C7C808B4C24188B4424140FAFCE99F7F"
. "9894424148B44245899F7F9894424588B44246099F7F9894424608B44241099F7F98944241033C08944243C85F60F8E7F000000837C2418007E6F8B4C"
. "243003C80FAF4C245C8B4424280FAFC68D530203CA8D0C818BC32BC283C003894424208BC32BC2408BFB2BFA8B54241889442424895424400FB644241"
. "48B5424208804110FB64424580FB654246088018B4424248814010FB654241088143983C104836C24400175CF8B44243C403BC68944243C7C818B4C24"
. "1C8B44245C0144242C01742430836C2444010F85F4FCFFFF8B44245499F7FE895424188944242885C00F8E890100008BF90FAFFE33D2897C243C89542"
. "45489442438EB0233D233C03BCA89542410895424608954245889542414894424400F8E840000003BF27E738B4C24340FAFCE03C80FAF4C245C034C24"
. "548D55028BC52BC283C003894424208BC52BC2408BFD03CA894424242BFA89742444908B5424200FB6040A0FB611014424148B442424015424580FB61"
. "4080FB6040F015424600144241083C104836C24440175CF8B4424408B7C243C8B4C241C33D2403BC1894424400F8C7CFFFFFF8B44241499F7FF894424"
. "148B44245899F7FF894424588B44246099F7FF894424608B44241099F7FF8944241033C08944244085C90F8E8000000085F67E738B4C24340FAFCE03C"
. "80FAF4C245C034C24548D53028BC32BC283C003894424208BC32BC2408BFB03CA894424242BFA897424448D49000FB65424148B4424208814010FB654"
. "24580FB644246088118B5424248804110FB644241088043983C104836C24440175CF8B4424408B7C243C8B4C241C403BC1894424407C808D04B500000"
. "00001442454836C2438010F858CFEFFFF33D233C03BCA89542410895424608954245889542414894424440F8E9A000000EB048BFF33D2395424180F8E"
. "7D0000008B4C24340FAFCE03C80FAF4C245C8B4424280FAFC68D550203CA8D0C818BC52BC283C003894424208BC52BC240894424248BC52BC28B54241"
. "8895424548DA424000000008B5424200FB6140A015424140FB611015424588B5424240FB6140A015424600FB614010154241083C104836C24540175CF"
. "8B4424448B4C241C403BC1894424440F8C6AFFFFFF0FAF4C24188B44241499F7F9894424148B44245899F7F9894424588B44246099F7F9894424608B4"
. "4241099F7F98944241033C03944241C894424540F8E7B0000008B7C241885FF7E688B4C24340FAFCE03C80FAF4C245C8B4424280FAFC68D530203CA8D"
. "0C818BC32BC283C003894424208BC32BC2408BEB894424242BEA0FB65424148B4424208814010FB65424580FB644246088118B5424248804110FB6442"
. "41088042983C10483EF0175D18B442454403B44241C894424547C855F5E5D33C05B83C438C3"
VarSetCapacity(PixelateBitmap, StrLen(MCode_PixelateBitmap)//2)
Loop % StrLen(MCode_PixelateBitmap)//2
NumPut("0x" SubStr(MCode_PixelateBitmap, (2*A_Index)-1, 2), PixelateBitmap, A_Index-1, "char")
}
Gdip_GetImageDimensions(pBitmap, Width, Height)
if (Width != Gdip_GetImageWidth(pBitmapOut) || Height != Gdip_GetImageHeight(pBitmapOut))
return -1
if (BlockSize > Width || BlockSize > Height)
return -2
E1 := Gdip_LockBits(pBitmap, 0, 0, Width, Height, Stride1, Scan01, BitmapData1)
E2 := Gdip_LockBits(pBitmapOut, 0, 0, Width, Height, Stride2, Scan02, BitmapData2)
if (E1 || E2)
return -3
E := DllCall(&PixelateBitmap, "uint", Scan01, "uint", Scan02, "int", Width, "int", Height, "int", Stride1, "int", BlockSize)
Gdip_UnlockBits(pBitmap, BitmapData1), Gdip_UnlockBits(pBitmapOut, BitmapData2)
return 0
}
Gdip_ToARGB(A, R, G, B)
{
return (A << 24) | (R << 16) | (G << 8) | B
}
Gdip_FromARGB(ARGB, ByRef A, ByRef R, ByRef G, ByRef B)
{
A := (0xff000000 & ARGB) >> 24
R := (0x00ff0000 & ARGB) >> 16
G := (0x0000ff00 & ARGB) >> 8
B := 0x000000ff & ARGB
}
Gdip_AFromARGB(ARGB)
{
return (0xff000000 & ARGB) >> 24
}
Gdip_RFromARGB(ARGB)
{
return (0x00ff0000 & ARGB) >> 16
}
Gdip_GFromARGB(ARGB)
{
return (0x0000ff00 & ARGB) >> 8
}
Gdip_BFromARGB(ARGB)
{
return 0x000000ff & ARGB
}

GuiClose:
ExitApp




